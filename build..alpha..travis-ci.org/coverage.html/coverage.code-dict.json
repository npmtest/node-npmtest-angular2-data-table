{"/home/travis/build/npmtest/node-npmtest-angular2-data-table/test.js":"/* istanbul instrument in package npmtest_angular2_data_table */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/lib.npmtest_angular2_data_table.js":"/* istanbul instrument in package npmtest_angular2_data_table */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_angular2_data_table = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_angular2_data_table = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-angular2-data-table && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_angular2_data_table */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_angular2_data_table\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_angular2_data_table.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_angular2_data_table.rollup.js'] =\n            local.assetsDict['/assets.npmtest_angular2_data_table.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_angular2_data_table.__dirname + '/lib.npmtest_angular2_data_table.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/index.js":"/**\n * angular2-data-table v\"3.0.0\" (https://github.com/swimlane/angular2-data-table)\n * Copyright 2016\n * Licensed under MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Rx\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular2-data-table\", [\"@angular/core\", \"rxjs/Rx\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular2-data-table\"] = factory(require(\"@angular/core\"), require(\"rxjs/Rx\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"angular2-data-table\"] = factory(root[\"@angular/core\"], root[\"rxjs/Rx\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/components/body/body-cell.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar utils_1 = __webpack_require__(\"./src/utils/index.ts\");\r\nvar types_1 = __webpack_require__(\"./src/types/index.ts\");\r\nvar DataTableBodyCellComponent = (function () {\r\n    function DataTableBodyCellComponent(element) {\r\n        this.activate = new core_1.EventEmitter();\r\n        this.isFocused = false;\r\n        this.element = element.nativeElement;\r\n    }\r\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"sorts\", {\r\n        get: function () {\r\n            return this._sorts;\r\n        },\r\n        set: function (val) {\r\n            this._sorts = val;\r\n            this.calcSortDir = this.calcSortDir(val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"isSortActive\", {\r\n        get: function () {\r\n            return !this.sortDir;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"isSortAscending\", {\r\n        get: function () {\r\n            return this.sortDir === types_1.SortDirection.asc;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"isSortDescending\", {\r\n        get: function () {\r\n            return this.sortDir === types_1.SortDirection.desc;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"width\", {\r\n        get: function () {\r\n            return this.column.width;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"height\", {\r\n        get: function () {\r\n            var height = this.rowHeight;\r\n            if (isNaN(height))\r\n                return height;\r\n            return height + 'px';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"value\", {\r\n        get: function () {\r\n            if (!this.row || !this.column || !this.column.prop)\r\n                return '';\r\n            var val = utils_1.deepValueGetter(this.row, this.column.prop);\r\n            var userPipe = this.column.pipe;\r\n            if (userPipe)\r\n                return userPipe.transform(val);\r\n            if (val !== undefined)\r\n                return val;\r\n            return '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DataTableBodyCellComponent.prototype.onFocus = function () {\r\n        this.isFocused = true;\r\n    };\r\n    DataTableBodyCellComponent.prototype.onBlur = function () {\r\n        this.isFocused = false;\r\n    };\r\n    DataTableBodyCellComponent.prototype.onClick = function (event) {\r\n        this.activate.emit({\r\n            type: 'click',\r\n            event: event,\r\n            row: this.row,\r\n            column: this.column,\r\n            value: this.value,\r\n            cellElement: this.element\r\n        });\r\n    };\r\n    DataTableBodyCellComponent.prototype.onDblClick = function (event) {\r\n        this.activate.emit({\r\n            type: 'dblclick',\r\n            event: event,\r\n            row: this.row,\r\n            column: this.column,\r\n            value: this.value,\r\n            cellElement: this.element\r\n        });\r\n    };\r\n    DataTableBodyCellComponent.prototype.onKeyDown = function (event) {\r\n        var keyCode = event.keyCode;\r\n        var isTargetCell = event.target === this.element;\r\n        var isAction = keyCode === utils_1.Keys.return ||\r\n            keyCode === utils_1.Keys.down ||\r\n            keyCode === utils_1.Keys.up ||\r\n            keyCode === utils_1.Keys.left ||\r\n            keyCode === utils_1.Keys.right;\r\n        if (isAction && isTargetCell) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.activate.emit({\r\n                type: 'keydown',\r\n                event: event,\r\n                row: this.row,\r\n                column: this.column,\r\n                value: this.value,\r\n                cellElement: this.element\r\n            });\r\n        }\r\n    };\r\n    DataTableBodyCellComponent.prototype.onCheckboxChange = function (event) {\r\n        this.activate.emit({\r\n            type: 'checkbox',\r\n            event: event,\r\n            row: this.row,\r\n            column: this.column,\r\n            value: this.value,\r\n            cellElement: this.element\r\n        });\r\n    };\r\n    DataTableBodyCellComponent.prototype.calcSortDir = function (sorts) {\r\n        var _this = this;\r\n        if (!sorts)\r\n            return;\r\n        var sort = sorts.find(function (s) {\r\n            return s.prop === _this.column.prop;\r\n        });\r\n        if (sort)\r\n            return sort.dir;\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableBodyCellComponent.prototype, \"row\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableBodyCellComponent.prototype, \"column\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableBodyCellComponent.prototype, \"rowHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyCellComponent.prototype, \"isSelected\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array), \r\n        __metadata('design:paramtypes', [Array])\r\n    ], DataTableBodyCellComponent.prototype, \"sorts\", null);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableBodyCellComponent.prototype, \"activate\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.active'), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyCellComponent.prototype, \"isFocused\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.sort-active'), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyCellComponent.prototype, \"isSortActive\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.sort-asc'), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyCellComponent.prototype, \"isSortAscending\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.sort-desc'), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyCellComponent.prototype, \"isSortDescending\", null);\r\n    __decorate([\r\n        core_1.HostBinding('style.width.px'), \r\n        __metadata('design:type', Number)\r\n    ], DataTableBodyCellComponent.prototype, \"width\", null);\r\n    __decorate([\r\n        core_1.HostBinding('style.height'), \r\n        __metadata('design:type', Object)\r\n    ], DataTableBodyCellComponent.prototype, \"height\", null);\r\n    __decorate([\r\n        core_1.HostListener('focus'), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', void 0)\r\n    ], DataTableBodyCellComponent.prototype, \"onFocus\", null);\r\n    __decorate([\r\n        core_1.HostListener('blur'), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', void 0)\r\n    ], DataTableBodyCellComponent.prototype, \"onBlur\", null);\r\n    __decorate([\r\n        core_1.HostListener('click', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [MouseEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], DataTableBodyCellComponent.prototype, \"onClick\", null);\r\n    __decorate([\r\n        core_1.HostListener('dblclick', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [MouseEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], DataTableBodyCellComponent.prototype, \"onDblClick\", null);\r\n    __decorate([\r\n        core_1.HostListener('keydown', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [KeyboardEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], DataTableBodyCellComponent.prototype, \"onKeyDown\", null);\r\n    DataTableBodyCellComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-body-cell',\r\n            template: \"\\n    <div class=\\\"datatable-body-cell-label\\\">\\n      <label\\n        *ngIf=\\\"column.checkboxable\\\" \\n        class=\\\"datatable-checkbox\\\">\\n        <input \\n          type=\\\"checkbox\\\"\\n          [checked]=\\\"isSelected\\\"\\n          (click)=\\\"onCheckboxChange($event)\\\" \\n        />\\n      </label>\\n      <span\\n        *ngIf=\\\"!column.cellTemplate\\\"\\n        [innerHTML]=\\\"value\\\">\\n      </span>\\n      <template\\n        *ngIf=\\\"column.cellTemplate\\\"\\n        [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n        [ngOutletContext]=\\\"{ value: value, row: row, column: column }\\\">\\n      </template>\\n    </div>\\n  \",\r\n            host: {\r\n                class: 'datatable-body-cell'\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [core_1.ElementRef])\r\n    ], DataTableBodyCellComponent);\r\n    return DataTableBodyCellComponent;\r\n}());\r\nexports.DataTableBodyCellComponent = DataTableBodyCellComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/body/body-row-wrapper.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar DataTableRowWrapperComponent = (function () {\r\n    function DataTableRowWrapperComponent() {\r\n        this.expanded = false;\r\n        this.rowContextmenu = new core_1.EventEmitter(false);\r\n    }\r\n    DataTableRowWrapperComponent.prototype.onContextmenu = function ($event) {\r\n        this.rowContextmenu.emit({ event: $event, row: this.row });\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableRowWrapperComponent.prototype, \"rowDetailTemplate\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableRowWrapperComponent.prototype, \"detailRowHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableRowWrapperComponent.prototype, \"expanded\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableRowWrapperComponent.prototype, \"row\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableRowWrapperComponent.prototype, \"rowContextmenu\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('contextmenu', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [MouseEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], DataTableRowWrapperComponent.prototype, \"onContextmenu\", null);\r\n    DataTableRowWrapperComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-row-wrapper',\r\n            template: \"\\n    <ng-content></ng-content>\\n    <div \\n      *ngIf=\\\"expanded\\\"\\n      [style.height.px]=\\\"detailRowHeight\\\" \\n      class=\\\"datatable-row-detail\\\">\\n      <template\\n        *ngIf=\\\"rowDetailTemplate\\\"\\n        [ngTemplateOutlet]=\\\"rowDetailTemplate\\\"\\n        [ngOutletContext]=\\\"{ row: row }\\\">\\n      </template>\\n    </div>\\n  \",\r\n            host: {\r\n                class: 'datatable-row-wrapper'\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], DataTableRowWrapperComponent);\r\n    return DataTableRowWrapperComponent;\r\n}());\r\nexports.DataTableRowWrapperComponent = DataTableRowWrapperComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/body/body-row.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar utils_1 = __webpack_require__(\"./src/utils/index.ts\");\r\nvar DataTableBodyRowComponent = (function () {\r\n    function DataTableBodyRowComponent(element) {\r\n        this.activate = new core_1.EventEmitter();\r\n        this.element = element.nativeElement;\r\n    }\r\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"columns\", {\r\n        get: function () {\r\n            return this._columns;\r\n        },\r\n        set: function (val) {\r\n            this._columns = val;\r\n            this.recalculateColumns(val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"innerWidth\", {\r\n        get: function () {\r\n            return this._innerWidth;\r\n        },\r\n        set: function (val) {\r\n            this._innerWidth = val;\r\n            this.recalculateColumns();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"isEvenRow\", {\r\n        get: function () {\r\n            return this.row.$$index % 2 === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"isOddRow\", {\r\n        get: function () {\r\n            return this.row.$$index % 2 !== 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DataTableBodyRowComponent.prototype.trackByGroups = function (index, colGroup) {\r\n        return colGroup.type;\r\n    };\r\n    DataTableBodyRowComponent.prototype.stylesByGroup = function (group) {\r\n        var widths = this.columnGroupWidths;\r\n        var offsetX = this.offsetX;\r\n        var styles = {\r\n            width: widths[group] + \"px\"\r\n        };\r\n        if (group === 'left') {\r\n            utils_1.translateXY(styles, offsetX, 0);\r\n        }\r\n        else if (group === 'right') {\r\n            var bodyWidth = parseInt(this.innerWidth + '', 0);\r\n            var totalDiff = widths.total - bodyWidth;\r\n            var offsetDiff = totalDiff - offsetX;\r\n            var offset = (offsetDiff + utils_1.scrollbarWidth) * -1;\r\n            utils_1.translateXY(styles, offset, 0);\r\n        }\r\n        return styles;\r\n    };\r\n    DataTableBodyRowComponent.prototype.onActivate = function (event, index) {\r\n        event.cellIndex = index;\r\n        event.rowElement = this.element;\r\n        this.activate.emit(event);\r\n    };\r\n    DataTableBodyRowComponent.prototype.onKeyDown = function (event) {\r\n        var keyCode = event.keyCode;\r\n        var isTargetRow = event.target === this.element;\r\n        var isAction = keyCode === utils_1.Keys.return ||\r\n            keyCode === utils_1.Keys.down ||\r\n            keyCode === utils_1.Keys.up ||\r\n            keyCode === utils_1.Keys.left ||\r\n            keyCode === utils_1.Keys.right;\r\n        if (isAction && isTargetRow) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.activate.emit({\r\n                type: 'keydown',\r\n                event: event,\r\n                row: this.row,\r\n                rowElement: this.element\r\n            });\r\n        }\r\n    };\r\n    DataTableBodyRowComponent.prototype.recalculateColumns = function (val) {\r\n        if (val === void 0) { val = this.columns; }\r\n        var colsByPin = utils_1.columnsByPin(val);\r\n        this.columnsByPin = utils_1.columnsByPinArr(val);\r\n        this.columnGroupWidths = utils_1.columnGroupWidths(colsByPin, val);\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array), \r\n        __metadata('design:paramtypes', [Array])\r\n    ], DataTableBodyRowComponent.prototype, \"columns\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number), \r\n        __metadata('design:paramtypes', [Number])\r\n    ], DataTableBodyRowComponent.prototype, \"innerWidth\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableBodyRowComponent.prototype, \"row\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableBodyRowComponent.prototype, \"offsetX\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('style.height.px'),\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableBodyRowComponent.prototype, \"rowHeight\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.active'),\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyRowComponent.prototype, \"isSelected\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.datatable-row-even'), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyRowComponent.prototype, \"isEvenRow\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.datatable-row-odd'), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyRowComponent.prototype, \"isOddRow\", null);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableBodyRowComponent.prototype, \"activate\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('keydown', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [KeyboardEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], DataTableBodyRowComponent.prototype, \"onKeyDown\", null);\r\n    DataTableBodyRowComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-body-row',\r\n            template: \"\\n    <div\\n      *ngFor=\\\"let colGroup of columnsByPin; let i = index; trackBy: trackByGroups\\\"\\n      class=\\\"datatable-row-{{colGroup.type}} datatable-row-group\\\"\\n      [ngStyle]=\\\"stylesByGroup(colGroup.type)\\\">\\n      <datatable-body-cell\\n        *ngFor=\\\"let column of colGroup.columns; let ii = index; trackBy: column?.$$id\\\"\\n        tabindex=\\\"-1\\\"\\n        [row]=\\\"row\\\"\\n        [isSelected]=\\\"isSelected\\\"\\n        [column]=\\\"column\\\"\\n        [rowHeight]=\\\"rowHeight\\\"\\n        (activate)=\\\"onActivate($event, ii)\\\">\\n      </datatable-body-cell>\\n    </div>\\n  \",\r\n            host: {\r\n                class: 'datatable-body-row'\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [core_1.ElementRef])\r\n    ], DataTableBodyRowComponent);\r\n    return DataTableBodyRowComponent;\r\n}());\r\nexports.DataTableBodyRowComponent = DataTableBodyRowComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/body/body.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar utils_1 = __webpack_require__(\"./src/utils/index.ts\");\r\nvar types_1 = __webpack_require__(\"./src/types/index.ts\");\r\nvar scroller_component_1 = __webpack_require__(\"./src/components/body/scroller.component.ts\");\r\nvar DataTableBodyComponent = (function () {\r\n    function DataTableBodyComponent() {\r\n        this.selected = [];\r\n        this.scroll = new core_1.EventEmitter();\r\n        this.page = new core_1.EventEmitter();\r\n        this.activate = new core_1.EventEmitter();\r\n        this.select = new core_1.EventEmitter();\r\n        this.detailToggle = new core_1.EventEmitter();\r\n        this.rowContextmenu = new core_1.EventEmitter(false);\r\n        this.rowHeightsCache = new utils_1.RowHeightCache();\r\n        this.temp = [];\r\n        this.offsetY = 0;\r\n        this.indexes = {};\r\n        // declare fn here so we can get access to the `this` property\r\n        this.rowTrackingFn = function (index, row) {\r\n            if (this.trackByProp) {\r\n                return row.$$index + \"-\" + this.trackByProp;\r\n            }\r\n            else {\r\n                return row.$$index;\r\n            }\r\n        }.bind(this);\r\n    }\r\n    Object.defineProperty(DataTableBodyComponent.prototype, \"pageSize\", {\r\n        get: function () {\r\n            return this._pageSize;\r\n        },\r\n        set: function (val) {\r\n            this._pageSize = val;\r\n            this.recalcLayout();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyComponent.prototype, \"rows\", {\r\n        get: function () {\r\n            return this._rows;\r\n        },\r\n        set: function (val) {\r\n            this._rows = val;\r\n            this.recalcLayout();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyComponent.prototype, \"columns\", {\r\n        get: function () {\r\n            return this._columns;\r\n        },\r\n        set: function (val) {\r\n            this._columns = val;\r\n            var colsByPin = utils_1.columnsByPin(val);\r\n            this.columnGroupWidths = utils_1.columnGroupWidths(colsByPin, val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyComponent.prototype, \"offset\", {\r\n        get: function () {\r\n            return this._offset;\r\n        },\r\n        set: function (val) {\r\n            this._offset = val;\r\n            this.recalcLayout();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyComponent.prototype, \"rowCount\", {\r\n        get: function () {\r\n            return this._rowCount;\r\n        },\r\n        set: function (val) {\r\n            this._rowCount = val;\r\n            this.recalcLayout();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyComponent.prototype, \"bodyWidth\", {\r\n        get: function () {\r\n            if (this.scrollbarH) {\r\n                return this.innerWidth + 'px';\r\n            }\r\n            else {\r\n                return '100%';\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyComponent.prototype, \"bodyHeight\", {\r\n        get: function () {\r\n            return this._bodyHeight;\r\n        },\r\n        set: function (val) {\r\n            if (this.scrollbarV) {\r\n                this._bodyHeight = val + 'px';\r\n            }\r\n            else {\r\n                this._bodyHeight = 'auto';\r\n            }\r\n            this.recalcLayout();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyComponent.prototype, \"selectEnabled\", {\r\n        /**\r\n         * Returns if selection is enabled.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DataTableBodyComponent\r\n         */\r\n        get: function () {\r\n            return !!this.selectionType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableBodyComponent.prototype, \"scrollHeight\", {\r\n        /**\r\n         * Property that would calculate the height of scroll bar\r\n         * based on the row heights cache for virtual scroll. Other scenarios\r\n         * calculate scroll height automatically (as height will be undefined).\r\n         *\r\n         * @readonly\r\n         * @type {number}\r\n         * @memberOf DataTableBodyComponent\r\n         */\r\n        get: function () {\r\n            if (this.scrollbarV) {\r\n                return this.rowHeightsCache.query(this.rowCount - 1);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the Y offset given a new offset.\r\n     *\r\n     * @param {number} [offset]\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.updateOffsetY = function (offset) {\r\n        if (this.scrollbarV && offset) {\r\n            // First get the row Index that we need to move to.\r\n            var rowIndex = this.pageSize * offset;\r\n            offset = this.rowHeightsCache.query(rowIndex - 1);\r\n        }\r\n        this.scroller.setOffset(offset || 0);\r\n    };\r\n    /**\r\n     * Body was scrolled, this is mainly useful for\r\n     * when a user is server-side pagination via virtual scroll.\r\n     *\r\n     * @param {*} event\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.onBodyScroll = function (event) {\r\n        var scrollYPos = event.scrollYPos;\r\n        var scrollXPos = event.scrollXPos;\r\n        // if scroll change, trigger update\r\n        // this is mainly used for header cell positions\r\n        if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\r\n            this.scroll.emit({\r\n                offsetY: scrollYPos,\r\n                offsetX: scrollXPos\r\n            });\r\n        }\r\n        this.offsetY = scrollYPos;\r\n        this.offsetX = scrollXPos;\r\n        this.updateIndexes();\r\n        this.updatePage(event.direction);\r\n        this.updateRows();\r\n    };\r\n    /**\r\n     * Updates the page given a direction.\r\n     *\r\n     * @param {string} direction\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.updatePage = function (direction) {\r\n        var offset = this.indexes.first / this.pageSize;\r\n        if (direction === 'up') {\r\n            offset = Math.floor(offset);\r\n        }\r\n        else if (direction === 'down') {\r\n            offset = Math.ceil(offset);\r\n        }\r\n        if (direction !== undefined && !isNaN(offset)) {\r\n            this.page.emit({ offset: offset });\r\n        }\r\n    };\r\n    /**\r\n     * Updates the rows in the view port\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.updateRows = function () {\r\n        var _a = this.indexes, first = _a.first, last = _a.last;\r\n        var rowIndex = first;\r\n        var idx = 0;\r\n        var temp = [];\r\n        while (rowIndex < last && rowIndex < this.rowCount) {\r\n            var row = this.rows[rowIndex];\r\n            if (row) {\r\n                row.$$index = rowIndex;\r\n                temp[idx] = row;\r\n            }\r\n            idx++;\r\n            rowIndex++;\r\n        }\r\n        this.temp = temp;\r\n    };\r\n    /**\r\n     * Calculate row height based on the expanded state of the row.\r\n     *\r\n     * @param {*} row the row for which the height need to be calculated.\r\n     * @returns {number} height of the row.\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.getRowHeight = function (row) {\r\n        // Adding detail row height if its expanded.\r\n        return this.rowHeight +\r\n            (row.$$expanded === 1 ? this.detailRowHeight : 0);\r\n    };\r\n    /**\r\n     * Calculates the styles for the row so that the rows can be moved in 2D space\r\n     * during virtual scroll inside the DOM.   In the below case the Y position is\r\n     * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\r\n     * 100 px then following styles are generated:\r\n     *\r\n     * transform: translate3d(0px, 0px, 0px);    ->  row0\r\n     * transform: translate3d(0px, 30px, 0px);   ->  row1\r\n     * transform: translate3d(0px, 130px, 0px);  ->  row2\r\n     *\r\n     * Row heights have to be calculated based on the row heights cache as we wont\r\n     * be able to determine which row is of what height before hand.  In the above\r\n     * case the positionY of the translate3d for row2 would be the sum of all the\r\n     * heights of the rows before it (i.e. row0 and row1).\r\n     *\r\n     * @param {*} row The row that needs to be placed in the 2D space.\r\n     * @returns {*} Returns the CSS3 style to be applied\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.getRowsStyles = function (row) {\r\n        var rowHeight = this.getRowHeight(row);\r\n        var styles = {\r\n            height: rowHeight + 'px'\r\n        };\r\n        if (this.scrollbarV) {\r\n            var idx = row ? row.$$index : 0;\r\n            // const pos = idx * rowHeight;\r\n            // The position of this row would be the sum of all row heights\r\n            // until the previous row position.\r\n            var pos = this.rowHeightsCache.query(idx - 1);\r\n            utils_1.translateXY(styles, 0, pos);\r\n        }\r\n        return styles;\r\n    };\r\n    /**\r\n     * Hides the loading indicator\r\n     *\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.hideIndicator = function () {\r\n        var _this = this;\r\n        setTimeout(function () { return _this.loadingIndicator = false; }, 500);\r\n    };\r\n    /**\r\n     * Updates the index of the rows in the viewport\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.updateIndexes = function () {\r\n        var first = 0;\r\n        var last = 0;\r\n        if (this.scrollbarV) {\r\n            // Calculation of the first and last indexes will be based on where the\r\n            // scrollY position would be at.  The last index would be the one\r\n            // that shows up inside the view port the last.\r\n            var height = parseInt(this.bodyHeight, 0);\r\n            first = this.rowHeightsCache.getRowIndex(this.offsetY);\r\n            last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\r\n        }\r\n        else {\r\n            first = Math.max(this.offset * this.pageSize, 0);\r\n            last = Math.min((first + this.pageSize), this.rowCount);\r\n        }\r\n        this.indexes = { first: first, last: last };\r\n    };\r\n    /**\r\n     * Refreshes the full Row Height cache.  Should be used\r\n     * when the entire row array state has changed.\r\n     *\r\n     * @returns {void}\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.refreshRowHeightCache = function () {\r\n        if (!this.scrollbarV)\r\n            return;\r\n        // clear the previous row height cache if already present.\r\n        // this is useful during sorts, filters where the state of the\r\n        // rows array is changed.\r\n        this.rowHeightsCache.clearCache();\r\n        // Initialize the tree only if there are rows inside the tree.\r\n        if (this.rows && this.rows.length) {\r\n            this.rowHeightsCache.initCache(this.rows, this.rowHeight, this.detailRowHeight);\r\n        }\r\n    };\r\n    /**\r\n     * Gets the index for the view port\r\n     *\r\n     * @returns {number}\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.getAdjustedViewPortIndex = function () {\r\n        // Capture the row index of the first row that is visible on the viewport.\r\n        // If the scroll bar is just below the row which is highlighted then make that as the\r\n        // first index.\r\n        var viewPortFirstRowIndex = this.indexes.first;\r\n        if (this.scrollbarV) {\r\n            var offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\r\n            return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\r\n        }\r\n        return viewPortFirstRowIndex;\r\n    };\r\n    /**\r\n     * Toggle the Expansion of the row i.e. if the row is expanded then it will\r\n     * collapse and vice versa.   Note that the expanded status is stored as\r\n     * a part of the row object itself as we have to preserve the expanded row\r\n     * status in case of sorting and filtering of the row set.\r\n     *\r\n     * @param {*} row The row for which the expansion needs to be toggled.\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.toggleRowExpansion = function (row) {\r\n        // Capture the row index of the first row that is visible on the viewport.\r\n        var viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\r\n        // If the detailRowHeight is auto --> only in case of non-virtualized scroll\r\n        if (this.scrollbarV) {\r\n            var detailRowHeight = this.detailRowHeight * (row.$$expanded ? -1 : 1);\r\n            this.rowHeightsCache.update(row.$$index, detailRowHeight);\r\n        }\r\n        // Update the toggled row and update the heights in the cache.\r\n        row.$$expanded ^= 1;\r\n        this.detailToggle.emit({\r\n            rows: [row],\r\n            currentIndex: viewPortFirstRowIndex\r\n        });\r\n    };\r\n    /**\r\n     * Expand/Collapse all the rows no matter what their state is.\r\n     *\r\n     * @param {boolean} expanded When true, all rows are expanded and when false, all rows will be collapsed.\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.toggleAllRows = function (expanded) {\r\n        var rowExpanded = expanded ? 1 : 0;\r\n        // Capture the row index of the first row that is visible on the viewport.\r\n        var viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\r\n        for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\r\n            var row = _a[_i];\r\n            row.$$expanded = rowExpanded;\r\n        }\r\n        if (this.scrollbarV) {\r\n            // Refresh the full row heights cache since every row was affected.\r\n            this.refreshRowHeightCache();\r\n        }\r\n        // Emit all rows that have been expanded.\r\n        this.detailToggle.emit({\r\n            rows: this.rows,\r\n            currentIndex: viewPortFirstRowIndex\r\n        });\r\n    };\r\n    /**\r\n     * Recalculates the table\r\n     *\r\n     * @memberOf DataTableBodyComponent\r\n     */\r\n    DataTableBodyComponent.prototype.recalcLayout = function () {\r\n        this.refreshRowHeightCache();\r\n        this.updateIndexes();\r\n        this.updateRows();\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyComponent.prototype, \"scrollbarV\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyComponent.prototype, \"scrollbarH\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableBodyComponent.prototype, \"loadingIndicator\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableBodyComponent.prototype, \"rowHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableBodyComponent.prototype, \"offsetX\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableBodyComponent.prototype, \"detailRowHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableBodyComponent.prototype, \"emptyMessage\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableBodyComponent.prototype, \"selectionType\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array)\r\n    ], DataTableBodyComponent.prototype, \"selected\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableBodyComponent.prototype, \"rowIdentity\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableBodyComponent.prototype, \"rowDetailTemplate\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableBodyComponent.prototype, \"selectCheck\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableBodyComponent.prototype, \"trackByProp\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number), \r\n        __metadata('design:paramtypes', [Number])\r\n    ], DataTableBodyComponent.prototype, \"pageSize\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array), \r\n        __metadata('design:paramtypes', [Array])\r\n    ], DataTableBodyComponent.prototype, \"rows\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array), \r\n        __metadata('design:paramtypes', [Array])\r\n    ], DataTableBodyComponent.prototype, \"columns\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number), \r\n        __metadata('design:paramtypes', [Number])\r\n    ], DataTableBodyComponent.prototype, \"offset\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number), \r\n        __metadata('design:paramtypes', [Number])\r\n    ], DataTableBodyComponent.prototype, \"rowCount\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableBodyComponent.prototype, \"innerWidth\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('style.width'), \r\n        __metadata('design:type', String)\r\n    ], DataTableBodyComponent.prototype, \"bodyWidth\", null);\r\n    __decorate([\r\n        core_1.Input(),\r\n        core_1.HostBinding('style.height'), \r\n        __metadata('design:type', Object), \r\n        __metadata('design:paramtypes', [Object])\r\n    ], DataTableBodyComponent.prototype, \"bodyHeight\", null);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableBodyComponent.prototype, \"scroll\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableBodyComponent.prototype, \"page\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableBodyComponent.prototype, \"activate\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableBodyComponent.prototype, \"select\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableBodyComponent.prototype, \"detailToggle\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableBodyComponent.prototype, \"rowContextmenu\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild(scroller_component_1.ScrollerComponent), \r\n        __metadata('design:type', scroller_component_1.ScrollerComponent)\r\n    ], DataTableBodyComponent.prototype, \"scroller\", void 0);\r\n    DataTableBodyComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-body',\r\n            template: \"\\n    <datatable-selection\\n      #selector\\n      [selected]=\\\"selected\\\"\\n      [rows]=\\\"temp\\\"\\n      [selectCheck]=\\\"selectCheck\\\"\\n      [selectEnabled]=\\\"selectEnabled\\\"\\n      [selectionType]=\\\"selectionType\\\"\\n      [rowIdentity]=\\\"rowIdentity\\\"\\n      (select)=\\\"select.emit($event)\\\"\\n      (activate)=\\\"activate.emit($event)\\\">\\n      <datatable-progress\\n        *ngIf=\\\"loadingIndicator\\\">\\n      </datatable-progress>\\n      <datatable-scroller\\n        *ngIf=\\\"rows?.length\\\"\\n        [scrollbarV]=\\\"scrollbarV\\\"\\n        [scrollbarH]=\\\"scrollbarH\\\"\\n        [scrollHeight]=\\\"scrollHeight\\\"\\n        [scrollWidth]=\\\"columnGroupWidths.total\\\"\\n        (scroll)=\\\"onBodyScroll($event)\\\">\\n        <datatable-row-wrapper\\n          *ngFor=\\\"let row of temp; let i = index; trackBy: rowTrackingFn;\\\"\\n          [ngStyle]=\\\"getRowsStyles(row)\\\"\\n          [rowDetailTemplate]=\\\"rowDetailTemplate\\\"\\n          [detailRowHeight]=\\\"detailRowHeight\\\"\\n          [row]=\\\"row\\\"\\n          [expanded]=\\\"row.$$expanded === 1\\\"\\n          (rowContextmenu)=\\\"rowContextmenu.emit($event)\\\">\\n          <datatable-body-row\\n            tabindex=\\\"-1\\\"\\n            [isSelected]=\\\"selector.getRowSelected(row)\\\"\\n            [innerWidth]=\\\"innerWidth\\\"\\n            [offsetX]=\\\"offsetX\\\"\\n            [columns]=\\\"columns\\\"\\n            [rowHeight]=\\\"rowHeight\\\"\\n            [row]=\\\"row\\\"\\n            (activate)=\\\"selector.onActivate($event, i)\\\">\\n          </datatable-body-row>\\n        </datatable-row-wrapper>\\n      </datatable-scroller>\\n      <div\\n        class=\\\"empty-row\\\"\\n        *ngIf=\\\"!rows?.length\\\"\\n        [innerHTML]=\\\"emptyMessage\\\">\\n      </div>\\n    </datatable-selection>\\n  \",\r\n            host: {\r\n                class: 'datatable-body'\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], DataTableBodyComponent);\r\n    return DataTableBodyComponent;\r\n}());\r\nexports.DataTableBodyComponent = DataTableBodyComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/body/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/components/body/body.component.ts\"));\r\n__export(__webpack_require__(\"./src/components/body/body-cell.component.ts\"));\r\n__export(__webpack_require__(\"./src/components/body/body-row.component.ts\"));\r\n__export(__webpack_require__(\"./src/components/body/progress-bar.component.ts\"));\r\n__export(__webpack_require__(\"./src/components/body/scroller.component.ts\"));\r\n__export(__webpack_require__(\"./src/components/body/body-row-wrapper.component.ts\"));\r\n__export(__webpack_require__(\"./src/components/body/selection.component.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/components/body/progress-bar.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar ProgressBarComponent = (function () {\r\n    function ProgressBarComponent() {\r\n    }\r\n    ProgressBarComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-progress',\r\n            template: \"\\n    <div class=\\\"progress-linear\\\" role=\\\"progressbar\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"bar\\\"></div>\\n      </div>\\n    </div>\\n  \",\r\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], ProgressBarComponent);\r\n    return ProgressBarComponent;\r\n}());\r\nexports.ProgressBarComponent = ProgressBarComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/body/scroller.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar ScrollerComponent = (function () {\r\n    function ScrollerComponent(element, renderer) {\r\n        this.renderer = renderer;\r\n        this.scrollbarV = false;\r\n        this.scrollbarH = false;\r\n        this.scroll = new core_1.EventEmitter();\r\n        this.scrollYPos = 0;\r\n        this.scrollXPos = 0;\r\n        this.prevScrollYPos = 0;\r\n        this.prevScrollXPos = 0;\r\n        this.element = element.nativeElement;\r\n    }\r\n    ScrollerComponent.prototype.ngOnInit = function () {\r\n        // manual bind so we don't always listen\r\n        if (this.scrollbarV || this.scrollbarH) {\r\n            this.parentElement = this.element.parentElement.parentElement;\r\n            this.onScrollListener = this.renderer.listen(this.parentElement, 'scroll', this.onScrolled.bind(this));\r\n        }\r\n    };\r\n    ScrollerComponent.prototype.ngOnDestroy = function () {\r\n        if (this.scrollbarV || this.scrollbarH) {\r\n            this.onScrollListener();\r\n        }\r\n    };\r\n    ScrollerComponent.prototype.setOffset = function (offsetY) {\r\n        if (this.parentElement) {\r\n            this.parentElement.scrollTop = offsetY;\r\n        }\r\n    };\r\n    ScrollerComponent.prototype.onScrolled = function (event) {\r\n        var dom = event.currentTarget;\r\n        this.scrollYPos = dom.scrollTop;\r\n        this.scrollXPos = dom.scrollLeft;\r\n        requestAnimationFrame(this.updateOffset.bind(this));\r\n    };\r\n    ScrollerComponent.prototype.updateOffset = function () {\r\n        var direction;\r\n        if (this.scrollYPos < this.prevScrollYPos) {\r\n            direction = 'down';\r\n        }\r\n        else if (this.scrollYPos > this.prevScrollYPos) {\r\n            direction = 'up';\r\n        }\r\n        this.scroll.emit({\r\n            direction: direction,\r\n            scrollYPos: this.scrollYPos,\r\n            scrollXPos: this.scrollXPos\r\n        });\r\n        this.prevScrollYPos = this.scrollYPos;\r\n        this.prevScrollXPos = this.scrollXPos;\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], ScrollerComponent.prototype, \"scrollbarV\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], ScrollerComponent.prototype, \"scrollbarH\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('style.height.px'),\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], ScrollerComponent.prototype, \"scrollHeight\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('style.width.px'),\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], ScrollerComponent.prototype, \"scrollWidth\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], ScrollerComponent.prototype, \"scroll\", void 0);\r\n    ScrollerComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-scroller',\r\n            template: \"\\n    <ng-content></ng-content>\\n  \",\r\n            host: {\r\n                class: 'datatable-scroll'\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])\r\n    ], ScrollerComponent);\r\n    return ScrollerComponent;\r\n}());\r\nexports.ScrollerComponent = ScrollerComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/body/selection.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar utils_1 = __webpack_require__(\"./src/utils/index.ts\");\r\nvar types_1 = __webpack_require__(\"./src/types/index.ts\");\r\nvar DataTableSelectionComponent = (function () {\r\n    function DataTableSelectionComponent() {\r\n        this.activate = new core_1.EventEmitter();\r\n        this.select = new core_1.EventEmitter();\r\n    }\r\n    DataTableSelectionComponent.prototype.selectRow = function (event, index, row) {\r\n        if (!this.selectEnabled)\r\n            return;\r\n        var chkbox = this.selectionType === types_1.SelectionType.checkbox;\r\n        var multi = this.selectionType === types_1.SelectionType.multi;\r\n        var selected = [];\r\n        if (multi || chkbox) {\r\n            if (event.shiftKey) {\r\n                var newSelected = this.selected.slice();\r\n                selected = utils_1.selectRowsBetween(newSelected, this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\r\n            }\r\n            else if (!event.shiftKey) {\r\n                selected.push(row);\r\n            }\r\n            else {\r\n                var newSelected = this.selected.slice();\r\n                selected = utils_1.selectRows(newSelected, row, this.getRowSelectedIdx.bind(this));\r\n            }\r\n        }\r\n        else {\r\n            selected.push(row);\r\n        }\r\n        if (this.selectCheck) {\r\n            selected = selected.filter(this.selectCheck.bind(this));\r\n        }\r\n        this.selected.splice(0, this.selected.length);\r\n        (_a = this.selected).push.apply(_a, selected);\r\n        this.prevIndex = index;\r\n        this.select.emit({\r\n            selected: selected\r\n        });\r\n        var _a;\r\n    };\r\n    DataTableSelectionComponent.prototype.onActivate = function (model, index) {\r\n        var type = model.type, event = model.event, row = model.row;\r\n        var chkbox = this.selectionType === types_1.SelectionType.checkbox;\r\n        var select = (!chkbox && (type === 'click' || type === 'dblclick')) ||\r\n            (chkbox && type === 'checkbox');\r\n        if (select) {\r\n            this.selectRow(event, index, row);\r\n        }\r\n        else if (type === 'keydown') {\r\n            if (event.keyCode === utils_1.Keys.return) {\r\n                this.selectRow(event, index, row);\r\n            }\r\n            else {\r\n                this.onKeyboardFocus(model);\r\n            }\r\n        }\r\n        this.activate.emit(model);\r\n    };\r\n    DataTableSelectionComponent.prototype.onKeyboardFocus = function (model) {\r\n        var keyCode = model.event.keyCode;\r\n        var shouldFocus = keyCode === utils_1.Keys.up ||\r\n            keyCode === utils_1.Keys.down ||\r\n            keyCode === utils_1.Keys.right ||\r\n            keyCode === utils_1.Keys.left;\r\n        if (shouldFocus) {\r\n            var isCellSelection = this.selectionType === types_1.SelectionType.cell;\r\n            if (!model.cellElement || !isCellSelection) {\r\n                this.focusRow(model.rowElement, keyCode);\r\n            }\r\n            else if (isCellSelection) {\r\n                this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\r\n            }\r\n        }\r\n    };\r\n    DataTableSelectionComponent.prototype.focusRow = function (rowElement, keyCode) {\r\n        var nextRowElement = this.getPrevNextRow(rowElement, keyCode);\r\n        if (nextRowElement)\r\n            nextRowElement.focus();\r\n    };\r\n    DataTableSelectionComponent.prototype.getPrevNextRow = function (rowElement, keyCode) {\r\n        var parentElement = rowElement.parentElement;\r\n        if (parentElement) {\r\n            var focusElement = void 0;\r\n            if (keyCode === utils_1.Keys.up) {\r\n                focusElement = parentElement.previousElementSibling;\r\n            }\r\n            else if (keyCode === utils_1.Keys.down) {\r\n                focusElement = parentElement.nextElementSibling;\r\n            }\r\n            if (focusElement && focusElement.children.length) {\r\n                return focusElement.children[0];\r\n            }\r\n        }\r\n    };\r\n    DataTableSelectionComponent.prototype.focusCell = function (cellElement, rowElement, keyCode, cellIndex) {\r\n        var nextCellElement;\r\n        if (keyCode === utils_1.Keys.left) {\r\n            nextCellElement = cellElement.previousElementSibling;\r\n        }\r\n        else if (keyCode === utils_1.Keys.right) {\r\n            nextCellElement = cellElement.nextElementSibling;\r\n        }\r\n        else if (keyCode === utils_1.Keys.up || keyCode === utils_1.Keys.down) {\r\n            var nextRowElement = this.getPrevNextRow(rowElement, keyCode);\r\n            if (nextRowElement) {\r\n                var children = nextRowElement.getElementsByClassName('datatable-body-cell');\r\n                if (children.length)\r\n                    nextCellElement = children[cellIndex];\r\n            }\r\n        }\r\n        if (nextCellElement)\r\n            nextCellElement.focus();\r\n    };\r\n    DataTableSelectionComponent.prototype.getRowSelected = function (row) {\r\n        return this.getRowSelectedIdx(row, this.selected) > -1;\r\n    };\r\n    DataTableSelectionComponent.prototype.getRowSelectedIdx = function (row, selected) {\r\n        var _this = this;\r\n        if (!selected || !selected.length)\r\n            return -1;\r\n        var rowId = this.rowIdentity(row);\r\n        return selected.findIndex(function (r) {\r\n            var id = _this.rowIdentity(r);\r\n            return id === rowId;\r\n        });\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array)\r\n    ], DataTableSelectionComponent.prototype, \"rows\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array)\r\n    ], DataTableSelectionComponent.prototype, \"selected\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableSelectionComponent.prototype, \"selectEnabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableSelectionComponent.prototype, \"selectionType\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableSelectionComponent.prototype, \"rowIdentity\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableSelectionComponent.prototype, \"selectCheck\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableSelectionComponent.prototype, \"activate\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableSelectionComponent.prototype, \"select\", void 0);\r\n    DataTableSelectionComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-selection',\r\n            template: \"\\n    <ng-content></ng-content>\\n  \"\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], DataTableSelectionComponent);\r\n    return DataTableSelectionComponent;\r\n}());\r\nexports.DataTableSelectionComponent = DataTableSelectionComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/columns/column-cell.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar DataTableColumnCellDirective = (function () {\r\n    function DataTableColumnCellDirective(template) {\r\n        this.template = template;\r\n    }\r\n    ;\r\n    DataTableColumnCellDirective = __decorate([\r\n        core_1.Directive({ selector: '[swui-datatable-cell-template]' }), \r\n        __metadata('design:paramtypes', [core_1.TemplateRef])\r\n    ], DataTableColumnCellDirective);\r\n    return DataTableColumnCellDirective;\r\n}());\r\nexports.DataTableColumnCellDirective = DataTableColumnCellDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/components/columns/column-header.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar DataTableColumnHeaderDirective = (function () {\r\n    function DataTableColumnHeaderDirective(template) {\r\n        this.template = template;\r\n    }\r\n    ;\r\n    DataTableColumnHeaderDirective = __decorate([\r\n        core_1.Directive({ selector: '[swui-datatable-header-template]' }), \r\n        __metadata('design:paramtypes', [core_1.TemplateRef])\r\n    ], DataTableColumnHeaderDirective);\r\n    return DataTableColumnHeaderDirective;\r\n}());\r\nexports.DataTableColumnHeaderDirective = DataTableColumnHeaderDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/components/columns/column.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar column_header_directive_1 = __webpack_require__(\"./src/components/columns/column-header.directive.ts\");\r\nvar column_cell_directive_1 = __webpack_require__(\"./src/components/columns/column-cell.directive.ts\");\r\nvar DataTableColumnDirective = (function () {\r\n    function DataTableColumnDirective() {\r\n    }\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableColumnDirective.prototype, \"name\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableColumnDirective.prototype, \"prop\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableColumnDirective.prototype, \"frozenLeft\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableColumnDirective.prototype, \"frozenRight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableColumnDirective.prototype, \"flexGrow\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableColumnDirective.prototype, \"resizeable\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Function)\r\n    ], DataTableColumnDirective.prototype, \"comparator\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableColumnDirective.prototype, \"pipe\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableColumnDirective.prototype, \"sortable\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableColumnDirective.prototype, \"draggable\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableColumnDirective.prototype, \"canAutoResize\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableColumnDirective.prototype, \"minWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableColumnDirective.prototype, \"width\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableColumnDirective.prototype, \"maxWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableColumnDirective.prototype, \"checkboxable\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableColumnDirective.prototype, \"headerCheckboxable\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        core_1.ContentChild(column_cell_directive_1.DataTableColumnCellDirective, { read: core_1.TemplateRef }), \r\n        __metadata('design:type', core_1.TemplateRef)\r\n    ], DataTableColumnDirective.prototype, \"cellTemplate\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        core_1.ContentChild(column_header_directive_1.DataTableColumnHeaderDirective, { read: core_1.TemplateRef }), \r\n        __metadata('design:type', core_1.TemplateRef)\r\n    ], DataTableColumnDirective.prototype, \"headerTemplate\", void 0);\r\n    DataTableColumnDirective = __decorate([\r\n        core_1.Directive({ selector: 'swui-datatable-column' }), \r\n        __metadata('design:paramtypes', [])\r\n    ], DataTableColumnDirective);\r\n    return DataTableColumnDirective;\r\n}());\r\nexports.DataTableColumnDirective = DataTableColumnDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/components/columns/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/components/columns/column.directive.ts\"));\r\n__export(__webpack_require__(\"./src/components/columns/column-header.directive.ts\"));\r\n__export(__webpack_require__(\"./src/components/columns/column-cell.directive.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/components/datatable.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar utils_1 = __webpack_require__(\"./src/utils/index.ts\");\r\nvar types_1 = __webpack_require__(\"./src/types/index.ts\");\r\nvar body_1 = __webpack_require__(\"./src/components/body/index.ts\");\r\nvar columns_1 = __webpack_require__(\"./src/components/columns/index.ts\");\r\nvar row_detail_1 = __webpack_require__(\"./src/components/row-detail/index.ts\");\r\nvar utils_2 = __webpack_require__(\"./src/utils/index.ts\");\r\nvar DatatableComponent = (function () {\r\n    function DatatableComponent(element, differs) {\r\n        /**\r\n         * List of row objects that should be\r\n         * represented as selected in the grid.\r\n         * Default value: `[]`\r\n         *\r\n         * @type {any[]}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.selected = [];\r\n        /**\r\n         * Enable vertical scrollbars\r\n         *\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.scrollbarV = false;\r\n        /**\r\n         * Enable horz scrollbars\r\n         *\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.scrollbarH = false;\r\n        /**\r\n         * The row height; which is necessary\r\n         * to calculate the height for the lazy rendering.\r\n         *\r\n         * @type {number}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.rowHeight = 30;\r\n        /**\r\n         * The detail row height is required especially\r\n         * when virtual scroll is enabled.\r\n         *\r\n         * @type {number}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.detailRowHeight = 0;\r\n        /**\r\n         * Type of column width distribution formula.\r\n         * Example: flex, force, standard\r\n         *\r\n         * @type {ColumnMode}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.columnMode = types_1.ColumnMode.standard;\r\n        /**\r\n         * The minimum header height in pixels.\r\n         * Pass a falsey for no header\r\n         *\r\n         * @type {*}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.headerHeight = 30;\r\n        /**\r\n         * The minimum footer height in pixels.\r\n         * Pass falsey for no footer\r\n         *\r\n         * @type {number}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.footerHeight = 0;\r\n        /**\r\n         * If the table should use external paging\r\n         * otherwise its assumed that all data is preloaded.\r\n         *\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.externalPaging = false;\r\n        /**\r\n         * If the table should use external sorting or\r\n         * the built-in basic sorting.\r\n         *\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.externalSorting = false;\r\n        /**\r\n         * The page size to be shown.\r\n         * Default value: `undefined`\r\n         *\r\n         * @type {number}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.limit = undefined;\r\n        /**\r\n         * The current offset ( page - 1 ) shown.\r\n         * Default value: `0`\r\n         *\r\n         * @type {number}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.offset = 0;\r\n        /**\r\n         * Show the linear loading bar.\r\n         * Default value: `false`\r\n         *\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.loadingIndicator = false;\r\n        /**\r\n         * Enable/Disable ability to re-order columns\r\n         * by dragging them.\r\n         *\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.reorderable = true;\r\n        /**\r\n         * The type of sorting\r\n         *\r\n         * @type {SortType}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.sortType = types_1.SortType.single;\r\n        /**\r\n         * Array of sorted columns by property and type.\r\n         * Default value: `[]`\r\n         *\r\n         * @type {any[]}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.sorts = [];\r\n        /**\r\n         * Css class overrides\r\n         *\r\n         * @type {*}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.cssClasses = {\r\n            sortAscending: 'icon-down',\r\n            sortDescending: 'icon-up',\r\n            pagerLeftArrow: 'icon-left',\r\n            pagerRightArrow: 'icon-right',\r\n            pagerPrevious: 'icon-prev',\r\n            pagerNext: 'icon-skip'\r\n        };\r\n        /**\r\n         * Message overrides for localization\r\n         *\r\n         * @type {*}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.messages = {\r\n            // Message to show when array is presented\r\n            // but contains no values\r\n            emptyMessage: 'No data to display',\r\n            // Footer total message\r\n            totalMessage: 'total'\r\n        };\r\n        /**\r\n         * This will be used when displaying or selecting rows.\r\n         * when tracking/comparing them, we'll use the value of this fn,\r\n         *\r\n         * (`fn(x) === fn(y)` instead of `x === y`)\r\n         *\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.rowIdentity = (function (x) { return x; });\r\n        /**\r\n         * Body was scrolled typically in a `scrollbarV:true` scenario.\r\n         *\r\n         * @type {EventEmitter<any>}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.scroll = new core_1.EventEmitter();\r\n        /**\r\n         * A cell or row was focused via keyboard or mouse click.\r\n         *\r\n         * @type {EventEmitter<any>}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.activate = new core_1.EventEmitter();\r\n        /**\r\n         * A cell or row was selected.\r\n         *\r\n         * @type {EventEmitter<any>}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.select = new core_1.EventEmitter();\r\n        /**\r\n         * Column sort was invoked.\r\n         *\r\n         * @type {EventEmitter<any>}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.sort = new core_1.EventEmitter();\r\n        /**\r\n         * The table was paged either triggered by the pager or the body scroll.\r\n         *\r\n         * @type {EventEmitter<any>}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.page = new core_1.EventEmitter();\r\n        /**\r\n         * Row detail row visbility was toggled.\r\n         *\r\n         * @type {EventEmitter<any>}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.detailToggle = new core_1.EventEmitter();\r\n        /**\r\n         * Columns were re-ordered.\r\n         *\r\n         * @type {EventEmitter<any>}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.reorder = new core_1.EventEmitter();\r\n        /**\r\n         * Column was resized.\r\n         *\r\n         * @type {EventEmitter<any>}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.resize = new core_1.EventEmitter();\r\n        /**\r\n         * The context menu was invoked on a row.\r\n         *\r\n         * @memberOf DatatableComponent\r\n         */\r\n        this.rowContextmenu = new core_1.EventEmitter(false);\r\n        this.offsetX = 0;\r\n        this._count = 0;\r\n        // get ref to elm for measuring\r\n        this.element = element.nativeElement;\r\n        this.rowDiffer = differs.find({}).create(null);\r\n    }\r\n    Object.defineProperty(DatatableComponent.prototype, \"rows\", {\r\n        /**\r\n         * Gets the rows.\r\n         *\r\n         * @readonly\r\n         * @type {*}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this._rows;\r\n        },\r\n        /**\r\n         * Rows that are displayed in the table.\r\n         *\r\n         * @memberOf DatatableComponent\r\n         */\r\n        set: function (val) {\r\n            // auto sort on new updates\r\n            if (!this.externalSorting) {\r\n                val = utils_1.sortRows(val, this.columns, this.sorts);\r\n            }\r\n            this._rows = val;\r\n            // recalculate sizes/etc\r\n            this.recalculate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"columns\", {\r\n        /**\r\n         * Get the columns.\r\n         *\r\n         * @readonly\r\n         * @type {any[]}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this._columns;\r\n        },\r\n        /**\r\n         * Columns to be displayed.\r\n         *\r\n         * @memberOf DatatableComponent\r\n         */\r\n        set: function (val) {\r\n            if (val) {\r\n                utils_2.setColumnDefaults(val);\r\n                this.recalculateColumns(val);\r\n            }\r\n            this._columns = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"count\", {\r\n        /**\r\n         * Gets the count.\r\n         *\r\n         * @readonly\r\n         * @type {number}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this._count;\r\n        },\r\n        /**\r\n         * The total count of all rows.\r\n         * Default value: `0`\r\n         *\r\n         * @type {number}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        set: function (val) {\r\n            this._count = val;\r\n            // recalculate sizes/etc\r\n            this.recalculate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"isFixedHeader\", {\r\n        /**\r\n         * CSS class applied if the header height if fixed height.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            var headerHeight = this.headerHeight;\r\n            return (typeof headerHeight === 'string') ?\r\n                headerHeight !== 'auto' : true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"isFixedRow\", {\r\n        /**\r\n         * CSS class applied to the root element if\r\n         * the row heights are fixed heights.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            var rowHeight = this.rowHeight;\r\n            return (typeof rowHeight === 'string') ?\r\n                rowHeight !== 'auto' : true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"isVertScroll\", {\r\n        /**\r\n         * CSS class applied to root element if\r\n         * vertical scrolling is enabled.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this.scrollbarV;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"isHorScroll\", {\r\n        /**\r\n         * CSS class applied to the root element\r\n         * if the horziontal scrolling is enabled.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this.scrollbarH;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"isSelectable\", {\r\n        /**\r\n         * CSS class applied to root element is selectable.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this.selectionType !== undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"isCheckboxSelection\", {\r\n        /**\r\n         * CSS class applied to root is checkbox selection.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this.selectionType === types_1.SelectionType.checkbox;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"isCellSelection\", {\r\n        /**\r\n         * CSS class applied to root if cell selection.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this.selectionType === types_1.SelectionType.cell;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"isSingleSelection\", {\r\n        /**\r\n         * CSS class applied to root if single select.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this.selectionType === types_1.SelectionType.single;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"isMultiSelection\", {\r\n        /**\r\n         * CSS class added to root element if mulit select\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this.selectionType === types_1.SelectionType.multi;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"columnTemplates\", {\r\n        /**\r\n         * Returns the column templates.\r\n         *\r\n         * @readonly\r\n         * @type {QueryList<DataTableColumnDirective>}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this._columnTemplates;\r\n        },\r\n        /**\r\n         * Column templates gathered from `ContentChildren`\r\n         * if described in your markup.\r\n         *\r\n         * @memberOf DatatableComponent\r\n         */\r\n        set: function (val) {\r\n            this._columnTemplates = val;\r\n            if (val) {\r\n                // only set this if results were brought back\r\n                var arr = val.toArray();\r\n                if (arr.length) {\r\n                    // translate them to normal objects\r\n                    this.columns = utils_2.translateTemplates(arr);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"rowDetailTemplateChild\", {\r\n        /**\r\n         * Returns the row templates.\r\n         *\r\n         * @readonly\r\n         * @type {DatatableRowDetailDirective}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this._rowDetailTemplateChild;\r\n        },\r\n        /**\r\n         * Row Detail templates gathered from the ContentChild\r\n         *\r\n         * @memberOf DatatableComponent\r\n         */\r\n        set: function (val) {\r\n            this._rowDetailTemplateChild = val;\r\n            if (val)\r\n                this.rowDetailTemplate = val.rowDetailTemplate;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DatatableComponent.prototype, \"allRowsSelected\", {\r\n        /**\r\n         * Returns if all rows are selected.\r\n         *\r\n         * @readonly\r\n         * @private\r\n         * @type {boolean}\r\n         * @memberOf DatatableComponent\r\n         */\r\n        get: function () {\r\n            return this.selected &&\r\n                this.rows &&\r\n                this.selected.length === this.rows.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Lifecycle hook that is called after data-bound\r\n     * properties of a directive are initialized.\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.ngOnInit = function () {\r\n        // need to call this immediatly to size\r\n        // if the table is hidden the visibility\r\n        // listener will invoke this itself upon show\r\n        this.recalculate();\r\n    };\r\n    /**\r\n     * Lifecycle hook that is called after a component's\r\n     * view has been fully initialized.\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.ngAfterViewInit = function () {\r\n        var _this = this;\r\n        // this has to be done to prevent the change detection\r\n        // tree from freaking out because we are readjusting\r\n        setTimeout(function () { return _this.recalculate(); });\r\n    };\r\n    /**\r\n     * Lifecycle hook that is called when Angular dirty checks a directive.\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.ngDoCheck = function () {\r\n        if (this.rowDiffer.diff(this.rows)) {\r\n            this.recalculatePages();\r\n        }\r\n    };\r\n    /**\r\n     * Toggle the expansion of the row\r\n     *\r\n     * @param rowIndex\r\n     */\r\n    DatatableComponent.prototype.toggleExpandRow = function (row) {\r\n        // Should we write a guard here??\r\n        this.bodyComponent.toggleRowExpansion(row);\r\n    };\r\n    /**\r\n     * API method to expand all the rows.\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.expandAllRows = function () {\r\n        this.bodyComponent.toggleAllRows(true);\r\n    };\r\n    /**\r\n     * API method to collapse all the rows.\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.collapseAllRows = function () {\r\n        this.bodyComponent.toggleAllRows(false);\r\n    };\r\n    /**\r\n     * Recalc's the sizes of the grid.\r\n     *\r\n     * Updated automatically on changes to:\r\n     *\r\n     *  - Columns\r\n     *  - Rows\r\n     *  - Paging related\r\n     *\r\n     * Also can be manually invoked or upon window resize.\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.recalculate = function () {\r\n        this.recalculateDims();\r\n        this.recalculateColumns();\r\n    };\r\n    /**\r\n     * Window resize handler to update sizes.\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.onWindowResize = function () {\r\n        this.recalculate();\r\n    };\r\n    /**\r\n     * Recalulcates the column widths based on column width\r\n     * distribution mode and scrollbar offsets.\r\n     *\r\n     * @param {any[]} [columns=this.columns]\r\n     * @param {number} [forceIdx=false]\r\n     * @param {boolean} [allowBleed=this.scrollH]\r\n     * @returns {any[]}\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.recalculateColumns = function (columns, forceIdx, allowBleed) {\r\n        if (columns === void 0) { columns = this.columns; }\r\n        if (forceIdx === void 0) { forceIdx = -1; }\r\n        if (allowBleed === void 0) { allowBleed = this.scrollbarH; }\r\n        if (!columns)\r\n            return;\r\n        var width = this.innerWidth;\r\n        if (this.scrollbarV) {\r\n            width = width - utils_2.scrollbarWidth;\r\n        }\r\n        if (this.columnMode === types_1.ColumnMode.force) {\r\n            utils_1.forceFillColumnWidths(columns, width, forceIdx, allowBleed);\r\n        }\r\n        else if (this.columnMode === types_1.ColumnMode.flex) {\r\n            utils_1.adjustColumnWidths(columns, width);\r\n        }\r\n        return columns;\r\n    };\r\n    /**\r\n     * Recalculates the dimensions of the table size.\r\n     * Internally calls the page size and row count calcs too.\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.recalculateDims = function () {\r\n        var _a = this.element.getBoundingClientRect(), height = _a.height, width = _a.width;\r\n        this.innerWidth = Math.floor(width);\r\n        if (this.scrollbarV) {\r\n            if (this.headerHeight)\r\n                height = height - this.headerHeight;\r\n            if (this.footerHeight)\r\n                height = height - this.footerHeight;\r\n            this.bodyHeight = height;\r\n        }\r\n        this.recalculatePages();\r\n    };\r\n    /**\r\n     * Recalculates the pages after a update.\r\n     *\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.recalculatePages = function () {\r\n        this.pageSize = this.calcPageSize();\r\n        this.rowCount = this.calcRowCount();\r\n    };\r\n    /**\r\n     * Body triggered a page event.\r\n     *\r\n     * @param {*} { offset }\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.onBodyPage = function (_a) {\r\n        var offset = _a.offset;\r\n        this.offset = offset;\r\n        this.page.emit({\r\n            count: this.count,\r\n            pageSize: this.pageSize,\r\n            limit: this.limit,\r\n            offset: this.offset\r\n        });\r\n    };\r\n    /**\r\n     * The body triggered a scroll event.\r\n     *\r\n     * @param {MouseEvent} event\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.onBodyScroll = function (event) {\r\n        this.offsetX = event.offsetX;\r\n        this.scroll.emit(event);\r\n    };\r\n    /**\r\n     * The footer triggered a page event.\r\n     *\r\n     * @param {*} event\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.onFooterPage = function (event) {\r\n        this.offset = event.page - 1;\r\n        this.bodyComponent.updateOffsetY(this.offset);\r\n        this.page.emit({\r\n            count: this.count,\r\n            pageSize: this.pageSize,\r\n            limit: this.limit,\r\n            offset: this.offset\r\n        });\r\n    };\r\n    /**\r\n     * Recalculates the sizes of the page\r\n     *\r\n     * @param {any[]} [val=this.rows]\r\n     * @returns {number}\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.calcPageSize = function (val) {\r\n        if (val === void 0) { val = this.rows; }\r\n        // Keep the page size constant even if the row has been expanded.\r\n        // This is because an expanded row is still considered to be a child of\r\n        // the original row.  Hence calculation would use rowHeight only.\r\n        if (this.scrollbarV) {\r\n            var size = Math.ceil(this.bodyHeight / this.rowHeight);\r\n            return Math.max(size, 0);\r\n        }\r\n        // if limit is passed, we are paging\r\n        if (this.limit !== undefined)\r\n            return this.limit;\r\n        // otherwise use row length\r\n        if (val)\r\n            return val.length;\r\n        // other empty :(\r\n        return 0;\r\n    };\r\n    /**\r\n     * Calculates the row count.\r\n     *\r\n     * @param {any[]} [val=this.rows]\r\n     * @returns {number}\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.calcRowCount = function (val) {\r\n        if (val === void 0) { val = this.rows; }\r\n        if (!this.externalPaging) {\r\n            if (!val)\r\n                return 0;\r\n            return val.length;\r\n        }\r\n        return this.count;\r\n    };\r\n    /**\r\n     * The header triggered a column resize event.\r\n     *\r\n     * @param {*} { column, newValue }\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.onColumnResize = function (_a) {\r\n        var column = _a.column, newValue = _a.newValue;\r\n        var idx;\r\n        var cols = this.columns.map(function (c, i) {\r\n            c = Object.assign({}, c);\r\n            if (c.$$id === column.$$id) {\r\n                idx = i;\r\n                c.width = newValue;\r\n                // set this so we can force the column\r\n                // width distribution to be to this value\r\n                c.$$oldWidth = newValue;\r\n            }\r\n            return c;\r\n        });\r\n        this.recalculateColumns(cols, idx);\r\n        this._columns = cols;\r\n        this.resize.emit({\r\n            column: column,\r\n            newValue: newValue\r\n        });\r\n    };\r\n    /**\r\n     * The header triggered a column re-order event.\r\n     *\r\n     * @param {*} { column, newValue, prevValue }\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.onColumnReorder = function (_a) {\r\n        var column = _a.column, newValue = _a.newValue, prevValue = _a.prevValue;\r\n        var cols = this.columns.map(function (c) {\r\n            return Object.assign({}, c);\r\n        });\r\n        cols.splice(prevValue, 1);\r\n        cols.splice(newValue, 0, column);\r\n        this.columns = cols;\r\n        this.reorder.emit({\r\n            column: column,\r\n            newValue: newValue,\r\n            prevValue: prevValue\r\n        });\r\n    };\r\n    /**\r\n     * The header triggered a column sort event.\r\n     *\r\n     * @param {*} event\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.onColumnSort = function (event) {\r\n        var sorts = event.sorts;\r\n        // this could be optimized better since it will resort\r\n        // the rows again on the 'push' detection...\r\n        if (this.externalSorting === false) {\r\n            // don't use normal setter so we don't resort\r\n            this._rows = utils_1.sortRows(this.rows, this.columns, sorts);\r\n        }\r\n        this.sorts = sorts;\r\n        this.bodyComponent.updateOffsetY(0);\r\n        this.sort.emit(event);\r\n    };\r\n    /**\r\n     * Toggle all row selection\r\n     *\r\n     * @param {*} event\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.onHeaderSelect = function (event) {\r\n        // before we splice, chk if we currently have all selected\r\n        var allSelected = this.selected.length === this.rows.length;\r\n        // remove all existing either way\r\n        this.selected.splice(0, this.selected.length);\r\n        // do the opposite here\r\n        if (!allSelected) {\r\n            (_a = this.selected).push.apply(_a, this.rows);\r\n        }\r\n        this.select.emit({\r\n            selected: this.selected\r\n        });\r\n        var _a;\r\n    };\r\n    /**\r\n     * A row was selected from body\r\n     *\r\n     * @param {*} event\r\n     *\r\n     * @memberOf DatatableComponent\r\n     */\r\n    DatatableComponent.prototype.onBodySelect = function (event) {\r\n        this.select.emit(event);\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object), \r\n        __metadata('design:paramtypes', [Object])\r\n    ], DatatableComponent.prototype, \"rows\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array), \r\n        __metadata('design:paramtypes', [Array])\r\n    ], DatatableComponent.prototype, \"columns\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array)\r\n    ], DatatableComponent.prototype, \"selected\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"scrollbarV\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"scrollbarH\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DatatableComponent.prototype, \"rowHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DatatableComponent.prototype, \"detailRowHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DatatableComponent.prototype, \"columnMode\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DatatableComponent.prototype, \"headerHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DatatableComponent.prototype, \"footerHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"externalPaging\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"externalSorting\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DatatableComponent.prototype, \"limit\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number), \r\n        __metadata('design:paramtypes', [Number])\r\n    ], DatatableComponent.prototype, \"count\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DatatableComponent.prototype, \"offset\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"loadingIndicator\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DatatableComponent.prototype, \"selectionType\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"reorderable\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DatatableComponent.prototype, \"sortType\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array)\r\n    ], DatatableComponent.prototype, \"sorts\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', core_1.TemplateRef)\r\n    ], DatatableComponent.prototype, \"rowDetailTemplate\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DatatableComponent.prototype, \"cssClasses\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DatatableComponent.prototype, \"messages\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Function)\r\n    ], DatatableComponent.prototype, \"rowIdentity\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DatatableComponent.prototype, \"selectCheck\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DatatableComponent.prototype, \"trackByProp\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DatatableComponent.prototype, \"scroll\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DatatableComponent.prototype, \"activate\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DatatableComponent.prototype, \"select\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DatatableComponent.prototype, \"sort\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DatatableComponent.prototype, \"page\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DatatableComponent.prototype, \"detailToggle\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DatatableComponent.prototype, \"reorder\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DatatableComponent.prototype, \"resize\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', Object)\r\n    ], DatatableComponent.prototype, \"rowContextmenu\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.fixed-header'), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"isFixedHeader\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.fixed-row'), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"isFixedRow\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.scroll-vertical'), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"isVertScroll\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.scroll-horz'), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"isHorScroll\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.selectable'), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"isSelectable\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.checkbox-selection'), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"isCheckboxSelection\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.cell-selection'), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"isCellSelection\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.single-selection'), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"isSingleSelection\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.multi-selection'), \r\n        __metadata('design:type', Boolean)\r\n    ], DatatableComponent.prototype, \"isMultiSelection\", null);\r\n    __decorate([\r\n        core_1.ContentChildren(columns_1.DataTableColumnDirective), \r\n        __metadata('design:type', core_1.QueryList), \r\n        __metadata('design:paramtypes', [core_1.QueryList])\r\n    ], DatatableComponent.prototype, \"columnTemplates\", null);\r\n    __decorate([\r\n        core_1.ContentChild(row_detail_1.DatatableRowDetailDirective), \r\n        __metadata('design:type', row_detail_1.DatatableRowDetailDirective), \r\n        __metadata('design:paramtypes', [row_detail_1.DatatableRowDetailDirective])\r\n    ], DatatableComponent.prototype, \"rowDetailTemplateChild\", null);\r\n    __decorate([\r\n        core_1.ViewChild(body_1.DataTableBodyComponent), \r\n        __metadata('design:type', body_1.DataTableBodyComponent)\r\n    ], DatatableComponent.prototype, \"bodyComponent\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('window:resize'),\r\n        utils_2.throttleable(5), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', void 0)\r\n    ], DatatableComponent.prototype, \"onWindowResize\", null);\r\n    DatatableComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'swui-datatable',\r\n            template: \"\\n    <div\\n      visibility-observer\\n      (visible)=\\\"recalculate()\\\">\\n      <datatable-header\\n        *ngIf=\\\"headerHeight\\\"\\n        [sorts]=\\\"sorts\\\"\\n        [sortType]=\\\"sortType\\\"\\n        [scrollbarH]=\\\"scrollbarH\\\"\\n        [innerWidth]=\\\"innerWidth\\\"\\n        [offsetX]=\\\"offsetX\\\"\\n        [columns]=\\\"columns\\\"\\n        [headerHeight]=\\\"headerHeight\\\"\\n        [sortAscendingIcon]=\\\"cssClasses.sortAscending\\\"\\n        [sortDescendingIcon]=\\\"cssClasses.sortDescending\\\"\\n        [allRowsSelected]=\\\"allRowsSelected\\\"\\n        [selectionType]=\\\"selectionType\\\"\\n        (sort)=\\\"onColumnSort($event)\\\"\\n        (resize)=\\\"onColumnResize($event)\\\"\\n        (reorder)=\\\"onColumnReorder($event)\\\"\\n        (select)=\\\"onHeaderSelect($event)\\\">\\n      </datatable-header>\\n      <datatable-body\\n        [rows]=\\\"rows\\\"\\n        [scrollbarV]=\\\"scrollbarV\\\"\\n        [scrollbarH]=\\\"scrollbarH\\\"\\n        [loadingIndicator]=\\\"loadingIndicator\\\"\\n        [rowHeight]=\\\"rowHeight\\\"\\n        [rowCount]=\\\"rowCount\\\"\\n        [offset]=\\\"offset\\\"\\n        [trackByProp]=\\\"trackByProp\\\"\\n        [columns]=\\\"columns\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [offsetX]=\\\"offsetX\\\"\\n        [rowDetailTemplate]=\\\"rowDetailTemplate\\\"\\n        [detailRowHeight]=\\\"detailRowHeight\\\"\\n        [selected]=\\\"selected\\\"\\n        [innerWidth]=\\\"innerWidth\\\"\\n        [bodyHeight]=\\\"bodyHeight\\\"\\n        [selectionType]=\\\"selectionType\\\"\\n        [emptyMessage]=\\\"messages.emptyMessage\\\"\\n        [rowIdentity]=\\\"rowIdentity\\\"\\n        [selectCheck]=\\\"selectCheck\\\"\\n        (page)=\\\"onBodyPage($event)\\\"\\n        (activate)=\\\"activate.emit($event)\\\"\\n        (rowContextmenu)=\\\"rowContextmenu.emit($event)\\\"\\n        (select)=\\\"onBodySelect($event)\\\"\\n        (detailToggle)=\\\"detailToggle.emit($event)\\\"\\n        (scroll)=\\\"onBodyScroll($event)\\\">\\n      </datatable-body>\\n      <datatable-footer\\n        *ngIf=\\\"footerHeight\\\"\\n        [rowCount]=\\\"rowCount\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [offset]=\\\"offset\\\"\\n        [footerHeight]=\\\"footerHeight\\\"\\n        [totalMessage]=\\\"messages.totalMessage\\\"\\n        [pagerLeftArrowIcon]=\\\"cssClasses.pagerLeftArrow\\\"\\n        [pagerRightArrowIcon]=\\\"cssClasses.pagerRightArrow\\\"\\n        [pagerPreviousIcon]=\\\"cssClasses.pagerPrevious\\\"\\n        [pagerNextIcon]=\\\"cssClasses.pagerNext\\\"\\n        (page)=\\\"onFooterPage($event)\\\">\\n      </datatable-footer>\\n    </div>\\n  \",\r\n            host: {\r\n                class: 'datatable'\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [core_1.ElementRef, core_1.KeyValueDiffers])\r\n    ], DatatableComponent);\r\n    return DatatableComponent;\r\n}());\r\nexports.DatatableComponent = DatatableComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/footer/footer.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar DataTableFooterComponent = (function () {\r\n    function DataTableFooterComponent() {\r\n        this.page = new core_1.EventEmitter();\r\n    }\r\n    Object.defineProperty(DataTableFooterComponent.prototype, \"isVisible\", {\r\n        get: function () {\r\n            return (this.rowCount / this.pageSize) > 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableFooterComponent.prototype, \"curPage\", {\r\n        get: function () {\r\n            return this.offset + 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableFooterComponent.prototype, \"footerHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableFooterComponent.prototype, \"rowCount\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableFooterComponent.prototype, \"pageSize\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableFooterComponent.prototype, \"offset\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableFooterComponent.prototype, \"pagerLeftArrowIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableFooterComponent.prototype, \"pagerRightArrowIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableFooterComponent.prototype, \"pagerPreviousIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableFooterComponent.prototype, \"pagerNextIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableFooterComponent.prototype, \"totalMessage\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableFooterComponent.prototype, \"page\", void 0);\r\n    DataTableFooterComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-footer',\r\n            template: \"\\n    <div\\n      [style.height.px]=\\\"footerHeight\\\">\\n      <div class=\\\"page-count\\\">{{rowCount.toLocaleString()}} {{totalMessage}}</div>\\n      <datatable-pager\\n        [pagerLeftArrowIcon]=\\\"pagerLeftArrowIcon\\\"\\n        [pagerRightArrowIcon]=\\\"pagerRightArrowIcon\\\"\\n        [pagerPreviousIcon]=\\\"pagerPreviousIcon\\\"\\n        [pagerNextIcon]=\\\"pagerNextIcon\\\"\\n        [page]=\\\"curPage\\\"\\n        [size]=\\\"pageSize\\\"\\n        [count]=\\\"rowCount\\\"\\n        [hidden]=\\\"!isVisible\\\"\\n        (change)=\\\"page.emit($event)\\\">\\n       </datatable-pager>\\n     </div>\\n  \",\r\n            host: {\r\n                class: 'datatable-footer'\r\n            },\r\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], DataTableFooterComponent);\r\n    return DataTableFooterComponent;\r\n}());\r\nexports.DataTableFooterComponent = DataTableFooterComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/footer/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/components/footer/footer.component.ts\"));\r\n__export(__webpack_require__(\"./src/components/footer/pager.component.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/components/footer/pager.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar DataTablePagerComponent = (function () {\r\n    function DataTablePagerComponent() {\r\n        this.change = new core_1.EventEmitter();\r\n        this._count = 0;\r\n        this._page = 1;\r\n        this._size = 0;\r\n    }\r\n    Object.defineProperty(DataTablePagerComponent.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        set: function (val) {\r\n            this._size = val;\r\n            this.pages = this.calcPages();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTablePagerComponent.prototype, \"count\", {\r\n        get: function () {\r\n            return this._count;\r\n        },\r\n        set: function (val) {\r\n            this._count = val;\r\n            this.pages = this.calcPages();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTablePagerComponent.prototype, \"page\", {\r\n        get: function () {\r\n            return this._page;\r\n        },\r\n        set: function (val) {\r\n            this._page = val;\r\n            this.pages = this.calcPages();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTablePagerComponent.prototype, \"totalPages\", {\r\n        get: function () {\r\n            var count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\r\n            return Math.max(count || 0, 1);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DataTablePagerComponent.prototype.canPrevious = function () {\r\n        return this.page > 1;\r\n    };\r\n    DataTablePagerComponent.prototype.canNext = function () {\r\n        return this.page < this.totalPages;\r\n    };\r\n    DataTablePagerComponent.prototype.prevPage = function () {\r\n        this.selectPage(this.page - 1);\r\n    };\r\n    DataTablePagerComponent.prototype.nextPage = function () {\r\n        this.selectPage(this.page + 1);\r\n    };\r\n    DataTablePagerComponent.prototype.selectPage = function (page) {\r\n        if (page > 0 && page <= this.totalPages && page !== this.page) {\r\n            this.page = page;\r\n            this.change.emit({\r\n                page: page\r\n            });\r\n        }\r\n    };\r\n    DataTablePagerComponent.prototype.calcPages = function (page) {\r\n        var pages = [];\r\n        var startPage = 1;\r\n        var endPage = this.totalPages;\r\n        var maxSize = 5;\r\n        var isMaxSized = maxSize < this.totalPages;\r\n        page = page || this.page;\r\n        if (isMaxSized) {\r\n            startPage = ((Math.ceil(page / maxSize) - 1) * maxSize) + 1;\r\n            endPage = Math.min(startPage + maxSize - 1, this.totalPages);\r\n        }\r\n        for (var num = startPage; num <= endPage; num++) {\r\n            pages.push({\r\n                number: num,\r\n                text: num\r\n            });\r\n        }\r\n        return pages;\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTablePagerComponent.prototype, \"pagerLeftArrowIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTablePagerComponent.prototype, \"pagerRightArrowIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTablePagerComponent.prototype, \"pagerPreviousIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTablePagerComponent.prototype, \"pagerNextIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number), \r\n        __metadata('design:paramtypes', [Number])\r\n    ], DataTablePagerComponent.prototype, \"size\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number), \r\n        __metadata('design:paramtypes', [Number])\r\n    ], DataTablePagerComponent.prototype, \"count\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number), \r\n        __metadata('design:paramtypes', [Number])\r\n    ], DataTablePagerComponent.prototype, \"page\", null);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTablePagerComponent.prototype, \"change\", void 0);\r\n    DataTablePagerComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-pager',\r\n            template: \"\\n    <ul class=\\\"pager\\\">\\n      <li [class.disabled]=\\\"!canPrevious()\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"selectPage(1)\\\">\\n          <i class=\\\"{{pagerPreviousIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canPrevious()\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"prevPage()\\\">\\n          <i class=\\\"{{pagerLeftArrowIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li\\n        class=\\\"pages\\\"\\n        *ngFor=\\\"let pg of pages\\\"\\n        [class.active]=\\\"pg.number === page\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"selectPage(pg.number)\\\">\\n          {{pg.text}}\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canNext()\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"nextPage()\\\">\\n          <i class=\\\"{{pagerRightArrowIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canNext()\\\">\\n        <a\\n          href=\\\"javascript:void(0)\\\"\\n          (click)=\\\"selectPage(totalPages)\\\">\\n          <i class=\\\"{{pagerNextIcon}}\\\"></i>\\n        </a>\\n      </li>\\n    </ul>\\n  \",\r\n            host: {\r\n                class: 'datatable-pager'\r\n            },\r\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], DataTablePagerComponent);\r\n    return DataTablePagerComponent;\r\n}());\r\nexports.DataTablePagerComponent = DataTablePagerComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/header/header-cell.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar types_1 = __webpack_require__(\"./src/types/index.ts\");\r\nvar utils_1 = __webpack_require__(\"./src/utils/index.ts\");\r\nvar DataTableHeaderCellComponent = (function () {\r\n    function DataTableHeaderCellComponent() {\r\n        this.sort = new core_1.EventEmitter();\r\n        this.select = new core_1.EventEmitter();\r\n    }\r\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"sorts\", {\r\n        get: function () {\r\n            return this._sorts;\r\n        },\r\n        set: function (val) {\r\n            this._sorts = val;\r\n            this.sortDir = this.calcSortDir(val);\r\n            this.sortClass = this.calcSortClass(this.sortDir);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"columnCssClasses\", {\r\n        get: function () {\r\n            var cls = 'datatable-header-cell';\r\n            if (this.column.sortable)\r\n                cls += ' sortable';\r\n            if (this.column.resizeable)\r\n                cls += ' resizeable';\r\n            var sortDir = this.sortDir;\r\n            if (sortDir) {\r\n                cls += \" sort-active sort-\" + sortDir;\r\n            }\r\n            return cls;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"name\", {\r\n        get: function () {\r\n            return this.column.name || this.column.prop;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"minWidth\", {\r\n        get: function () {\r\n            return this.column.minWidth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"maxWidth\", {\r\n        get: function () {\r\n            return this.column.maxWidth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"width\", {\r\n        get: function () {\r\n            return this.column.width;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DataTableHeaderCellComponent.prototype.calcSortDir = function (sorts) {\r\n        var _this = this;\r\n        if (sorts && this.column) {\r\n            var sort = sorts.find(function (s) {\r\n                return s.prop === _this.column.prop;\r\n            });\r\n            if (sort)\r\n                return sort.dir;\r\n        }\r\n    };\r\n    DataTableHeaderCellComponent.prototype.onSort = function () {\r\n        if (!this.column.sortable)\r\n            return;\r\n        var newValue = utils_1.nextSortDir(this.sortType, this.sortDir);\r\n        this.sort.emit({\r\n            column: this.column,\r\n            prevValue: this.sortDir,\r\n            newValue: newValue\r\n        });\r\n    };\r\n    DataTableHeaderCellComponent.prototype.calcSortClass = function (sortDir) {\r\n        if (sortDir === types_1.SortDirection.asc) {\r\n            return \"sort-asc \" + this.sortAscendingIcon;\r\n        }\r\n        else if (sortDir === types_1.SortDirection.desc) {\r\n            return \"sort-desc \" + this.sortDescendingIcon;\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderCellComponent.prototype, \"sortType\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableHeaderCellComponent.prototype, \"column\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableHeaderCellComponent.prototype, \"sortAscendingIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], DataTableHeaderCellComponent.prototype, \"sortDescendingIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableHeaderCellComponent.prototype, \"allRowsSelected\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderCellComponent.prototype, \"selectionType\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('style.height.px'),\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderCellComponent.prototype, \"headerHeight\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array), \r\n        __metadata('design:paramtypes', [Array])\r\n    ], DataTableHeaderCellComponent.prototype, \"sorts\", null);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableHeaderCellComponent.prototype, \"sort\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableHeaderCellComponent.prototype, \"select\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class'), \r\n        __metadata('design:type', Object)\r\n    ], DataTableHeaderCellComponent.prototype, \"columnCssClasses\", null);\r\n    __decorate([\r\n        core_1.HostBinding('attr.title'), \r\n        __metadata('design:type', String)\r\n    ], DataTableHeaderCellComponent.prototype, \"name\", null);\r\n    __decorate([\r\n        core_1.HostBinding('style.minWidth.px'), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderCellComponent.prototype, \"minWidth\", null);\r\n    __decorate([\r\n        core_1.HostBinding('style.maxWidth.px'), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderCellComponent.prototype, \"maxWidth\", null);\r\n    __decorate([\r\n        core_1.HostBinding('style.width.px'), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderCellComponent.prototype, \"width\", null);\r\n    DataTableHeaderCellComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-header-cell',\r\n            template: \"\\n    <div>\\n      <label\\n        *ngIf=\\\"column.checkboxable && column.headerCheckboxable && selectionType === 'checkbox'\\\" \\n        class=\\\"datatable-checkbox\\\">\\n        <input \\n          type=\\\"checkbox\\\"\\n          [attr.checked]=\\\"allRowsSelected\\\"\\n          (change)=\\\"select.emit(!allRowsSelected)\\\" \\n        />\\n      </label>\\n      <span\\n        class=\\\"datatable-header-cell-label draggable\\\"\\n        *ngIf=\\\"!column.headerTemplate\\\"\\n        (click)=\\\"onSort()\\\"\\n        [innerHTML]=\\\"name\\\">\\n      </span>\\n      <template\\n        *ngIf=\\\"column.headerTemplate\\\"\\n        [ngTemplateOutlet]=\\\"column.headerTemplate\\\"\\n        [ngOutletContext]=\\\"{ \\n          column: column, \\n          sortDir: sortDir\\n        }\\\">\\n      </template>\\n      <span\\n        class=\\\"sort-btn\\\"\\n        [class]=\\\"sortClass\\\">\\n      </span>\\n    </div>\\n  \"\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], DataTableHeaderCellComponent);\r\n    return DataTableHeaderCellComponent;\r\n}());\r\nexports.DataTableHeaderCellComponent = DataTableHeaderCellComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/header/header.component.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar types_1 = __webpack_require__(\"./src/types/index.ts\");\r\nvar utils_1 = __webpack_require__(\"./src/utils/index.ts\");\r\nvar DataTableHeaderComponent = (function () {\r\n    function DataTableHeaderComponent() {\r\n        this.sort = new core_1.EventEmitter();\r\n        this.reorder = new core_1.EventEmitter();\r\n        this.resize = new core_1.EventEmitter();\r\n        this.select = new core_1.EventEmitter();\r\n    }\r\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"headerHeight\", {\r\n        get: function () {\r\n            return this._headerHeight;\r\n        },\r\n        set: function (val) {\r\n            if (val !== 'auto') {\r\n                this._headerHeight = val + \"px\";\r\n            }\r\n            else {\r\n                this._headerHeight = val;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"columns\", {\r\n        get: function () {\r\n            return this._columns;\r\n        },\r\n        set: function (val) {\r\n            this._columns = val;\r\n            var colsByPin = utils_1.columnsByPin(val);\r\n            this.columnsByPin = utils_1.columnsByPinArr(val);\r\n            this.columnGroupWidths = utils_1.columnGroupWidths(colsByPin, val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"headerWidth\", {\r\n        get: function () {\r\n            if (this.scrollbarH) {\r\n                return this.innerWidth + 'px';\r\n            }\r\n            return '100%';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DataTableHeaderComponent.prototype.trackByGroups = function (index, colGroup) {\r\n        return colGroup.type;\r\n    };\r\n    DataTableHeaderComponent.prototype.onColumnResized = function (width, column) {\r\n        if (width <= column.minWidth) {\r\n            width = column.minWidth;\r\n        }\r\n        else if (width >= column.maxWidth) {\r\n            width = column.maxWidth;\r\n        }\r\n        this.resize.emit({\r\n            column: column,\r\n            prevValue: column.width,\r\n            newValue: width\r\n        });\r\n    };\r\n    DataTableHeaderComponent.prototype.onColumnReordered = function (_a) {\r\n        var prevIndex = _a.prevIndex, newIndex = _a.newIndex, model = _a.model;\r\n        this.reorder.emit({\r\n            column: model,\r\n            prevValue: prevIndex,\r\n            newValue: newIndex\r\n        });\r\n    };\r\n    DataTableHeaderComponent.prototype.onSort = function (_a) {\r\n        var column = _a.column, prevValue = _a.prevValue, newValue = _a.newValue;\r\n        var sorts = this.calcNewSorts(column, prevValue, newValue);\r\n        this.sort.emit({\r\n            sorts: sorts,\r\n            column: column,\r\n            prevValue: prevValue,\r\n            newValue: newValue\r\n        });\r\n    };\r\n    DataTableHeaderComponent.prototype.calcNewSorts = function (column, prevValue, newValue) {\r\n        var idx = 0;\r\n        var sorts = this.sorts.map(function (s, i) {\r\n            s = Object.assign({}, s);\r\n            if (s.prop === column.prop)\r\n                idx = i;\r\n            return s;\r\n        });\r\n        if (newValue === undefined) {\r\n            sorts.splice(idx, 1);\r\n        }\r\n        else if (prevValue) {\r\n            sorts[idx].dir = newValue;\r\n        }\r\n        else {\r\n            if (this.sortType === types_1.SortType.single) {\r\n                sorts.splice(0, this.sorts.length);\r\n            }\r\n            sorts.push({ dir: newValue, prop: column.prop });\r\n        }\r\n        return sorts;\r\n    };\r\n    DataTableHeaderComponent.prototype.stylesByGroup = function (group) {\r\n        var widths = this.columnGroupWidths;\r\n        var offsetX = this.offsetX;\r\n        var styles = {\r\n            width: widths[group] + \"px\"\r\n        };\r\n        if (group === 'center') {\r\n            utils_1.translateXY(styles, offsetX * -1, 0);\r\n        }\r\n        else if (group === 'right') {\r\n            var totalDiff = widths.total - this.innerWidth;\r\n            var offset = totalDiff * -1;\r\n            utils_1.translateXY(styles, offset, 0);\r\n        }\r\n        return styles;\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableHeaderComponent.prototype, \"sortAscendingIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DataTableHeaderComponent.prototype, \"sortDescendingIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableHeaderComponent.prototype, \"scrollbarH\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderComponent.prototype, \"innerWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderComponent.prototype, \"offsetX\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array)\r\n    ], DataTableHeaderComponent.prototype, \"sorts\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderComponent.prototype, \"sortType\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DataTableHeaderComponent.prototype, \"allRowsSelected\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], DataTableHeaderComponent.prototype, \"selectionType\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('style.height'),\r\n        core_1.Input(), \r\n        __metadata('design:type', Object), \r\n        __metadata('design:paramtypes', [Object])\r\n    ], DataTableHeaderComponent.prototype, \"headerHeight\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Array), \r\n        __metadata('design:paramtypes', [Array])\r\n    ], DataTableHeaderComponent.prototype, \"columns\", null);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableHeaderComponent.prototype, \"sort\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableHeaderComponent.prototype, \"reorder\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableHeaderComponent.prototype, \"resize\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DataTableHeaderComponent.prototype, \"select\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('style.width'), \r\n        __metadata('design:type', String)\r\n    ], DataTableHeaderComponent.prototype, \"headerWidth\", null);\r\n    DataTableHeaderComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'datatable-header',\r\n            template: \"\\n    <div\\n      orderable\\n      (reorder)=\\\"onColumnReordered($event)\\\"\\n      [style.width.px]=\\\"columnGroupWidths.total\\\"\\n      class=\\\"datatable-header-inner\\\">\\n      <div\\n        *ngFor=\\\"let colGroup of columnsByPin; trackBy: trackByGroups\\\"\\n        [class]=\\\"'datatable-row-' + colGroup.type\\\"\\n        [ngStyle]=\\\"stylesByGroup(colGroup.type)\\\">\\n        <datatable-header-cell\\n          *ngFor=\\\"let column of colGroup.columns; trackBy: column?.$$id\\\"\\n          resizeable\\n          [resizeEnabled]=\\\"column.resizeable\\\"\\n          (resize)=\\\"onColumnResized($event, column)\\\"\\n          long-press\\n          (longPress)=\\\"drag = true\\\"\\n          (longPressEnd)=\\\"drag = false\\\"\\n          draggable\\n          [dragX]=\\\"column.draggable && drag\\\"\\n          [dragY]=\\\"false\\\"\\n          [dragModel]=\\\"column\\\"\\n          [headerHeight]=\\\"headerHeight\\\"\\n          [column]=\\\"column\\\"\\n          [sortType]=\\\"sortType\\\"\\n          [sorts]=\\\"sorts\\\"\\n          [selectionType]=\\\"selectionType\\\"\\n          [sortAscendingIcon]=\\\"sortAscendingIcon\\\"\\n          [sortDescendingIcon]=\\\"sortDescendingIcon\\\"\\n          (sort)=\\\"onSort($event)\\\"\\n          (select)=\\\"select.emit($event)\\\">\\n        </datatable-header-cell>\\n      </div>\\n    </div>\\n  \",\r\n            host: {\r\n                class: 'datatable-header'\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], DataTableHeaderComponent);\r\n    return DataTableHeaderComponent;\r\n}());\r\nexports.DataTableHeaderComponent = DataTableHeaderComponent;\r\n\n\n/***/ },\n\n/***/ \"./src/components/header/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/components/header/header.component.ts\"));\r\n__export(__webpack_require__(\"./src/components/header/header-cell.component.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/components/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/components/datatable.component.ts\"));\r\n__export(__webpack_require__(\"./src/components/header/index.ts\"));\r\n__export(__webpack_require__(\"./src/components/body/index.ts\"));\r\n__export(__webpack_require__(\"./src/components/footer/index.ts\"));\r\n__export(__webpack_require__(\"./src/components/columns/index.ts\"));\r\n__export(__webpack_require__(\"./src/components/row-detail/index.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/components/row-detail/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/components/row-detail/row-detail.directive.ts\"));\r\n__export(__webpack_require__(\"./src/components/row-detail/row-detail-template.directive.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/components/row-detail/row-detail-template.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar DatatableRowDetailTemplateDirective = (function () {\r\n    function DatatableRowDetailTemplateDirective(template) {\r\n        this.template = template;\r\n    }\r\n    ;\r\n    DatatableRowDetailTemplateDirective = __decorate([\r\n        core_1.Directive({\r\n            selector: '[swui-datatable-row-detail-template]'\r\n        }), \r\n        __metadata('design:paramtypes', [core_1.TemplateRef])\r\n    ], DatatableRowDetailTemplateDirective);\r\n    return DatatableRowDetailTemplateDirective;\r\n}());\r\nexports.DatatableRowDetailTemplateDirective = DatatableRowDetailTemplateDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/components/row-detail/row-detail.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar row_detail_template_directive_1 = __webpack_require__(\"./src/components/row-detail/row-detail-template.directive.ts\");\r\nvar DatatableRowDetailDirective = (function () {\r\n    function DatatableRowDetailDirective() {\r\n    }\r\n    Object.defineProperty(DatatableRowDetailDirective.prototype, \"rowDetailTemplate\", {\r\n        get: function () {\r\n            return this.template;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    __decorate([\r\n        core_1.ContentChild(row_detail_template_directive_1.DatatableRowDetailTemplateDirective, { read: core_1.TemplateRef }), \r\n        __metadata('design:type', core_1.TemplateRef)\r\n    ], DatatableRowDetailDirective.prototype, \"template\", void 0);\r\n    DatatableRowDetailDirective = __decorate([\r\n        core_1.Directive({ selector: 'swui-datatable-row-detail' }), \r\n        __metadata('design:paramtypes', [])\r\n    ], DatatableRowDetailDirective);\r\n    return DatatableRowDetailDirective;\r\n}());\r\nexports.DatatableRowDetailDirective = DatatableRowDetailDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/datatable.module.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar common_1 = __webpack_require__(2);\r\nvar components_1 = __webpack_require__(\"./src/components/index.ts\");\r\nvar directives_1 = __webpack_require__(\"./src/directives/index.ts\");\r\nvar Angular2DataTableModule = (function () {\r\n    function Angular2DataTableModule() {\r\n    }\r\n    Angular2DataTableModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [\r\n                common_1.CommonModule\r\n            ],\r\n            declarations: [\r\n                directives_1.VisibilityDirective,\r\n                directives_1.DraggableDirective,\r\n                directives_1.ResizeableDirective,\r\n                directives_1.OrderableDirective,\r\n                directives_1.LongPressDirective,\r\n                components_1.ScrollerComponent,\r\n                components_1.DatatableComponent,\r\n                components_1.DataTableColumnDirective,\r\n                components_1.DataTableHeaderComponent,\r\n                components_1.DataTableHeaderCellComponent,\r\n                components_1.DataTableBodyComponent,\r\n                components_1.DataTableFooterComponent,\r\n                components_1.DataTablePagerComponent,\r\n                components_1.ProgressBarComponent,\r\n                components_1.DataTableBodyRowComponent,\r\n                components_1.DataTableRowWrapperComponent,\r\n                components_1.DatatableRowDetailDirective,\r\n                components_1.DatatableRowDetailTemplateDirective,\r\n                components_1.DataTableBodyCellComponent,\r\n                components_1.DataTableSelectionComponent,\r\n                components_1.DataTableColumnHeaderDirective,\r\n                components_1.DataTableColumnCellDirective\r\n            ],\r\n            exports: [\r\n                components_1.DatatableComponent,\r\n                components_1.DatatableRowDetailDirective,\r\n                components_1.DatatableRowDetailTemplateDirective,\r\n                components_1.DataTableColumnDirective,\r\n                components_1.DataTableColumnHeaderDirective,\r\n                components_1.DataTableColumnCellDirective\r\n            ]\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], Angular2DataTableModule);\r\n    return Angular2DataTableModule;\r\n}());\r\nexports.Angular2DataTableModule = Angular2DataTableModule;\r\n\n\n/***/ },\n\n/***/ \"./src/directives/draggable.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar Rx_1 = __webpack_require__(1);\r\n/**\r\n * Draggable Directive for Angular2\r\n *\r\n * Inspiration:\r\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\r\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\r\n *\r\n */\r\nvar DraggableDirective = (function () {\r\n    function DraggableDirective(element) {\r\n        this.dragX = true;\r\n        this.dragY = true;\r\n        this.dragStart = new core_1.EventEmitter();\r\n        this.dragging = new core_1.EventEmitter();\r\n        this.dragEnd = new core_1.EventEmitter();\r\n        this.isDragging = false;\r\n        this.element = element.nativeElement;\r\n    }\r\n    DraggableDirective.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    DraggableDirective.prototype.onMouseup = function (event) {\r\n        this.isDragging = false;\r\n        this.element.classList.remove('dragging');\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.dragEnd.emit({\r\n                event: event,\r\n                element: this.element,\r\n                model: this.dragModel\r\n            });\r\n        }\r\n    };\r\n    DraggableDirective.prototype.onMousedown = function (event) {\r\n        var _this = this;\r\n        if (event.target.classList.contains('draggable')) {\r\n            event.preventDefault();\r\n            this.isDragging = true;\r\n            var mouseDownPos_1 = { x: event.clientX, y: event.clientY };\r\n            this.subscription = Rx_1.Observable.fromEvent(document, 'mousemove')\r\n                .subscribe(function (ev) { return _this.move(ev, mouseDownPos_1); });\r\n            this.dragStart.emit({\r\n                event: event,\r\n                element: this.element,\r\n                model: this.dragModel\r\n            });\r\n        }\r\n    };\r\n    DraggableDirective.prototype.move = function (event, mouseDownPos) {\r\n        if (!this.dragging)\r\n            return;\r\n        var x = event.clientX - mouseDownPos.x;\r\n        var y = event.clientY - mouseDownPos.y;\r\n        if (this.dragX)\r\n            this.element.style.left = x + \"px\";\r\n        if (this.dragY)\r\n            this.element.style.top = y + \"px\";\r\n        if (this.dragX || this.dragY) {\r\n            this.element.classList.add('dragging');\r\n            this.dragging.emit({\r\n                event: event,\r\n                element: this.element,\r\n                model: this.dragModel\r\n            });\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Object)\r\n    ], DraggableDirective.prototype, \"dragModel\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DraggableDirective.prototype, \"dragX\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], DraggableDirective.prototype, \"dragY\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DraggableDirective.prototype, \"dragStart\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DraggableDirective.prototype, \"dragging\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], DraggableDirective.prototype, \"dragEnd\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('document:mouseup', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [MouseEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], DraggableDirective.prototype, \"onMouseup\", null);\r\n    __decorate([\r\n        core_1.HostListener('mousedown', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [MouseEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], DraggableDirective.prototype, \"onMousedown\", null);\r\n    DraggableDirective = __decorate([\r\n        core_1.Directive({ selector: '[draggable]' }), \r\n        __metadata('design:paramtypes', [core_1.ElementRef])\r\n    ], DraggableDirective);\r\n    return DraggableDirective;\r\n}());\r\nexports.DraggableDirective = DraggableDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/directives/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/directives/draggable.directive.ts\"));\r\n__export(__webpack_require__(\"./src/directives/long-press.directive.ts\"));\r\n__export(__webpack_require__(\"./src/directives/orderable.directive.ts\"));\r\n__export(__webpack_require__(\"./src/directives/resizeable.directive.ts\"));\r\n__export(__webpack_require__(\"./src/directives/visibility.directive.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/directives/long-press.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar LongPressDirective = (function () {\r\n    function LongPressDirective() {\r\n        this.duration = 500;\r\n        this.longPress = new core_1.EventEmitter();\r\n        this.longPressing = new core_1.EventEmitter();\r\n        this.longPressEnd = new core_1.EventEmitter();\r\n        this.mouseX = 0;\r\n        this.mouseY = 0;\r\n    }\r\n    Object.defineProperty(LongPressDirective.prototype, \"press\", {\r\n        get: function () { return this.pressing; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LongPressDirective.prototype, \"isLongPress\", {\r\n        get: function () { return this.longPressing !== undefined; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LongPressDirective.prototype.onMouseDown = function (event) {\r\n        var _this = this;\r\n        // don't do right/middle clicks\r\n        if (event.which !== 1)\r\n            return;\r\n        this.mouseX = event.clientX;\r\n        this.mouseY = event.clientY;\r\n        this.pressing = true;\r\n        this.isLongPressing = false;\r\n        this.timeout = setTimeout(function () {\r\n            _this.isLongPressing = true;\r\n            _this.longPress.emit(event);\r\n            _this.loop(event);\r\n        }, this.duration);\r\n        this.loop(event);\r\n    };\r\n    LongPressDirective.prototype.onMouseMove = function (event) {\r\n        if (this.pressing && !this.longPressing) {\r\n            var xThres = (event.clientX - this.mouseX) > 10;\r\n            var yThres = (event.clientY - this.mouseY) > 10;\r\n            if (xThres || yThres) {\r\n                this.endPress();\r\n            }\r\n        }\r\n    };\r\n    LongPressDirective.prototype.loop = function (event) {\r\n        var _this = this;\r\n        if (this.longPressing) {\r\n            this.timeout = setTimeout(function () {\r\n                _this.longPressing.emit(event);\r\n                _this.loop(event);\r\n            }, 50);\r\n        }\r\n    };\r\n    LongPressDirective.prototype.endPress = function () {\r\n        clearTimeout(this.timeout);\r\n        this.isLongPressing = false;\r\n        this.pressing = false;\r\n        this.longPressEnd.emit(true);\r\n    };\r\n    LongPressDirective.prototype.onMouseUp = function () { this.endPress(); };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], LongPressDirective.prototype, \"duration\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], LongPressDirective.prototype, \"longPress\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], LongPressDirective.prototype, \"longPressing\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], LongPressDirective.prototype, \"longPressEnd\", void 0);\r\n    __decorate([\r\n        core_1.HostBinding('class.press'), \r\n        __metadata('design:type', Boolean)\r\n    ], LongPressDirective.prototype, \"press\", null);\r\n    __decorate([\r\n        core_1.HostBinding('class.longpress'), \r\n        __metadata('design:type', Boolean)\r\n    ], LongPressDirective.prototype, \"isLongPress\", null);\r\n    __decorate([\r\n        core_1.HostListener('mousedown', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [MouseEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], LongPressDirective.prototype, \"onMouseDown\", null);\r\n    __decorate([\r\n        core_1.HostListener('mousemove', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [MouseEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], LongPressDirective.prototype, \"onMouseMove\", null);\r\n    __decorate([\r\n        core_1.HostListener('mouseup'), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', void 0)\r\n    ], LongPressDirective.prototype, \"onMouseUp\", null);\r\n    LongPressDirective = __decorate([\r\n        core_1.Directive({ selector: '[long-press]' }), \r\n        __metadata('design:paramtypes', [])\r\n    ], LongPressDirective);\r\n    return LongPressDirective;\r\n}());\r\nexports.LongPressDirective = LongPressDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/directives/orderable.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar draggable_directive_1 = __webpack_require__(\"./src/directives/draggable.directive.ts\");\r\nvar OrderableDirective = (function () {\r\n    function OrderableDirective(differs) {\r\n        this.reorder = new core_1.EventEmitter();\r\n        this.differ = differs.find({}).create(null);\r\n    }\r\n    OrderableDirective.prototype.ngAfterContentInit = function () {\r\n        // HACK: Investigate Better Way\r\n        this.updateSubscriptions();\r\n        this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\r\n    };\r\n    OrderableDirective.prototype.ngOnDestroy = function () {\r\n        this.draggables.forEach(function (d) {\r\n            d.dragStart.unsubscribe();\r\n            d.dragEnd.unsubscribe();\r\n        });\r\n    };\r\n    OrderableDirective.prototype.updateSubscriptions = function () {\r\n        var _this = this;\r\n        var diffs = this.differ.diff(this.draggables.toArray());\r\n        if (diffs) {\r\n            var subscribe = function (_a) {\r\n                var currentValue = _a.currentValue, previousValue = _a.previousValue;\r\n                unsubscribe_1({ previousValue: previousValue });\r\n                if (currentValue) {\r\n                    currentValue.dragStart.subscribe(_this.onDragStart.bind(_this));\r\n                    currentValue.dragEnd.subscribe(_this.onDragEnd.bind(_this));\r\n                }\r\n            };\r\n            var unsubscribe_1 = function (_a) {\r\n                var previousValue = _a.previousValue;\r\n                if (previousValue) {\r\n                    previousValue.dragStart.unsubscribe();\r\n                    previousValue.dragEnd.unsubscribe();\r\n                }\r\n            };\r\n            diffs.forEachAddedItem(subscribe.bind(this));\r\n            diffs.forEachChangedItem(subscribe.bind(this));\r\n            diffs.forEachRemovedItem(unsubscribe_1.bind(this));\r\n        }\r\n    };\r\n    OrderableDirective.prototype.onDragStart = function () {\r\n        this.positions = {};\r\n        var i = 0;\r\n        for (var _i = 0, _a = this.draggables.toArray(); _i < _a.length; _i++) {\r\n            var dragger = _a[_i];\r\n            var elm = dragger.element;\r\n            this.positions[dragger.dragModel.prop] = {\r\n                left: parseInt(elm.offsetLeft.toString(), 0),\r\n                index: i++\r\n            };\r\n        }\r\n    };\r\n    OrderableDirective.prototype.onDragEnd = function (_a) {\r\n        var element = _a.element, model = _a.model;\r\n        var newPos = parseInt(element.offsetLeft.toString(), 0);\r\n        var prevPos = this.positions[model.prop];\r\n        var i = 0;\r\n        for (var prop in this.positions) {\r\n            var pos = this.positions[prop];\r\n            var movedLeft = newPos < pos.left && prevPos.left > pos.left;\r\n            var movedRight = newPos > pos.left && prevPos.left < pos.left;\r\n            if (movedLeft || movedRight) {\r\n                this.reorder.emit({\r\n                    prevIndex: prevPos.index,\r\n                    newIndex: i,\r\n                    model: model\r\n                });\r\n            }\r\n            i++;\r\n        }\r\n        element.style.left = 'auto';\r\n    };\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], OrderableDirective.prototype, \"reorder\", void 0);\r\n    __decorate([\r\n        core_1.ContentChildren(draggable_directive_1.DraggableDirective, { descendants: true }), \r\n        __metadata('design:type', core_1.QueryList)\r\n    ], OrderableDirective.prototype, \"draggables\", void 0);\r\n    OrderableDirective = __decorate([\r\n        core_1.Directive({ selector: '[orderable]' }), \r\n        __metadata('design:paramtypes', [core_1.KeyValueDiffers])\r\n    ], OrderableDirective);\r\n    return OrderableDirective;\r\n}());\r\nexports.OrderableDirective = OrderableDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/directives/resizeable.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\nvar Rx_1 = __webpack_require__(1);\r\nvar ResizeableDirective = (function () {\r\n    function ResizeableDirective(element) {\r\n        this.resizeEnabled = true;\r\n        this.resize = new core_1.EventEmitter();\r\n        this.resizing = false;\r\n        this.element = element.nativeElement;\r\n        if (this.resizeEnabled) {\r\n            var node = document.createElement('span');\r\n            node.classList.add('resize-handle');\r\n            this.element.appendChild(node);\r\n        }\r\n    }\r\n    ResizeableDirective.prototype.ngOnDestroy = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    ResizeableDirective.prototype.onMouseup = function () {\r\n        this.resizing = false;\r\n        if (this.subscription && !this.subscription.closed) {\r\n            this.subscription.unsubscribe();\r\n            this.resize.emit(this.element.clientWidth);\r\n        }\r\n    };\r\n    ResizeableDirective.prototype.onMousedown = function (event) {\r\n        var _this = this;\r\n        var isHandle = (event.target).classList.contains('resize-handle');\r\n        var initialWidth = this.element.clientWidth;\r\n        var mouseDownScreenX = event.screenX;\r\n        if (isHandle) {\r\n            event.stopPropagation();\r\n            this.resizing = true;\r\n            this.subscription = Rx_1.Observable.fromEvent(document, 'mousemove')\r\n                .subscribe(function (e) { return _this.move(e, initialWidth, mouseDownScreenX); });\r\n        }\r\n    };\r\n    ResizeableDirective.prototype.move = function (event, initialWidth, mouseDownScreenX) {\r\n        var movementX = event.screenX - mouseDownScreenX;\r\n        var newWidth = initialWidth + movementX;\r\n        var overMinWidth = !this.minWidth || newWidth >= this.minWidth;\r\n        var underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\r\n        if (overMinWidth && underMaxWidth) {\r\n            this.element.style.width = newWidth + \"px\";\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], ResizeableDirective.prototype, \"resizeEnabled\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], ResizeableDirective.prototype, \"minWidth\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], ResizeableDirective.prototype, \"maxWidth\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], ResizeableDirective.prototype, \"resize\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('document:mouseup'), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', void 0)\r\n    ], ResizeableDirective.prototype, \"onMouseup\", null);\r\n    __decorate([\r\n        core_1.HostListener('mousedown', ['$event']), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [MouseEvent]), \r\n        __metadata('design:returntype', void 0)\r\n    ], ResizeableDirective.prototype, \"onMousedown\", null);\r\n    ResizeableDirective = __decorate([\r\n        core_1.Directive({\r\n            selector: '[resizeable]',\r\n            host: {\r\n                '[class.resizeable]': 'resizeEnabled'\r\n            }\r\n        }), \r\n        __metadata('design:paramtypes', [core_1.ElementRef])\r\n    ], ResizeableDirective);\r\n    return ResizeableDirective;\r\n}());\r\nexports.ResizeableDirective = ResizeableDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/directives/visibility.directive.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = __webpack_require__(0);\r\n/**\r\n * Visibility Observer Directive\r\n *\r\n * Usage:\r\n *\r\n * \t\t<div\r\n * \t\t\tvisibility-observer\r\n * \t\t\t(visible)=\"onVisible($event)\">\r\n * \t\t</div>\r\n *\r\n */\r\nvar VisibilityDirective = (function () {\r\n    function VisibilityDirective(element, zone) {\r\n        this.element = element;\r\n        this.zone = zone;\r\n        this.isVisible = false;\r\n        this.visible = new core_1.EventEmitter();\r\n    }\r\n    VisibilityDirective.prototype.ngOnInit = function () {\r\n        this.runCheck();\r\n    };\r\n    VisibilityDirective.prototype.ngOnDestroy = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    VisibilityDirective.prototype.onVisibilityChange = function () {\r\n        var _this = this;\r\n        // trigger zone recalc for columns\r\n        this.zone.run(function () {\r\n            _this.isVisible = true;\r\n            _this.visible.emit(true);\r\n        });\r\n    };\r\n    VisibilityDirective.prototype.runCheck = function () {\r\n        var _this = this;\r\n        var check = function () {\r\n            // https://davidwalsh.name/offsetheight-visibility\r\n            var _a = _this.element.nativeElement, offsetHeight = _a.offsetHeight, offsetWidth = _a.offsetWidth;\r\n            if (offsetHeight && offsetWidth) {\r\n                clearTimeout(_this.timeout);\r\n                _this.onVisibilityChange();\r\n            }\r\n            else {\r\n                clearTimeout(_this.timeout);\r\n                _this.zone.runOutsideAngular(function () {\r\n                    _this.timeout = setTimeout(function () { return check(); }, 50);\r\n                });\r\n            }\r\n        };\r\n        setTimeout(function () { return check(); });\r\n    };\r\n    __decorate([\r\n        core_1.HostBinding('class.visible'), \r\n        __metadata('design:type', Boolean)\r\n    ], VisibilityDirective.prototype, \"isVisible\", void 0);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], VisibilityDirective.prototype, \"visible\", void 0);\r\n    VisibilityDirective = __decorate([\r\n        core_1.Directive({ selector: '[visibility-observer]' }), \r\n        __metadata('design:paramtypes', [core_1.ElementRef, core_1.NgZone])\r\n    ], VisibilityDirective);\r\n    return VisibilityDirective;\r\n}());\r\nexports.VisibilityDirective = VisibilityDirective;\r\n\n\n/***/ },\n\n/***/ \"./src/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/datatable.module.ts\"));\r\n__export(__webpack_require__(\"./src/types/index.ts\"));\r\n__export(__webpack_require__(\"./src/components/index.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/types/click.type.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n(function (ClickType) {\r\n    ClickType[ClickType[\"single\"] = 'single'] = \"single\";\r\n    ClickType[ClickType[\"double\"] = 'double'] = \"double\";\r\n})(exports.ClickType || (exports.ClickType = {}));\r\nvar ClickType = exports.ClickType;\r\n\n\n/***/ },\n\n/***/ \"./src/types/column-mode.type.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n(function (ColumnMode) {\r\n    ColumnMode[ColumnMode[\"standard\"] = 'standard'] = \"standard\";\r\n    ColumnMode[ColumnMode[\"flex\"] = 'flex'] = \"flex\";\r\n    ColumnMode[ColumnMode[\"force\"] = 'force'] = \"force\";\r\n})(exports.ColumnMode || (exports.ColumnMode = {}));\r\nvar ColumnMode = exports.ColumnMode;\r\n\n\n/***/ },\n\n/***/ \"./src/types/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/types/column-mode.type.ts\"));\r\n__export(__webpack_require__(\"./src/types/sort.type.ts\"));\r\n__export(__webpack_require__(\"./src/types/sort-direction.type.ts\"));\r\n__export(__webpack_require__(\"./src/types/selection.type.ts\"));\r\n__export(__webpack_require__(\"./src/types/click.type.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/types/selection.type.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n(function (SelectionType) {\r\n    SelectionType[SelectionType[\"single\"] = 'single'] = \"single\";\r\n    SelectionType[SelectionType[\"multi\"] = 'multi'] = \"multi\";\r\n    SelectionType[SelectionType[\"cell\"] = 'cell'] = \"cell\";\r\n    SelectionType[SelectionType[\"checkbox\"] = 'checkbox'] = \"checkbox\";\r\n})(exports.SelectionType || (exports.SelectionType = {}));\r\nvar SelectionType = exports.SelectionType;\r\n\n\n/***/ },\n\n/***/ \"./src/types/sort-direction.type.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"asc\"] = 'asc'] = \"asc\";\r\n    SortDirection[SortDirection[\"desc\"] = 'desc'] = \"desc\";\r\n})(exports.SortDirection || (exports.SortDirection = {}));\r\nvar SortDirection = exports.SortDirection;\r\n\n\n/***/ },\n\n/***/ \"./src/types/sort.type.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n(function (SortType) {\r\n    SortType[SortType[\"single\"] = 'single'] = \"single\";\r\n    SortType[SortType[\"multi\"] = 'multi'] = \"multi\";\r\n})(exports.SortType || (exports.SortType = {}));\r\nvar SortType = exports.SortType;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/camel-case.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Converts strings from something to camel case\r\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\r\n * @param  {string} str\r\n * @return {string} camel case string\r\n */\r\nfunction camelCase(str) {\r\n    // Replace special characters with a space\r\n    str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\r\n    // put a space before an uppercase letter\r\n    str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\r\n    // Lower case first character and some other stuff\r\n    str = str.replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '').trim().toLowerCase();\r\n    // uppercase characters preceded by a space or number\r\n    str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\r\n        return b.trim() + c.toUpperCase();\r\n    });\r\n    return str;\r\n}\r\nexports.camelCase = camelCase;\r\n/**\r\n * Converts strings from camel case to words\r\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\r\n *\r\n * @export\r\n * @param {any} str\r\n * @returns string\r\n */\r\nfunction deCamelCase(str) {\r\n    return str\r\n        .replace(/([A-Z])/g, function (match) { return (\" \" + match); })\r\n        .replace(/^./, function (match) { return match.toUpperCase(); });\r\n}\r\nexports.deCamelCase = deCamelCase;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/column-helper.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar utils_1 = __webpack_require__(\"./src/utils/index.ts\");\r\n/**\r\n * Sets the column defaults\r\n *\r\n * @export\r\n * @param {any[]} columns\r\n * @returns\r\n */\r\nfunction setColumnDefaults(columns) {\r\n    if (!columns)\r\n        return;\r\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\r\n        var column = columns_1[_i];\r\n        if (!column.$$id) {\r\n            column.$$id = utils_1.id();\r\n        }\r\n        // translate name => prop\r\n        if (!column.prop && column.name) {\r\n            column.prop = utils_1.camelCase(column.name);\r\n        }\r\n        // format props if no name passed\r\n        if (column.prop && !column.name) {\r\n            column.name = utils_1.deCamelCase(column.prop);\r\n        }\r\n        if (!column.hasOwnProperty('resizeable')) {\r\n            column.resizeable = true;\r\n        }\r\n        if (!column.hasOwnProperty('sortable')) {\r\n            column.sortable = true;\r\n        }\r\n        if (!column.hasOwnProperty('draggable')) {\r\n            column.draggable = true;\r\n        }\r\n        if (!column.hasOwnProperty('canAutoResize')) {\r\n            column.canAutoResize = true;\r\n        }\r\n        if (!column.hasOwnProperty('width')) {\r\n            column.width = 150;\r\n        }\r\n    }\r\n}\r\nexports.setColumnDefaults = setColumnDefaults;\r\n/**\r\n * Translates templates definitions to objects\r\n *\r\n * @export\r\n * @param {DataTableColumnDirective[]} templates\r\n * @returns {any[]}\r\n */\r\nfunction translateTemplates(templates) {\r\n    var result = [];\r\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\r\n        var temp = templates_1[_i];\r\n        var col = {};\r\n        var props = Object.getOwnPropertyNames(temp);\r\n        for (var _a = 0, props_1 = props; _a < props_1.length; _a++) {\r\n            var prop = props_1[_a];\r\n            col[prop] = temp[prop];\r\n        }\r\n        if (temp.headerTemplate) {\r\n            col.headerTemplate = temp.headerTemplate;\r\n        }\r\n        if (temp.cellTemplate) {\r\n            col.cellTemplate = temp.cellTemplate;\r\n        }\r\n        result.push(col);\r\n    }\r\n    return result;\r\n}\r\nexports.translateTemplates = translateTemplates;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/column.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Returns the columns by pin.\r\n * @param {array} cols\r\n */\r\nfunction columnsByPin(cols) {\r\n    var ret = {\r\n        left: [],\r\n        center: [],\r\n        right: []\r\n    };\r\n    if (cols) {\r\n        for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {\r\n            var col = cols_1[_i];\r\n            if (col.frozenLeft) {\r\n                ret.left.push(col);\r\n            }\r\n            else if (col.frozenRight) {\r\n                ret.right.push(col);\r\n            }\r\n            else {\r\n                ret.center.push(col);\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexports.columnsByPin = columnsByPin;\r\n/**\r\n * Returns the widths of all group sets of a column\r\n * @param {object} groups\r\n * @param {array} all\r\n */\r\nfunction columnGroupWidths(groups, all) {\r\n    return {\r\n        left: columnTotalWidth(groups.left),\r\n        center: columnTotalWidth(groups.center),\r\n        right: columnTotalWidth(groups.right),\r\n        total: columnTotalWidth(all)\r\n    };\r\n}\r\nexports.columnGroupWidths = columnGroupWidths;\r\n/**\r\n * Calculates the total width of all columns and their groups\r\n * @param {array} columns\r\n * @param {string} prop width to get\r\n */\r\nfunction columnTotalWidth(columns, prop) {\r\n    var totalWidth = 0;\r\n    if (columns) {\r\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\r\n            var c = columns_1[_i];\r\n            var has = prop && c[prop];\r\n            var width = has ? c[prop] : c.width;\r\n            totalWidth = totalWidth + parseFloat(width);\r\n        }\r\n    }\r\n    return totalWidth;\r\n}\r\nexports.columnTotalWidth = columnTotalWidth;\r\n/**\r\n * Calculates the total width of all columns and their groups\r\n * @param {array} columns\r\n * @param {string} property width to get\r\n */\r\nfunction columnsTotalWidth(columns, prop) {\r\n    var totalWidth = 0;\r\n    for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\r\n        var column = columns_2[_i];\r\n        var has = prop && column[prop];\r\n        totalWidth = totalWidth + (has ? column[prop] : column.width);\r\n    }\r\n    return totalWidth;\r\n}\r\nexports.columnsTotalWidth = columnsTotalWidth;\r\nfunction columnsByPinArr(val) {\r\n    var colsByPinArr = [];\r\n    var colsByPin = columnsByPin(val);\r\n    colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\r\n    colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\r\n    colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\r\n    return colsByPinArr;\r\n}\r\nexports.columnsByPinArr = columnsByPinArr;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/deep-getter.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Returns a deep object given a string. zoo['animal.type']\r\n * @param {object} obj\r\n * @param {string} path\r\n */\r\nfunction deepValueGetter(obj, path) {\r\n    if (!obj || !path)\r\n        return obj;\r\n    var current = obj;\r\n    var split = path.split('.');\r\n    if (split.length) {\r\n        for (var i = 0, len = split.length; i < len; i++) {\r\n            current = current[split[i]];\r\n            // if found undefined, return empty string\r\n            if (current === undefined || current === null)\r\n                return '';\r\n        }\r\n    }\r\n    return current;\r\n}\r\nexports.deepValueGetter = deepValueGetter;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/id.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Creates a unique object id.\r\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\r\n */\r\nfunction id() {\r\n    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\r\n}\r\nexports.id = id;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/index.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(\"./src/utils/id.ts\"));\r\n__export(__webpack_require__(\"./src/utils/column.ts\"));\r\n__export(__webpack_require__(\"./src/utils/deep-getter.ts\"));\r\n__export(__webpack_require__(\"./src/utils/camel-case.ts\"));\r\n__export(__webpack_require__(\"./src/utils/keys.ts\"));\r\n__export(__webpack_require__(\"./src/utils/math.ts\"));\r\n__export(__webpack_require__(\"./src/utils/prefixes.ts\"));\r\n__export(__webpack_require__(\"./src/utils/scrollbar-width.ts\"));\r\n__export(__webpack_require__(\"./src/utils/selection.ts\"));\r\n__export(__webpack_require__(\"./src/utils/translate.ts\"));\r\n__export(__webpack_require__(\"./src/utils/throttle.ts\"));\r\n__export(__webpack_require__(\"./src/utils/sort.ts\"));\r\n__export(__webpack_require__(\"./src/utils/row-height-cache.ts\"));\r\n__export(__webpack_require__(\"./src/utils/column-helper.ts\"));\r\n\n\n/***/ },\n\n/***/ \"./src/utils/keys.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n(function (Keys) {\r\n    Keys[Keys[\"up\"] = 38] = \"up\";\r\n    Keys[Keys[\"down\"] = 40] = \"down\";\r\n    Keys[Keys[\"return\"] = 13] = \"return\";\r\n    Keys[Keys[\"escape\"] = 27] = \"escape\";\r\n    Keys[Keys[\"left\"] = 37] = \"left\";\r\n    Keys[Keys[\"right\"] = 39] = \"right\";\r\n})(exports.Keys || (exports.Keys = {}));\r\nvar Keys = exports.Keys;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/math.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar column_1 = __webpack_require__(\"./src/utils/column.ts\");\r\n/**\r\n * Calculates the Total Flex Grow\r\n * @param {array}\r\n */\r\nfunction getTotalFlexGrow(columns) {\r\n    var totalFlexGrow = 0;\r\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\r\n        var c = columns_1[_i];\r\n        totalFlexGrow += c.flexGrow || 0;\r\n    }\r\n    return totalFlexGrow;\r\n}\r\nexports.getTotalFlexGrow = getTotalFlexGrow;\r\n/**\r\n * Adjusts the column widths.\r\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\r\n * @param {array} all columns\r\n * @param {int} width\r\n */\r\nfunction adjustColumnWidths(allColumns, expectedWidth) {\r\n    var columnsWidth = column_1.columnsTotalWidth(allColumns);\r\n    var totalFlexGrow = getTotalFlexGrow(allColumns);\r\n    var colsByGroup = column_1.columnsByPin(allColumns);\r\n    if (columnsWidth !== expectedWidth) {\r\n        scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\r\n    }\r\n}\r\nexports.adjustColumnWidths = adjustColumnWidths;\r\n/**\r\n * Resizes columns based on the flexGrow property, while respecting manually set widths\r\n * @param {array} colsByGroup\r\n * @param {int} maxWidth\r\n * @param {int} totalFlexGrow\r\n */\r\nfunction scaleColumns(colsByGroup, maxWidth, totalFlexGrow) {\r\n    // calculate total width and flexgrow points for coulumns that can be resized\r\n    for (var attr in colsByGroup) {\r\n        for (var _i = 0, _a = colsByGroup[attr]; _i < _a.length; _i++) {\r\n            var column = _a[_i];\r\n            if (!column.canAutoResize) {\r\n                maxWidth -= column.width;\r\n                totalFlexGrow -= column.flexGrow;\r\n            }\r\n            else {\r\n                column.width = 0;\r\n            }\r\n        }\r\n    }\r\n    var hasMinWidth = {};\r\n    var remainingWidth = maxWidth;\r\n    // resize columns until no width is left to be distributed\r\n    do {\r\n        var widthPerFlexPoint = remainingWidth / totalFlexGrow;\r\n        remainingWidth = 0;\r\n        for (var attr in colsByGroup) {\r\n            for (var _b = 0, _c = colsByGroup[attr]; _b < _c.length; _b++) {\r\n                var column = _c[_b];\r\n                // if the column can be resize and it hasn't reached its minimum width yet\r\n                if (column.canAutoResize && !hasMinWidth[column.prop]) {\r\n                    var newWidth = column.width + column.flexGrow * widthPerFlexPoint;\r\n                    if (column.minWidth !== undefined && newWidth < column.minWidth) {\r\n                        remainingWidth += newWidth - column.minWidth;\r\n                        column.width = column.minWidth;\r\n                        hasMinWidth[column.prop] = true;\r\n                    }\r\n                    else {\r\n                        column.width = newWidth;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } while (remainingWidth !== 0);\r\n}\r\n/**\r\n * Forces the width of the columns to\r\n * distribute equally but overflowing when nesc.\r\n *\r\n * Rules:\r\n *\r\n *  - If combined withs are less than the total width of the grid,\r\n *    proporation the widths given the min / max / noraml widths to fill the width.\r\n *\r\n *  - If the combined widths, exceed the total width of the grid,\r\n *    use the standard widths.\r\n *\r\n *  - If a column is resized, it should always use that width\r\n *\r\n *  - The proporational widths should never fall below min size if specified.\r\n *\r\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\r\n *    the width should use the orginial width; not the newly proporatied widths.\r\n *\r\n * @param {array} allColumns\r\n * @param {int} expectedWidth\r\n */\r\nfunction forceFillColumnWidths(allColumns, expectedWidth, startIdx, allowBleed, defaultColWidth) {\r\n    if (defaultColWidth === void 0) { defaultColWidth = 300; }\r\n    var columnsToResize = allColumns\r\n        .slice(startIdx + 1, allColumns.length)\r\n        .filter(function (c) {\r\n        return c.canAutoResize !== false;\r\n    });\r\n    for (var _i = 0, columnsToResize_1 = columnsToResize; _i < columnsToResize_1.length; _i++) {\r\n        var column = columnsToResize_1[_i];\r\n        if (!column.$$oldWidth) {\r\n            column.$$oldWidth = column.width;\r\n        }\r\n    }\r\n    var additionWidthPerColumn = 0;\r\n    var exceedsWindow = false;\r\n    var contentWidth = getContentWidth(allColumns, defaultColWidth);\r\n    var remainingWidth = expectedWidth - contentWidth;\r\n    var columnsProcessed = [];\r\n    // This loop takes care of the\r\n    do {\r\n        additionWidthPerColumn = remainingWidth / columnsToResize.length;\r\n        exceedsWindow = contentWidth >= expectedWidth;\r\n        for (var _a = 0, columnsToResize_2 = columnsToResize; _a < columnsToResize_2.length; _a++) {\r\n            var column = columnsToResize_2[_a];\r\n            if (exceedsWindow && allowBleed) {\r\n                column.width = column.$$oldWidth || column.width || defaultColWidth;\r\n            }\r\n            else {\r\n                var newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\r\n                if (column.minWidth && newSize < column.minWidth) {\r\n                    column.width = column.minWidth;\r\n                    columnsProcessed.push(column);\r\n                }\r\n                else if (column.maxWidth && newSize > column.maxWidth) {\r\n                    column.width = column.maxWidth;\r\n                    columnsProcessed.push(column);\r\n                }\r\n                else {\r\n                    column.width = newSize;\r\n                }\r\n            }\r\n            column.width = Math.max(0, column.width);\r\n        }\r\n        contentWidth = getContentWidth(allColumns);\r\n        remainingWidth = expectedWidth - contentWidth;\r\n        removeProcessedColumns(columnsToResize, columnsProcessed);\r\n    } while (remainingWidth > 0 && columnsToResize.length !== 0);\r\n}\r\nexports.forceFillColumnWidths = forceFillColumnWidths;\r\n/**\r\n * Remove the processed columns from the current active columns.\r\n *\r\n * @param columnsToResize  Array containing the columns that need to be resized.\r\n * @param columnsProcessed Array containing the columns that have already been processed.\r\n */\r\nfunction removeProcessedColumns(columnsToResize, columnsProcessed) {\r\n    for (var _i = 0, columnsProcessed_1 = columnsProcessed; _i < columnsProcessed_1.length; _i++) {\r\n        var column = columnsProcessed_1[_i];\r\n        var index = columnsToResize.indexOf(column);\r\n        columnsToResize.splice(index, 1);\r\n    }\r\n}\r\n/**\r\n * Gets the width of the columns\r\n *\r\n * @param {array} allColumns\r\n * @param {number} [defaultColWidth=300]\r\n * @returns {number}\r\n */\r\nfunction getContentWidth(allColumns, defaultColWidth) {\r\n    if (defaultColWidth === void 0) { defaultColWidth = 300; }\r\n    var contentWidth = 0;\r\n    for (var _i = 0, allColumns_1 = allColumns; _i < allColumns_1.length; _i++) {\r\n        var column = allColumns_1[_i];\r\n        contentWidth += (column.width || defaultColWidth);\r\n    }\r\n    return contentWidth;\r\n}\r\n\n\n/***/ },\n\n/***/ \"./src/utils/prefixes.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar camel_case_1 = __webpack_require__(\"./src/utils/camel-case.ts\");\r\nvar cache = {};\r\nvar testStyle = document.createElement('div').style;\r\n// Get Prefix\r\n// http://davidwalsh.name/vendor-prefix\r\nvar prefix = (function () {\r\n    var styles = window.getComputedStyle(document.documentElement, '');\r\n    var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/))[1];\r\n    var dom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];\r\n    return {\r\n        dom: dom,\r\n        lowercase: pre,\r\n        css: \"-\" + pre + \"-\",\r\n        js: pre[0].toUpperCase() + pre.substr(1)\r\n    };\r\n})();\r\nfunction getVendorPrefixedName(property) {\r\n    var name = camel_case_1.camelCase(property);\r\n    if (!cache[name]) {\r\n        if (testStyle[prefix.css + property] !== undefined) {\r\n            cache[name] = prefix.css + property;\r\n        }\r\n        else if (testStyle[property] !== undefined) {\r\n            cache[name] = property;\r\n        }\r\n    }\r\n    return cache[name];\r\n}\r\nexports.getVendorPrefixedName = getVendorPrefixedName;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/row-height-cache.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * This object contains the cache of the various row heights that are present inside\r\n * the data table.   Its based on Fenwick tree data structure that helps with\r\n * querying sums that have time complexity of log n.\r\n *\r\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\r\n * https://github.com/mikolalysenko/fenwick-tree\r\n *\r\n */\r\nvar RowHeightCache = (function () {\r\n    function RowHeightCache() {\r\n        /**\r\n         * Tree Array stores the cumulative information of the row heights to perform efficient\r\n         * range queries and updates.  Currently the tree is initialized to the base row\r\n         * height instead of the detail row height.\r\n         */\r\n        this.treeArray = [];\r\n    }\r\n    /**\r\n     * Clear the Tree array.\r\n     */\r\n    RowHeightCache.prototype.clearCache = function () {\r\n        this.treeArray = [];\r\n    };\r\n    /**\r\n     * Initialize the Fenwick tree with row Heights.\r\n     *\r\n     * @param rows The array of rows which contain the expanded status.\r\n     * @param rowHeight The row height.\r\n     * @param detailRowHeight The detail row height.\r\n     */\r\n    RowHeightCache.prototype.initCache = function (rows, rowHeight, detailRowHeight) {\r\n        if (isNaN(rowHeight)) {\r\n            throw new Error(\"Row Height cache initialization failed. Please ensure that 'rowHeight' is a\\n        valid number value: (\" + rowHeight + \") when 'scrollbarV' is enabled.\");\r\n        }\r\n        // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\r\n        if (isNaN(detailRowHeight)) {\r\n            throw new Error(\"Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\\n        valid number value: (\" + detailRowHeight + \") when 'scrollbarV' is enabled.\");\r\n        }\r\n        var n = rows.length;\r\n        this.treeArray = new Array(n);\r\n        for (var i = 0; i < n; ++i) {\r\n            this.treeArray[i] = 0;\r\n        }\r\n        for (var i = 0; i < n; ++i) {\r\n            var currentRowHeight = rowHeight;\r\n            // Add the detail row height to the already expanded rows.\r\n            // This is useful for the table that goes through a filter or sort.\r\n            if (rows[i] && rows[i].$$expanded === 1) {\r\n                currentRowHeight += detailRowHeight;\r\n            }\r\n            this.update(i, currentRowHeight);\r\n        }\r\n    };\r\n    /**\r\n     * Given the ScrollY position i.e. sum, provide the rowIndex\r\n     * that is present in the current view port.  Below handles edge cases.\r\n     *\r\n     * @param scrollY - The scrollY position.\r\n     * @returns {number} - Index representing the first row visible in the viewport\r\n     */\r\n    RowHeightCache.prototype.getRowIndex = function (scrollY) {\r\n        if (scrollY === 0)\r\n            return 0;\r\n        return this.calcRowIndex(scrollY);\r\n    };\r\n    /**\r\n     * When a row is expanded or rowHeight is changed, update the height.  This can\r\n     * be utilized in future when Angular Data table supports dynamic row heights.\r\n     *\r\n     *\r\n     * @param atRowIndex Update the data at this index row in the grid.\r\n     * @param byRowHeight Update by the rowHeight provided.\r\n     */\r\n    RowHeightCache.prototype.update = function (atRowIndex, byRowHeight) {\r\n        if (!this.treeArray.length) {\r\n            throw new Error(\"Update at index \" + atRowIndex + \" with value \" + byRowHeight + \" failed:\\n        Row Height cache not initialized.\");\r\n        }\r\n        var n = this.treeArray.length;\r\n        atRowIndex |= 0;\r\n        while (atRowIndex < n) {\r\n            this.treeArray[atRowIndex] += byRowHeight;\r\n            atRowIndex |= (atRowIndex + 1);\r\n        }\r\n    };\r\n    /**\r\n     * Range Sum query from 1 to the rowIndex\r\n     *\r\n     * @param atIndex The row index until which the total height needs to be obtained.\r\n     * @returns {number} The total height from row 1 to the rowIndex.\r\n     */\r\n    RowHeightCache.prototype.query = function (atIndex) {\r\n        if (!this.treeArray.length) {\r\n            throw new Error(\"query at index \" + atIndex + \" failed: Fenwick tree array not initialized.\");\r\n        }\r\n        var sum = 0;\r\n        atIndex |= 0;\r\n        while (atIndex >= 0) {\r\n            sum += this.treeArray[atIndex];\r\n            atIndex = (atIndex & (atIndex + 1)) - 1;\r\n        }\r\n        return sum;\r\n    };\r\n    /**\r\n     * Find the total height between 2 row indexes\r\n     * @param atIndexA The row index from\r\n     * @param atIndexB The row index to\r\n     * @returns {number} total pixel height between 2 row indexes.\r\n     */\r\n    RowHeightCache.prototype.queryBetween = function (atIndexA, atIndexB) {\r\n        return this.query(atIndexB) - this.query(atIndexA - 1);\r\n    };\r\n    /**\r\n     * Given the ScrollY position i.e. sum, provide the rowIndex\r\n     * that is present in the current view port.\r\n     *\r\n     * @param sum - The scrollY position.\r\n     * @returns {number} - Index representing the first row visible in the viewport\r\n     */\r\n    RowHeightCache.prototype.calcRowIndex = function (sum) {\r\n        if (!this.treeArray.length)\r\n            return 0;\r\n        var pos = -1;\r\n        var dataLength = this.treeArray.length;\r\n        // Get the highest bit for the block size.\r\n        var highestBit = Math.pow(2, dataLength.toString(2).length - 1);\r\n        for (var blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\r\n            var nextPos = pos + blockSize;\r\n            if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\r\n                sum -= this.treeArray[nextPos];\r\n                pos = nextPos;\r\n            }\r\n        }\r\n        return pos + 1;\r\n    };\r\n    return RowHeightCache;\r\n}());\r\nexports.RowHeightCache = RowHeightCache;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/scrollbar-width.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Gets the width of the scrollbar.  Nesc for windows\r\n * http://stackoverflow.com/a/13382873/888165\r\n * @return {int} width\r\n */\r\nfunction getScrollBarWidth() {\r\n    var outer = document.createElement('div');\r\n    outer.style.visibility = 'hidden';\r\n    outer.style.width = '100px';\r\n    outer.style.msOverflowStyle = 'scrollbar';\r\n    document.body.appendChild(outer);\r\n    var widthNoScroll = outer.offsetWidth;\r\n    outer.style.overflow = 'scroll';\r\n    var inner = document.createElement('div');\r\n    inner.style.width = '100%';\r\n    outer.appendChild(inner);\r\n    var widthWithScroll = inner.offsetWidth;\r\n    outer.parentNode.removeChild(outer);\r\n    return widthNoScroll - widthWithScroll;\r\n}\r\nexports.getScrollBarWidth = getScrollBarWidth;\r\n;\r\nexports.scrollbarWidth = getScrollBarWidth();\r\n\n\n/***/ },\n\n/***/ \"./src/utils/selection.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction selectRows(selected, row, comparefn) {\r\n    var selectedIndex = comparefn(row, selected);\r\n    if (selectedIndex > -1) {\r\n        selected.splice(selectedIndex, 1);\r\n    }\r\n    else {\r\n        selected.push(row);\r\n    }\r\n    return selected;\r\n}\r\nexports.selectRows = selectRows;\r\nfunction selectRowsBetween(selected, rows, index, prevIndex, comparefn) {\r\n    var reverse = index < prevIndex;\r\n    for (var i = 0, len = rows.length; i < len; i++) {\r\n        var row = rows[i];\r\n        var greater = i >= prevIndex && i <= index;\r\n        var lesser = i <= prevIndex && i >= index;\r\n        var range = { start: 0, end: 0 };\r\n        if (reverse) {\r\n            range = {\r\n                start: index,\r\n                end: (prevIndex - index)\r\n            };\r\n        }\r\n        else {\r\n            range = {\r\n                start: prevIndex,\r\n                end: index + 1\r\n            };\r\n        }\r\n        if ((reverse && lesser) || (!reverse && greater)) {\r\n            var idx = comparefn(row, selected);\r\n            // if reverse shift selection (unselect) and the\r\n            // row is already selected, remove it from selected\r\n            if (reverse && idx > -1) {\r\n                selected.splice(idx, 1);\r\n                continue;\r\n            }\r\n            // if in the positive range to be added to `selected`, and\r\n            // not already in the selected array, add it\r\n            if (i >= range.start && i < range.end) {\r\n                if (idx === -1) {\r\n                    selected.push(row);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return selected;\r\n}\r\nexports.selectRowsBetween = selectRowsBetween;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/sort.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar types_1 = __webpack_require__(\"./src/types/index.ts\");\r\nvar deep_getter_1 = __webpack_require__(\"./src/utils/deep-getter.ts\");\r\n/**\r\n * Gets the next sort direction\r\n * @param  {SortType}      sortType\r\n * @param  {SortDirection} currentSort\r\n * @return {SortDirection}\r\n */\r\nfunction nextSortDir(sortType, current) {\r\n    if (sortType === types_1.SortType.single) {\r\n        if (current === types_1.SortDirection.asc) {\r\n            return types_1.SortDirection.desc;\r\n        }\r\n        else {\r\n            return types_1.SortDirection.asc;\r\n        }\r\n    }\r\n    else {\r\n        if (!current) {\r\n            return types_1.SortDirection.asc;\r\n        }\r\n        else if (current === types_1.SortDirection.asc) {\r\n            return types_1.SortDirection.desc;\r\n        }\r\n        else if (current === types_1.SortDirection.desc) {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nexports.nextSortDir = nextSortDir;\r\n;\r\n/**\r\n * Adapted from fueld-ui on 6/216\r\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\r\n * @param  {any}    a\r\n * @param  {any}    b\r\n * @return {number} position\r\n */\r\nfunction orderByComparator(a, b) {\r\n    if (a === null || typeof a === 'undefined')\r\n        a = 0;\r\n    if (b === null || typeof b === 'undefined')\r\n        b = 0;\r\n    if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))) {\r\n        // Convert to string in case of a=0 or b=0\r\n        a = String(a);\r\n        b = String(b);\r\n        // Isn't a number so lowercase the string to properly compare\r\n        if (a.toLowerCase() < b.toLowerCase())\r\n            return -1;\r\n        if (a.toLowerCase() > b.toLowerCase())\r\n            return 1;\r\n    }\r\n    else {\r\n        // Parse strings as numbers to compare properly\r\n        if (parseFloat(a) < parseFloat(b))\r\n            return -1;\r\n        if (parseFloat(a) > parseFloat(b))\r\n            return 1;\r\n    }\r\n    // equal each other\r\n    return 0;\r\n}\r\nexports.orderByComparator = orderByComparator;\r\n/**\r\n * Sorts the rows\r\n *\r\n * @export\r\n * @param {any[]} rows\r\n * @param {any[]} columns\r\n * @param {any[]} dirs\r\n * @returns\r\n */\r\nfunction sortRows(rows, columns, dirs) {\r\n    if (!rows || !dirs || !dirs.length || !columns)\r\n        return rows;\r\n    var temp = rows.slice();\r\n    var cols = columns.reduce(function (obj, col) {\r\n        if (col.comparator && typeof col.comparator === 'function') {\r\n            obj[col.prop] = col.comparator;\r\n        }\r\n        return obj;\r\n    }, {});\r\n    return temp.sort(function (a, b) {\r\n        for (var _i = 0, dirs_1 = dirs; _i < dirs_1.length; _i++) {\r\n            var _a = dirs_1[_i], prop = _a.prop, dir = _a.dir;\r\n            var propA = deep_getter_1.deepValueGetter(a, prop);\r\n            var propB = deep_getter_1.deepValueGetter(b, prop);\r\n            var compareFn = cols[prop] || orderByComparator;\r\n            var comparison = dir !== types_1.SortDirection.desc ?\r\n                compareFn(propA, propB) :\r\n                -compareFn(propA, propB);\r\n            // Don't return 0 yet in case of needing to sort by next property\r\n            if (comparison !== 0)\r\n                return comparison;\r\n        }\r\n        // equal each other\r\n        return 0;\r\n    });\r\n}\r\nexports.sortRows = sortRows;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/throttle.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Throttle a function\r\n *\r\n * @export\r\n * @param {*} func\r\n * @param {number} wait\r\n * @param {*} [options]\r\n * @returns\r\n */\r\nfunction throttle(func, wait, options) {\r\n    options = options || {};\r\n    var context;\r\n    var args;\r\n    var result;\r\n    var timeout = null;\r\n    var previous = 0;\r\n    function later() {\r\n        previous = options.leading === false ? 0 : +new Date();\r\n        timeout = null;\r\n        result = func.apply(context, args);\r\n    }\r\n    return function () {\r\n        var now = +new Date();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        var remaining = wait - (now - previous);\r\n        context = this;\r\n        args = arguments;\r\n        if (remaining <= 0) {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n            previous = now;\r\n            result = func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(later, remaining);\r\n        }\r\n        return result;\r\n    };\r\n}\r\nexports.throttle = throttle;\r\n/**\r\n * Throttle decorator\r\n *\r\n *  class MyClass {\r\n *    throttleable(10)\r\n *    myFn() { ... }\r\n *  }\r\n *\r\n * @export\r\n * @param {number} duration\r\n * @param {*} [options]\r\n * @returns\r\n */\r\nfunction throttleable(duration, options) {\r\n    return function innerDecorator(target, key, descriptor) {\r\n        return {\r\n            configurable: true,\r\n            enumerable: descriptor.enumerable,\r\n            get: function getter() {\r\n                Object.defineProperty(this, key, {\r\n                    configurable: true,\r\n                    enumerable: descriptor.enumerable,\r\n                    value: throttle(descriptor.value, duration, options)\r\n                });\r\n                return this[key];\r\n            }\r\n        };\r\n    };\r\n}\r\nexports.throttleable = throttleable;\r\n\n\n/***/ },\n\n/***/ \"./src/utils/translate.ts\":\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar prefixes_1 = __webpack_require__(\"./src/utils/prefixes.ts\");\r\nvar camel_case_1 = __webpack_require__(\"./src/utils/camel-case.ts\");\r\n// browser detection and prefixing tools\r\nvar transform = prefixes_1.getVendorPrefixedName('transform');\r\nvar backfaceVisibility = prefixes_1.getVendorPrefixedName('backfaceVisibility');\r\nvar hasCSSTransforms = !!prefixes_1.getVendorPrefixedName('transform');\r\nvar hasCSS3DTransforms = !!prefixes_1.getVendorPrefixedName('perspective');\r\nvar ua = window.navigator.userAgent;\r\nvar isSafari = (/Safari\\//).test(ua) && !(/Chrome\\//).test(ua);\r\nfunction translateXY(styles, x, y) {\r\n    if (hasCSSTransforms) {\r\n        if (!isSafari && hasCSS3DTransforms) {\r\n            styles[transform] = \"translate3d(\" + x + \"px, \" + y + \"px, 0)\";\r\n            styles[backfaceVisibility] = 'hidden';\r\n        }\r\n        else {\r\n            styles[camel_case_1.camelCase(transform)] = \"translate(\" + x + \"px, \" + y + \"px)\";\r\n        }\r\n    }\r\n    else {\r\n        styles.top = y + \"px\";\r\n        styles.left = x + \"px\";\r\n    }\r\n}\r\nexports.translateXY = translateXY;\r\n\n\n/***/ },\n\n/***/ 0:\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }\n\n/******/ });\n});\n//# sourceMappingURL=index.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/karma.conf.js":"module.exports = require('./config/karma.conf.js');\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/karma.conf.js":"const testWebpackConfig = require('./webpack.test');\n\nmodule.exports =  function(config) {\n  var configuration = {\n    basePath: '',\n    singleRun: true,\n    frameworks: ['jasmine'],\n    exclude: [],\n    files: [ \n      { pattern: './config/spec-bundle.js', watched: false } \n    ],\n    preprocessors: { \n      './config/spec-bundle.js': ['coverage', 'webpack', 'sourcemap'] \n    },\n    webpack: testWebpackConfig({ env: 'test' }),\n    webpackMiddleware: { stats: 'errors-only'},\n    reporters: [ 'mocha', 'coverage', 'remap-coverage' ],\n    port: 9876,\n    colors: true,\n    logLevel: config.LOG_INFO,\n    autoWatch: false,\n    browsers: ['Chrome'],\n    customLaunchers: {\n      ChromeTravisCi: {\n        base: 'Chrome',\n        flags: ['--no-sandbox']\n      }\n    },\n    coverageReporter: {\n      type: 'in-memory'\n    },\n    remapCoverageReporter: {\n      'text-summary': null,\n      json: './coverage/coverage.json',\n      html: './coverage/html',\n      lcovonly: './coverage/lcov.info'\n    }\n  };\n\n  if (process.env.TRAVIS){\n    configuration.browsers = [\n      'ChromeTravisCi'\n    ];\n  }\n\n  config.set(configuration);\n};\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/webpack.test.js":"const webpack = require('webpack');\nconst webpackMerge = require('webpack-merge');\nconst chalk = require('chalk');\nconst commonConfig = require('./webpack.common');\nconst { ENV, dir } = require('./helpers');\n\nmodule.exports = function(env) {\n  return webpackMerge(commonConfig({ env: ENV }), {\n    devtool: 'inline-source-map',\n    module: {\n      exprContextCritical: false,\n      rules: [\n        {\n          enforce: 'pre',\n          test: /\\.js$/,\n          loader: 'source-map-loader',\n          exclude: /(node_modules)/\n        },\n        {\n          test: /\\.ts$/,\n          loader: 'awesome-typescript-loader',\n          query: {\n            sourceMap: false,\n            inlineSourceMap: true,\n            compilerOptions: {\n              removeComments: true\n            }\n          },\n          exclude: [/\\.e2e\\.ts$/, /(node_modules)/]\n        },\n        {\n          enforce: 'post',\n          test: /\\.(js|ts)$/,\n          loader: 'istanbul-instrumenter-loader',\n          include: dir('src'),\n          exclude: [\n            /\\.(e2e|spec)\\.ts$/,\n            /node_modules/\n          ]\n        },\n        {\n          test: /\\.css/,\n          loader: 'style-loader!css-loader?sourceMap'\n        },\n        {\n          test: /\\.scss$/,\n          loader: 'style-loader!css-loader!postcss-loader?sourceMap!sass-loader?sourceMap'\n        }\n      ]\n    },\n    node: {\n      global: true,\n      process: false,\n      crypto: 'empty',\n      module: false,\n      clearImmediate: false,\n      setImmediate: false\n    }\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/webpack.config.js":"switch (process.env.NODE_ENV) {\n  case 'prod':\n  case 'production':\n    module.exports = require('./config/webpack.prod')({env: 'production'});\n    break;\n  case 'test':\n  case 'testing':\n    module.exports = require('./config/webpack.test')({env: 'test'});\n    break;\n  case 'package':\n    module.exports = require('./config/webpack.package')({env: 'package'});\n    break;\n  case 'dev':\n  case 'development':\n  default:\n    module.exports = require('./config/webpack.dev')({env: 'development'});\n}\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/deploy.js":"var path = require('path');\nvar ghpages = require('gh-pages');\n\nvar dir = path.resolve(path.join(__dirname, '../', 'dist'));\nghpages.publish(dir, {\n  user: {\n    name: 'Austin McDaniel',\n    email: 'amcdaniel2@gmail.com'\n  },\n  message: '(deploy): CI',\n  logger: function(message) {\n    console.log('gh-pages: ', message);\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/helpers.js":"const path = require('path');\n\nconst ENV = process.env.NODE_ENV;\nconst pkg = require('../package.json');\nconst ROOT = path.resolve(__dirname, '..');\n\nexports.dir = function(args) {\n  args = Array.prototype.slice.call(arguments, 0);\n  return path.join.apply(path, [ROOT].concat(args));\n}\n\nexports.ENV = JSON.stringify(ENV);\nexports.IS_PRODUCTION = ENV === 'production';\nexports.IS_PACKAGE = ENV === 'package';\nexports.IS_DEV = ENV === 'dev' || ENV === 'development';\nexports.APP_VERSION = JSON.stringify(pkg.version);\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/replace.js":"const replace = require(\"replace\");\nconst fs = require('fs-extra')\n\n/**\n * This replaces all the TypeScript references\n * to other types that for some reason TypeScript\n * keeps generating. This hack is insane ...\n */\nreplace({\n  regex: '/// <reference types=\"core-js\" />',\n  replacement: '',\n  paths: ['./release'],\n  recursive: true,\n  silent: false\n});\n\n/**\n * ngc output pathing is totally wrong\n */\nfs.copySync('./release/src', './release');\nfs.removeSync('./release/node_modules')\nfs.removeSync('./release/src')\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/spec-bundle.js":"/**\n * @author: @AngularClass\n */\n\n/*\n * When testing with webpack and ES6, we have to do some extra\n * things to get testing to work right. Because we are gonna write tests\n * in ES6 too, we have to compile those as well. That's handled in\n * karma.conf.js with the karma-webpack plugin. This is the entry\n * file for webpack test. Just like webpack will create a bundle.js\n * file for our client, when we run test, it will compile and bundle them\n * all here! Crazy huh. So we need to do some setup\n */\nError.stackTraceLimit = Infinity;\n\nrequire('core-js/es6');\nrequire('core-js/es7/reflect');\n\n// Typescript emit helpers polyfill\nrequire('ts-helpers');\n\nrequire('zone.js/dist/zone');\nrequire('zone.js/dist/long-stack-trace-zone');\nrequire('zone.js/dist/proxy'); // since zone.js 0.6.15\nrequire('zone.js/dist/sync-test');\nrequire('zone.js/dist/jasmine-patch'); // put here since zone.js 0.6.14\nrequire('zone.js/dist/async-test');\nrequire('zone.js/dist/fake-async-test');\n\n// RxJS\nrequire('rxjs/Rx');\n\nconst testing = require('@angular/core/testing');\nconst browser = require('@angular/platform-browser-dynamic/testing');\n\ntesting.TestBed.initTestEnvironment(\n  browser.BrowserDynamicTestingModule,\n  browser.platformBrowserDynamicTesting()\n);\n\n/*\n * Ok, this is kinda crazy. We can use the context method on\n * require that webpack created in order to tell webpack\n * what files we actually want to require or import.\n * Below, context will be a function/object with file names as keys.\n * Using that regex we are saying look in ../src then find\n * any file that ends with spec.ts and get its path. By passing in true\n * we say do this recursively\n */\nconst testContext = require.context('../src', true, /\\.spec\\.ts/);\n\n/*\n * get all the files, for each file, call the context function\n * that will require the file and load it up here. Context will\n * loop and require those spec files here\n */\nconst requireAll = function(requireContext) {\n  return requireContext.keys().map(requireContext);\n}\n\n// requires and returns all modules that match\nconst modules = requireAll(testContext);\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/webpack.common.js":"const webpack = require('webpack');\nconst autoprefixer = require('autoprefixer');\nconst CopyWebpackPlugin = require('copy-webpack-plugin');\nconst { ENV, IS_PRODUCTION, APP_VERSION, IS_DEV, dir } = require('./helpers');\n\nmodule.exports = function(options = {}) {\n  return {\n    context: dir(),\n    resolve: {\n      extensions: ['.ts', '.js', '.json', '.css', '.scss', '.html'],\n      modules: [\n        'node_modules',\n        dir('src'),\n        dir('demo')\n      ]\n    },\n    output: {\n      path: dir('dist'),\n      filename: '[name].js',\n      sourceMapFilename: '[name].map',\n      chunkFilename: '[id].chunk.js'\n    },\n    plugins: [\n      new webpack.NamedModulesPlugin(),\n      new webpack.DefinePlugin({\n        ENV,\n        IS_PRODUCTION,\n        APP_VERSION,\n        IS_DEV,\n        HMR: options.HMR\n      }),\n      new CopyWebpackPlugin([\n        { from: 'assets', to: 'assets' }\n      ]),\n      new webpack.LoaderOptionsPlugin({\n        options: {\n          context: dir(),\n          tslint: {\n            emitErrors: false,\n            failOnHint: false,\n            resourcePath: 'src'\n          },\n          postcss: function() {\n            return [ autoprefixer ];\n          }\n        }\n      })\n    ]\n  };\n\n};\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/webpack.dev.js":"const webpack = require('webpack');\nconst webpackMerge = require('webpack-merge');\nconst WebpackNotifierPlugin = require('webpack-notifier');\nconst ProgressBarPlugin = require('progress-bar-webpack-plugin');\nconst chalk = require('chalk');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst ForkCheckerPlugin = require('awesome-typescript-loader').ForkCheckerPlugin;\n\nconst commonConfig = require('./webpack.common');\nconst { ENV, dir } = require('./helpers');\n\nmodule.exports = function(options) {\n  return webpackMerge(commonConfig({ env: ENV }), {\n    devtool: 'cheap-module-source-map',\n    devServer: {\n      watchOptions: {\n        poll: true\n      },\n      port: 9999,\n      hot: options.HMR,\n      stats: {\n        modules: false,\n        cached: false,\n        chunk: false\n      }\n    },\n    entry: {\n      'app': './demo/bootstrap.ts',\n      'polyfills': './demo/polyfills.ts'\n    },\n    module: {\n      exprContextCritical: false,\n      rules: [\n        {\n          enforce: 'pre',\n          test: /\\.js$/,\n          loader: 'source-map-loader',\n          exclude: /(node_modules)/\n        },\n        {\n          enforce: 'pre',\n          test: /\\.ts$/,\n          loader: 'tslint-loader',\n          exclude: /(node_modules|release|dist)/\n        },\n        {\n          test: /\\.ts$/,\n          loaders: [\n            'awesome-typescript-loader',\n            '@angularclass/hmr-loader'\n          ],\n          exclude: [/\\.(spec|e2e|d)\\.ts$/]\n        },\n        {\n          test: /\\.css/,\n          loader: 'style-loader!css-loader?sourceMap'\n        },\n        {\n          test: /\\.scss$/,\n          loader: 'style-loader!css-loader!postcss-loader?sourceMap!sass-loader?sourceMap'\n        }\n      ]\n    },\n    plugins: [\n      // new ForkCheckerPlugin(),\n      new webpack.optimize.CommonsChunkPlugin({\n        name: ['polyfills'],\n        minChunks: Infinity\n      }),\n      new HtmlWebpackPlugin({\n        template: 'demo/index.ejs',\n        chunksSortMode: 'dependency',\n        title: 'angular2-data-table'\n      }),\n      new WebpackNotifierPlugin({\n        excludeWarnings: true\n      }),\n      new ProgressBarPlugin({\n        format: chalk.yellow.bold('Webpack Building...') + \n          ' [:bar] ' + chalk.green.bold(':percent') + ' (:elapsed seconds)'\n      }),\n      new webpack.HotModuleReplacementPlugin()\n    ]\n  });\n\n};\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/webpack.package.js":"const webpack = require('webpack');\nconst webpackMerge = require('webpack-merge');\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n// const ngtools = require('@ngtools/webpack');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nconst commonConfig = require('./webpack.common');\nconst { ENV, dir, APP_VERSION } = require('./helpers');\n\nconst banner =\n`/**\n * angular2-data-table v${APP_VERSION} (https://github.com/swimlane/angular2-data-table)\n * Copyright 2016\n * Licensed under MIT\n */`;\n\nmodule.exports = function(env) {\n  return webpackMerge(commonConfig({ env: ENV }), {\n    devtool: 'source-map',\n    module: {\n      exprContextCritical: false,\n      rules: [\n        {\n          test: /\\.ts$/,\n          loaders: [\n            'awesome-typescript-loader'\n          ],\n          exclude: [/\\.(spec|e2e|d)\\.ts$/]\n        },\n        {\n          test: /\\.css/,\n          loader:\n            ExtractTextPlugin.extract({\n              fallbackLoader: 'style-loader',\n              loader:'css-loader?sourceMap'\n            })\n        },\n        {\n          test: /\\.scss$/,\n          loader:\n            ExtractTextPlugin.extract({\n              fallbackLoader: 'style-loader',\n              loader: 'css-loader?sourceMap!postcss-loader?sourceMap!sass-loader?sourceMap'\n            })\n        }\n      ]\n    },\n    entry: {\n      'index': './src/index.ts'\n    },\n    output: {\n      path: dir('release'),\n      libraryTarget: 'umd',\n      library: 'angular2-data-table',\n      umdNamedDefine: true\n    },\n    externals: {\n      '@angular/platform-browser-dynamic': '@angular/platform-browser-dynamic',\n      '@angular/platform-browser': '@angular/platform-browser',\n      '@angular/core': '@angular/core',\n      '@angular/common': '@angular/common',\n      '@angular/forms': '@angular/forms',\n      'core-js': 'core-js',\n      'core-js/es6': 'core-js/es6',\n      'core-js/es7/reflect': 'core-js/es7/reflect',\n      'rxjs': 'rxjs',\n      'rxjs/Rx': 'rxjs/Rx',\n      'rxjs/Subscription': 'rxjs/Subscription',\n      'zone.js/dist/zone': 'zone.js/dist/zone'\n    },\n    plugins: [\n      new ExtractTextPlugin({\n        filename: '[name].css',\n        allChunks: true\n      }),\n      new webpack.BannerPlugin({\n        banner: banner,\n        raw: true,\n        entryOnly: true\n      }),\n      /*\n      new ngtools.AotPlugin({\n        tsConfigPath: 'tsconfig-aot.json',\n        baseDir: dir()\n        entryModule: dir('datatable.module.ts') + '#Angular2DataTableModule'\n      }),\n      new CleanWebpackPlugin(['release'], {\n        root: dir(),\n        verbose: false,\n        dry: false\n      })\n      */\n    ]\n  });\n\n};\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/config/webpack.prod.js":"const webpack = require('webpack');\nconst webpackMerge = require('webpack-merge');\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nconst commonConfig = require('./webpack.common');\nconst { ENV, dir } = require('./helpers');\n\nmodule.exports = function(env) {\n  return webpackMerge(commonConfig({ env: ENV }), {\n    devtool: 'source-map',\n    entry: {\n      'app': './demo/bootstrap.ts',\n      'polyfills': './demo/polyfills.ts'\n    },\n    module: {\n      exprContextCritical: false,\n      rules: [\n        {\n          enforce: 'pre',\n          test: /\\.js$/,\n          loader: 'source-map-loader',\n          exclude: /(node_modules)/\n        },\n        {\n          test: /\\.ts$/,\n          loaders: [\n            'awesome-typescript-loader'\n          ],\n          exclude: [/\\.(spec|e2e|d)\\.ts$/]\n        },\n        {\n          test: /\\.css/,\n          loader:\n            ExtractTextPlugin.extract({\n              fallbackLoader: 'style-loader',\n              loader:'css-loader?sourceMap'\n            })\n        },\n        {\n          test: /\\.scss$/,\n          loader:\n            ExtractTextPlugin.extract({\n              fallbackLoader: 'style-loader',\n              loader: 'css-loader?sourceMap!postcss-loader?sourceMap!sass-loader?sourceMap'\n            })\n        }\n      ]\n    },\n    plugins: [\n      new ExtractTextPlugin({\n        filename: '[name].css',\n        allChunks: true\n      }),\n      new webpack.optimize.CommonsChunkPlugin({\n        name: ['polyfills'],\n        minChunks: Infinity\n      }),\n      new HtmlWebpackPlugin({\n        template: 'demo/index.ejs',\n        chunksSortMode: 'dependency',\n        title: 'angular2-data-table',\n        googleAnalytics: {\n          trackingId: 'UA-57474611-3',\n          pageViewOnLoad: true\n        }\n      }),\n      new CleanWebpackPlugin(['dist'], {\n        root: dir(),\n        verbose: false,\n        dry: false\n      }),\n      new webpack.optimize.UglifyJsPlugin()\n    ]\n  });\n\n};\n","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/datatable.module.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar common_1 = require('@angular/common');\nvar components_1 = require('./components');\nvar directives_1 = require('./directives');\nvar Angular2DataTableModule = (function () {\n    function Angular2DataTableModule() {\n    }\n    Angular2DataTableModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [\n                        common_1.CommonModule\n                    ],\n                    declarations: [\n                        directives_1.VisibilityDirective,\n                        directives_1.DraggableDirective,\n                        directives_1.ResizeableDirective,\n                        directives_1.OrderableDirective,\n                        directives_1.LongPressDirective,\n                        components_1.ScrollerComponent,\n                        components_1.DatatableComponent,\n                        components_1.DataTableColumnDirective,\n                        components_1.DataTableHeaderComponent,\n                        components_1.DataTableHeaderCellComponent,\n                        components_1.DataTableBodyComponent,\n                        components_1.DataTableFooterComponent,\n                        components_1.DataTablePagerComponent,\n                        components_1.ProgressBarComponent,\n                        components_1.DataTableBodyRowComponent,\n                        components_1.DataTableRowWrapperComponent,\n                        components_1.DatatableRowDetailDirective,\n                        components_1.DatatableRowDetailTemplateDirective,\n                        components_1.DataTableBodyCellComponent,\n                        components_1.DataTableSelectionComponent,\n                        components_1.DataTableColumnHeaderDirective,\n                        components_1.DataTableColumnCellDirective\n                    ],\n                    exports: [\n                        components_1.DatatableComponent,\n                        components_1.DatatableRowDetailDirective,\n                        components_1.DatatableRowDetailTemplateDirective,\n                        components_1.DataTableColumnDirective,\n                        components_1.DataTableColumnHeaderDirective,\n                        components_1.DataTableColumnCellDirective\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    Angular2DataTableModule.ctorParameters = function () { return []; };\n    return Angular2DataTableModule;\n}());\nexports.Angular2DataTableModule = Angular2DataTableModule;\n//# sourceMappingURL=datatable.module.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/components/datatable.component.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar utils_1 = require('../utils');\nvar types_1 = require('../types');\nvar body_1 = require('./body');\nvar columns_1 = require('./columns');\nvar row_detail_1 = require('./row-detail');\nvar utils_2 = require('../utils');\nvar DatatableComponent = (function () {\n    function DatatableComponent(element, differs) {\n        /**\n         * List of row objects that should be\n         * represented as selected in the grid.\n         * Default value: `[]`\n         *\n         * @type {any[]}\n         * @memberOf DatatableComponent\n         */\n        this.selected = [];\n        /**\n         * Enable vertical scrollbars\n         *\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        this.scrollbarV = false;\n        /**\n         * Enable horz scrollbars\n         *\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        this.scrollbarH = false;\n        /**\n         * The row height; which is necessary\n         * to calculate the height for the lazy rendering.\n         *\n         * @type {number}\n         * @memberOf DatatableComponent\n         */\n        this.rowHeight = 30;\n        /**\n         * The detail row height is required especially\n         * when virtual scroll is enabled.\n         *\n         * @type {number}\n         * @memberOf DatatableComponent\n         */\n        this.detailRowHeight = 0;\n        /**\n         * Type of column width distribution formula.\n         * Example: flex, force, standard\n         *\n         * @type {ColumnMode}\n         * @memberOf DatatableComponent\n         */\n        this.columnMode = types_1.ColumnMode.standard;\n        /**\n         * The minimum header height in pixels.\n         * Pass a falsey for no header\n         *\n         * @type {*}\n         * @memberOf DatatableComponent\n         */\n        this.headerHeight = 30;\n        /**\n         * The minimum footer height in pixels.\n         * Pass falsey for no footer\n         *\n         * @type {number}\n         * @memberOf DatatableComponent\n         */\n        this.footerHeight = 0;\n        /**\n         * If the table should use external paging\n         * otherwise its assumed that all data is preloaded.\n         *\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        this.externalPaging = false;\n        /**\n         * If the table should use external sorting or\n         * the built-in basic sorting.\n         *\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        this.externalSorting = false;\n        /**\n         * The page size to be shown.\n         * Default value: `undefined`\n         *\n         * @type {number}\n         * @memberOf DatatableComponent\n         */\n        this.limit = undefined;\n        /**\n         * The current offset ( page - 1 ) shown.\n         * Default value: `0`\n         *\n         * @type {number}\n         * @memberOf DatatableComponent\n         */\n        this.offset = 0;\n        /**\n         * Show the linear loading bar.\n         * Default value: `false`\n         *\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        this.loadingIndicator = false;\n        /**\n         * Enable/Disable ability to re-order columns\n         * by dragging them.\n         *\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        this.reorderable = true;\n        /**\n         * The type of sorting\n         *\n         * @type {SortType}\n         * @memberOf DatatableComponent\n         */\n        this.sortType = types_1.SortType.single;\n        /**\n         * Array of sorted columns by property and type.\n         * Default value: `[]`\n         *\n         * @type {any[]}\n         * @memberOf DatatableComponent\n         */\n        this.sorts = [];\n        /**\n         * Css class overrides\n         *\n         * @type {*}\n         * @memberOf DatatableComponent\n         */\n        this.cssClasses = {\n            sortAscending: 'icon-down',\n            sortDescending: 'icon-up',\n            pagerLeftArrow: 'icon-left',\n            pagerRightArrow: 'icon-right',\n            pagerPrevious: 'icon-prev',\n            pagerNext: 'icon-skip'\n        };\n        /**\n         * Message overrides for localization\n         *\n         * @type {*}\n         * @memberOf DatatableComponent\n         */\n        this.messages = {\n            // Message to show when array is presented\n            // but contains no values\n            emptyMessage: 'No data to display',\n            // Footer total message\n            totalMessage: 'total'\n        };\n        /**\n         * This will be used when displaying or selecting rows.\n         * when tracking/comparing them, we'll use the value of this fn,\n         *\n         * (`fn(x) === fn(y)` instead of `x === y`)\n         *\n         * @memberOf DatatableComponent\n         */\n        this.rowIdentity = (function (x) { return x; });\n        /**\n         * Body was scrolled typically in a `scrollbarV:true` scenario.\n         *\n         * @type {EventEmitter<any>}\n         * @memberOf DatatableComponent\n         */\n        this.scroll = new core_1.EventEmitter();\n        /**\n         * A cell or row was focused via keyboard or mouse click.\n         *\n         * @type {EventEmitter<any>}\n         * @memberOf DatatableComponent\n         */\n        this.activate = new core_1.EventEmitter();\n        /**\n         * A cell or row was selected.\n         *\n         * @type {EventEmitter<any>}\n         * @memberOf DatatableComponent\n         */\n        this.select = new core_1.EventEmitter();\n        /**\n         * Column sort was invoked.\n         *\n         * @type {EventEmitter<any>}\n         * @memberOf DatatableComponent\n         */\n        this.sort = new core_1.EventEmitter();\n        /**\n         * The table was paged either triggered by the pager or the body scroll.\n         *\n         * @type {EventEmitter<any>}\n         * @memberOf DatatableComponent\n         */\n        this.page = new core_1.EventEmitter();\n        /**\n         * Row detail row visbility was toggled.\n         *\n         * @type {EventEmitter<any>}\n         * @memberOf DatatableComponent\n         */\n        this.detailToggle = new core_1.EventEmitter();\n        /**\n         * Columns were re-ordered.\n         *\n         * @type {EventEmitter<any>}\n         * @memberOf DatatableComponent\n         */\n        this.reorder = new core_1.EventEmitter();\n        /**\n         * Column was resized.\n         *\n         * @type {EventEmitter<any>}\n         * @memberOf DatatableComponent\n         */\n        this.resize = new core_1.EventEmitter();\n        /**\n         * The context menu was invoked on a row.\n         *\n         * @memberOf DatatableComponent\n         */\n        this.rowContextmenu = new core_1.EventEmitter(false);\n        this.offsetX = 0;\n        this._count = 0;\n        // get ref to elm for measuring\n        this.element = element.nativeElement;\n        this.rowDiffer = differs.find({}).create(null);\n    }\n    Object.defineProperty(DatatableComponent.prototype, \"rows\", {\n        /**\n         * Gets the rows.\n         *\n         * @readonly\n         * @type {*}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this._rows;\n        },\n        /**\n         * Rows that are displayed in the table.\n         *\n         * @memberOf DatatableComponent\n         */\n        set: function (val) {\n            // auto sort on new updates\n            if (!this.externalSorting) {\n                val = utils_1.sortRows(val, this.columns, this.sorts);\n            }\n            this._rows = val;\n            // recalculate sizes/etc\n            this.recalculate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"columns\", {\n        /**\n         * Get the columns.\n         *\n         * @readonly\n         * @type {any[]}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this._columns;\n        },\n        /**\n         * Columns to be displayed.\n         *\n         * @memberOf DatatableComponent\n         */\n        set: function (val) {\n            if (val) {\n                utils_2.setColumnDefaults(val);\n                this.recalculateColumns(val);\n            }\n            this._columns = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"count\", {\n        /**\n         * Gets the count.\n         *\n         * @readonly\n         * @type {number}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this._count;\n        },\n        /**\n         * The total count of all rows.\n         * Default value: `0`\n         *\n         * @type {number}\n         * @memberOf DatatableComponent\n         */\n        set: function (val) {\n            this._count = val;\n            // recalculate sizes/etc\n            this.recalculate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isFixedHeader\", {\n        /**\n         * CSS class applied if the header height if fixed height.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            var headerHeight = this.headerHeight;\n            return (typeof headerHeight === 'string') ?\n                headerHeight !== 'auto' : true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isFixedRow\", {\n        /**\n         * CSS class applied to the root element if\n         * the row heights are fixed heights.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            var rowHeight = this.rowHeight;\n            return (typeof rowHeight === 'string') ?\n                rowHeight !== 'auto' : true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isVertScroll\", {\n        /**\n         * CSS class applied to root element if\n         * vertical scrolling is enabled.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this.scrollbarV;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isHorScroll\", {\n        /**\n         * CSS class applied to the root element\n         * if the horziontal scrolling is enabled.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this.scrollbarH;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isSelectable\", {\n        /**\n         * CSS class applied to root element is selectable.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this.selectionType !== undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isCheckboxSelection\", {\n        /**\n         * CSS class applied to root is checkbox selection.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this.selectionType === types_1.SelectionType.checkbox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isCellSelection\", {\n        /**\n         * CSS class applied to root if cell selection.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this.selectionType === types_1.SelectionType.cell;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isSingleSelection\", {\n        /**\n         * CSS class applied to root if single select.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this.selectionType === types_1.SelectionType.single;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isMultiSelection\", {\n        /**\n         * CSS class added to root element if mulit select\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this.selectionType === types_1.SelectionType.multi;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"columnTemplates\", {\n        /**\n         * Returns the column templates.\n         *\n         * @readonly\n         * @type {QueryList<DataTableColumnDirective>}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this._columnTemplates;\n        },\n        /**\n         * Column templates gathered from `ContentChildren`\n         * if described in your markup.\n         *\n         * @memberOf DatatableComponent\n         */\n        set: function (val) {\n            this._columnTemplates = val;\n            if (val) {\n                // only set this if results were brought back\n                var arr = val.toArray();\n                if (arr.length) {\n                    // translate them to normal objects\n                    this.columns = utils_2.translateTemplates(arr);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"rowDetailTemplateChild\", {\n        /**\n         * Returns the row templates.\n         *\n         * @readonly\n         * @type {DatatableRowDetailDirective}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this._rowDetailTemplateChild;\n        },\n        /**\n         * Row Detail templates gathered from the ContentChild\n         *\n         * @memberOf DatatableComponent\n         */\n        set: function (val) {\n            this._rowDetailTemplateChild = val;\n            if (val)\n                this.rowDetailTemplate = val.rowDetailTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"allRowsSelected\", {\n        /**\n         * Returns if all rows are selected.\n         *\n         * @readonly\n         * @private\n         * @type {boolean}\n         * @memberOf DatatableComponent\n         */\n        get: function () {\n            return this.selected &&\n                this.rows &&\n                this.selected.length === this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Lifecycle hook that is called after data-bound\n     * properties of a directive are initialized.\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.ngOnInit = function () {\n        // need to call this immediatly to size\n        // if the table is hidden the visibility\n        // listener will invoke this itself upon show\n        this.recalculate();\n    };\n    /**\n     * Lifecycle hook that is called after a component's\n     * view has been fully initialized.\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // this has to be done to prevent the change detection\n        // tree from freaking out because we are readjusting\n        setTimeout(function () { return _this.recalculate(); });\n    };\n    /**\n     * Lifecycle hook that is called when Angular dirty checks a directive.\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.ngDoCheck = function () {\n        if (this.rowDiffer.diff(this.rows)) {\n            this.recalculatePages();\n        }\n    };\n    /**\n     * Toggle the expansion of the row\n     *\n     * @param rowIndex\n     */\n    DatatableComponent.prototype.toggleExpandRow = function (row) {\n        // Should we write a guard here??\n        this.bodyComponent.toggleRowExpansion(row);\n    };\n    /**\n     * API method to expand all the rows.\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.expandAllRows = function () {\n        this.bodyComponent.toggleAllRows(true);\n    };\n    /**\n     * API method to collapse all the rows.\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.collapseAllRows = function () {\n        this.bodyComponent.toggleAllRows(false);\n    };\n    /**\n     * Recalc's the sizes of the grid.\n     *\n     * Updated automatically on changes to:\n     *\n     *  - Columns\n     *  - Rows\n     *  - Paging related\n     *\n     * Also can be manually invoked or upon window resize.\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.recalculate = function () {\n        this.recalculateDims();\n        this.recalculateColumns();\n    };\n    /**\n     * Window resize handler to update sizes.\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.onWindowResize = function () {\n        this.recalculate();\n    };\n    /**\n     * Recalulcates the column widths based on column width\n     * distribution mode and scrollbar offsets.\n     *\n     * @param {any[]} [columns=this.columns]\n     * @param {number} [forceIdx=false]\n     * @param {boolean} [allowBleed=this.scrollH]\n     * @returns {any[]}\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.recalculateColumns = function (columns, forceIdx, allowBleed) {\n        if (columns === void 0) { columns = this.columns; }\n        if (forceIdx === void 0) { forceIdx = -1; }\n        if (allowBleed === void 0) { allowBleed = this.scrollbarH; }\n        if (!columns)\n            return;\n        var width = this.innerWidth;\n        if (this.scrollbarV) {\n            width = width - utils_2.scrollbarWidth;\n        }\n        if (this.columnMode === types_1.ColumnMode.force) {\n            utils_1.forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n        }\n        else if (this.columnMode === types_1.ColumnMode.flex) {\n            utils_1.adjustColumnWidths(columns, width);\n        }\n        return columns;\n    };\n    /**\n     * Recalculates the dimensions of the table size.\n     * Internally calls the page size and row count calcs too.\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.recalculateDims = function () {\n        var _a = this.element.getBoundingClientRect(), height = _a.height, width = _a.width;\n        this.innerWidth = Math.floor(width);\n        if (this.scrollbarV) {\n            if (this.headerHeight)\n                height = height - this.headerHeight;\n            if (this.footerHeight)\n                height = height - this.footerHeight;\n            this.bodyHeight = height;\n        }\n        this.recalculatePages();\n    };\n    /**\n     * Recalculates the pages after a update.\n     *\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.recalculatePages = function () {\n        this.pageSize = this.calcPageSize();\n        this.rowCount = this.calcRowCount();\n    };\n    /**\n     * Body triggered a page event.\n     *\n     * @param {*} { offset }\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.onBodyPage = function (_a) {\n        var offset = _a.offset;\n        this.offset = offset;\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n    };\n    /**\n     * The body triggered a scroll event.\n     *\n     * @param {MouseEvent} event\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.onBodyScroll = function (event) {\n        this.offsetX = event.offsetX;\n        this.scroll.emit(event);\n    };\n    /**\n     * The footer triggered a page event.\n     *\n     * @param {*} event\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.onFooterPage = function (event) {\n        this.offset = event.page - 1;\n        this.bodyComponent.updateOffsetY(this.offset);\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n    };\n    /**\n     * Recalculates the sizes of the page\n     *\n     * @param {any[]} [val=this.rows]\n     * @returns {number}\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.calcPageSize = function (val) {\n        if (val === void 0) { val = this.rows; }\n        // Keep the page size constant even if the row has been expanded.\n        // This is because an expanded row is still considered to be a child of\n        // the original row.  Hence calculation would use rowHeight only.\n        if (this.scrollbarV) {\n            var size = Math.ceil(this.bodyHeight / this.rowHeight);\n            return Math.max(size, 0);\n        }\n        // if limit is passed, we are paging\n        if (this.limit !== undefined)\n            return this.limit;\n        // otherwise use row length\n        if (val)\n            return val.length;\n        // other empty :(\n        return 0;\n    };\n    /**\n     * Calculates the row count.\n     *\n     * @param {any[]} [val=this.rows]\n     * @returns {number}\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.calcRowCount = function (val) {\n        if (val === void 0) { val = this.rows; }\n        if (!this.externalPaging) {\n            if (!val)\n                return 0;\n            return val.length;\n        }\n        return this.count;\n    };\n    /**\n     * The header triggered a column resize event.\n     *\n     * @param {*} { column, newValue }\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.onColumnResize = function (_a) {\n        var column = _a.column, newValue = _a.newValue;\n        var idx;\n        var cols = this.columns.map(function (c, i) {\n            c = Object.assign({}, c);\n            if (c.$$id === column.$$id) {\n                idx = i;\n                c.width = newValue;\n                // set this so we can force the column\n                // width distribution to be to this value\n                c.$$oldWidth = newValue;\n            }\n            return c;\n        });\n        this.recalculateColumns(cols, idx);\n        this._columns = cols;\n        this.resize.emit({\n            column: column,\n            newValue: newValue\n        });\n    };\n    /**\n     * The header triggered a column re-order event.\n     *\n     * @param {*} { column, newValue, prevValue }\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.onColumnReorder = function (_a) {\n        var column = _a.column, newValue = _a.newValue, prevValue = _a.prevValue;\n        var cols = this.columns.map(function (c) {\n            return Object.assign({}, c);\n        });\n        cols.splice(prevValue, 1);\n        cols.splice(newValue, 0, column);\n        this.columns = cols;\n        this.reorder.emit({\n            column: column,\n            newValue: newValue,\n            prevValue: prevValue\n        });\n    };\n    /**\n     * The header triggered a column sort event.\n     *\n     * @param {*} event\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.onColumnSort = function (event) {\n        var sorts = event.sorts;\n        // this could be optimized better since it will resort\n        // the rows again on the 'push' detection...\n        if (this.externalSorting === false) {\n            // don't use normal setter so we don't resort\n            this._rows = utils_1.sortRows(this.rows, this.columns, sorts);\n        }\n        this.sorts = sorts;\n        this.bodyComponent.updateOffsetY(0);\n        this.sort.emit(event);\n    };\n    /**\n     * Toggle all row selection\n     *\n     * @param {*} event\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.onHeaderSelect = function (event) {\n        // before we splice, chk if we currently have all selected\n        var allSelected = this.selected.length === this.rows.length;\n        // remove all existing either way\n        this.selected.splice(0, this.selected.length);\n        // do the opposite here\n        if (!allSelected) {\n            (_a = this.selected).push.apply(_a, this.rows);\n        }\n        this.select.emit({\n            selected: this.selected\n        });\n        var _a;\n    };\n    /**\n     * A row was selected from body\n     *\n     * @param {*} event\n     *\n     * @memberOf DatatableComponent\n     */\n    DatatableComponent.prototype.onBodySelect = function (event) {\n        this.select.emit(event);\n    };\n    DatatableComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'swui-datatable',\n                    template: \"\\n    <div\\n      visibility-observer\\n      (visible)=\\\"recalculate()\\\">\\n      <datatable-header\\n        *ngIf=\\\"headerHeight\\\"\\n        [sorts]=\\\"sorts\\\"\\n        [sortType]=\\\"sortType\\\"\\n        [scrollbarH]=\\\"scrollbarH\\\"\\n        [innerWidth]=\\\"innerWidth\\\"\\n        [offsetX]=\\\"offsetX\\\"\\n        [columns]=\\\"columns\\\"\\n        [headerHeight]=\\\"headerHeight\\\"\\n        [sortAscendingIcon]=\\\"cssClasses.sortAscending\\\"\\n        [sortDescendingIcon]=\\\"cssClasses.sortDescending\\\"\\n        [allRowsSelected]=\\\"allRowsSelected\\\"\\n        [selectionType]=\\\"selectionType\\\"\\n        (sort)=\\\"onColumnSort($event)\\\"\\n        (resize)=\\\"onColumnResize($event)\\\"\\n        (reorder)=\\\"onColumnReorder($event)\\\"\\n        (select)=\\\"onHeaderSelect($event)\\\">\\n      </datatable-header>\\n      <datatable-body\\n        [rows]=\\\"rows\\\"\\n        [scrollbarV]=\\\"scrollbarV\\\"\\n        [scrollbarH]=\\\"scrollbarH\\\"\\n        [loadingIndicator]=\\\"loadingIndicator\\\"\\n        [rowHeight]=\\\"rowHeight\\\"\\n        [rowCount]=\\\"rowCount\\\"\\n        [offset]=\\\"offset\\\"\\n        [trackByProp]=\\\"trackByProp\\\"\\n        [columns]=\\\"columns\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [offsetX]=\\\"offsetX\\\"\\n        [rowDetailTemplate]=\\\"rowDetailTemplate\\\"\\n        [detailRowHeight]=\\\"detailRowHeight\\\"\\n        [selected]=\\\"selected\\\"\\n        [innerWidth]=\\\"innerWidth\\\"\\n        [bodyHeight]=\\\"bodyHeight\\\"\\n        [selectionType]=\\\"selectionType\\\"\\n        [emptyMessage]=\\\"messages.emptyMessage\\\"\\n        [rowIdentity]=\\\"rowIdentity\\\"\\n        [selectCheck]=\\\"selectCheck\\\"\\n        (page)=\\\"onBodyPage($event)\\\"\\n        (activate)=\\\"activate.emit($event)\\\"\\n        (rowContextmenu)=\\\"rowContextmenu.emit($event)\\\"\\n        (select)=\\\"onBodySelect($event)\\\"\\n        (detailToggle)=\\\"detailToggle.emit($event)\\\"\\n        (scroll)=\\\"onBodyScroll($event)\\\">\\n      </datatable-body>\\n      <datatable-footer\\n        *ngIf=\\\"footerHeight\\\"\\n        [rowCount]=\\\"rowCount\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [offset]=\\\"offset\\\"\\n        [footerHeight]=\\\"footerHeight\\\"\\n        [totalMessage]=\\\"messages.totalMessage\\\"\\n        [pagerLeftArrowIcon]=\\\"cssClasses.pagerLeftArrow\\\"\\n        [pagerRightArrowIcon]=\\\"cssClasses.pagerRightArrow\\\"\\n        [pagerPreviousIcon]=\\\"cssClasses.pagerPrevious\\\"\\n        [pagerNextIcon]=\\\"cssClasses.pagerNext\\\"\\n        (page)=\\\"onFooterPage($event)\\\">\\n      </datatable-footer>\\n    </div>\\n  \",\n                    host: {\n                        class: 'datatable'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    DatatableComponent.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n        { type: core_1.KeyValueDiffers, },\n    ]; };\n    DatatableComponent.propDecorators = {\n        'rows': [{ type: core_1.Input },],\n        'columns': [{ type: core_1.Input },],\n        'selected': [{ type: core_1.Input },],\n        'scrollbarV': [{ type: core_1.Input },],\n        'scrollbarH': [{ type: core_1.Input },],\n        'rowHeight': [{ type: core_1.Input },],\n        'detailRowHeight': [{ type: core_1.Input },],\n        'columnMode': [{ type: core_1.Input },],\n        'headerHeight': [{ type: core_1.Input },],\n        'footerHeight': [{ type: core_1.Input },],\n        'externalPaging': [{ type: core_1.Input },],\n        'externalSorting': [{ type: core_1.Input },],\n        'limit': [{ type: core_1.Input },],\n        'count': [{ type: core_1.Input },],\n        'offset': [{ type: core_1.Input },],\n        'loadingIndicator': [{ type: core_1.Input },],\n        'selectionType': [{ type: core_1.Input },],\n        'reorderable': [{ type: core_1.Input },],\n        'sortType': [{ type: core_1.Input },],\n        'sorts': [{ type: core_1.Input },],\n        'rowDetailTemplate': [{ type: core_1.Input },],\n        'cssClasses': [{ type: core_1.Input },],\n        'messages': [{ type: core_1.Input },],\n        'rowIdentity': [{ type: core_1.Input },],\n        'selectCheck': [{ type: core_1.Input },],\n        'trackByProp': [{ type: core_1.Input },],\n        'scroll': [{ type: core_1.Output },],\n        'activate': [{ type: core_1.Output },],\n        'select': [{ type: core_1.Output },],\n        'sort': [{ type: core_1.Output },],\n        'page': [{ type: core_1.Output },],\n        'detailToggle': [{ type: core_1.Output },],\n        'reorder': [{ type: core_1.Output },],\n        'resize': [{ type: core_1.Output },],\n        'rowContextmenu': [{ type: core_1.Output },],\n        'isFixedHeader': [{ type: core_1.HostBinding, args: ['class.fixed-header',] },],\n        'isFixedRow': [{ type: core_1.HostBinding, args: ['class.fixed-row',] },],\n        'isVertScroll': [{ type: core_1.HostBinding, args: ['class.scroll-vertical',] },],\n        'isHorScroll': [{ type: core_1.HostBinding, args: ['class.scroll-horz',] },],\n        'isSelectable': [{ type: core_1.HostBinding, args: ['class.selectable',] },],\n        'isCheckboxSelection': [{ type: core_1.HostBinding, args: ['class.checkbox-selection',] },],\n        'isCellSelection': [{ type: core_1.HostBinding, args: ['class.cell-selection',] },],\n        'isSingleSelection': [{ type: core_1.HostBinding, args: ['class.single-selection',] },],\n        'isMultiSelection': [{ type: core_1.HostBinding, args: ['class.multi-selection',] },],\n        'columnTemplates': [{ type: core_1.ContentChildren, args: [columns_1.DataTableColumnDirective,] },],\n        'rowDetailTemplateChild': [{ type: core_1.ContentChild, args: [row_detail_1.DatatableRowDetailDirective,] },],\n        'bodyComponent': [{ type: core_1.ViewChild, args: [body_1.DataTableBodyComponent,] },],\n        'onWindowResize': [{ type: core_1.HostListener, args: ['window:resize',] },],\n    };\n    __decorate([\n        utils_2.throttleable(5), \n        __metadata('design:type', Function), \n        __metadata('design:paramtypes', []), \n        __metadata('design:returntype', void 0)\n    ], DatatableComponent.prototype, \"onWindowResize\", null);\n    return DatatableComponent;\n}());\nexports.DatatableComponent = DatatableComponent;\n//# sourceMappingURL=datatable.component.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/directives/draggable.directive.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar Rx_1 = require('rxjs/Rx');\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\nvar DraggableDirective = (function () {\n    function DraggableDirective(element) {\n        this.dragX = true;\n        this.dragY = true;\n        this.dragStart = new core_1.EventEmitter();\n        this.dragging = new core_1.EventEmitter();\n        this.dragEnd = new core_1.EventEmitter();\n        this.isDragging = false;\n        this.element = element.nativeElement;\n    }\n    DraggableDirective.prototype.ngOnDestroy = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    DraggableDirective.prototype.onMouseup = function (event) {\n        this.isDragging = false;\n        this.element.classList.remove('dragging');\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.dragEnd.emit({\n                event: event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    };\n    DraggableDirective.prototype.onMousedown = function (event) {\n        var _this = this;\n        if (event.target.classList.contains('draggable')) {\n            event.preventDefault();\n            this.isDragging = true;\n            var mouseDownPos_1 = { x: event.clientX, y: event.clientY };\n            this.subscription = Rx_1.Observable.fromEvent(document, 'mousemove')\n                .subscribe(function (ev) { return _this.move(ev, mouseDownPos_1); });\n            this.dragStart.emit({\n                event: event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    };\n    DraggableDirective.prototype.move = function (event, mouseDownPos) {\n        if (!this.dragging)\n            return;\n        var x = event.clientX - mouseDownPos.x;\n        var y = event.clientY - mouseDownPos.y;\n        if (this.dragX)\n            this.element.style.left = x + \"px\";\n        if (this.dragY)\n            this.element.style.top = y + \"px\";\n        if (this.dragX || this.dragY) {\n            this.element.classList.add('dragging');\n            this.dragging.emit({\n                event: event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    };\n    DraggableDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[draggable]' },] },\n    ];\n    /** @nocollapse */\n    DraggableDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n    ]; };\n    DraggableDirective.propDecorators = {\n        'dragModel': [{ type: core_1.Input },],\n        'dragX': [{ type: core_1.Input },],\n        'dragY': [{ type: core_1.Input },],\n        'dragStart': [{ type: core_1.Output },],\n        'dragging': [{ type: core_1.Output },],\n        'dragEnd': [{ type: core_1.Output },],\n        'onMouseup': [{ type: core_1.HostListener, args: ['document:mouseup', ['$event'],] },],\n        'onMousedown': [{ type: core_1.HostListener, args: ['mousedown', ['$event'],] },],\n    };\n    return DraggableDirective;\n}());\nexports.DraggableDirective = DraggableDirective;\n//# sourceMappingURL=draggable.directive.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/directives/long-press.directive.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar LongPressDirective = (function () {\n    function LongPressDirective() {\n        this.duration = 500;\n        this.longPress = new core_1.EventEmitter();\n        this.longPressing = new core_1.EventEmitter();\n        this.longPressEnd = new core_1.EventEmitter();\n        this.mouseX = 0;\n        this.mouseY = 0;\n    }\n    Object.defineProperty(LongPressDirective.prototype, \"press\", {\n        get: function () { return this.pressing; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LongPressDirective.prototype, \"isLongPress\", {\n        get: function () { return this.longPressing !== undefined; },\n        enumerable: true,\n        configurable: true\n    });\n    LongPressDirective.prototype.onMouseDown = function (event) {\n        var _this = this;\n        // don't do right/middle clicks\n        if (event.which !== 1)\n            return;\n        this.mouseX = event.clientX;\n        this.mouseY = event.clientY;\n        this.pressing = true;\n        this.isLongPressing = false;\n        this.timeout = setTimeout(function () {\n            _this.isLongPressing = true;\n            _this.longPress.emit(event);\n            _this.loop(event);\n        }, this.duration);\n        this.loop(event);\n    };\n    LongPressDirective.prototype.onMouseMove = function (event) {\n        if (this.pressing && !this.longPressing) {\n            var xThres = (event.clientX - this.mouseX) > 10;\n            var yThres = (event.clientY - this.mouseY) > 10;\n            if (xThres || yThres) {\n                this.endPress();\n            }\n        }\n    };\n    LongPressDirective.prototype.loop = function (event) {\n        var _this = this;\n        if (this.longPressing) {\n            this.timeout = setTimeout(function () {\n                _this.longPressing.emit(event);\n                _this.loop(event);\n            }, 50);\n        }\n    };\n    LongPressDirective.prototype.endPress = function () {\n        clearTimeout(this.timeout);\n        this.isLongPressing = false;\n        this.pressing = false;\n        this.longPressEnd.emit(true);\n    };\n    LongPressDirective.prototype.onMouseUp = function () { this.endPress(); };\n    LongPressDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[long-press]' },] },\n    ];\n    /** @nocollapse */\n    LongPressDirective.ctorParameters = function () { return []; };\n    LongPressDirective.propDecorators = {\n        'duration': [{ type: core_1.Input },],\n        'longPress': [{ type: core_1.Output },],\n        'longPressing': [{ type: core_1.Output },],\n        'longPressEnd': [{ type: core_1.Output },],\n        'press': [{ type: core_1.HostBinding, args: ['class.press',] },],\n        'isLongPress': [{ type: core_1.HostBinding, args: ['class.longpress',] },],\n        'onMouseDown': [{ type: core_1.HostListener, args: ['mousedown', ['$event'],] },],\n        'onMouseMove': [{ type: core_1.HostListener, args: ['mousemove', ['$event'],] },],\n        'onMouseUp': [{ type: core_1.HostListener, args: ['mouseup',] },],\n    };\n    return LongPressDirective;\n}());\nexports.LongPressDirective = LongPressDirective;\n//# sourceMappingURL=long-press.directive.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/directives/orderable.directive.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar draggable_directive_1 = require('./draggable.directive');\nvar OrderableDirective = (function () {\n    function OrderableDirective(differs) {\n        this.reorder = new core_1.EventEmitter();\n        this.differ = differs.find({}).create(null);\n    }\n    OrderableDirective.prototype.ngAfterContentInit = function () {\n        // HACK: Investigate Better Way\n        this.updateSubscriptions();\n        this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n    };\n    OrderableDirective.prototype.ngOnDestroy = function () {\n        this.draggables.forEach(function (d) {\n            d.dragStart.unsubscribe();\n            d.dragEnd.unsubscribe();\n        });\n    };\n    OrderableDirective.prototype.updateSubscriptions = function () {\n        var _this = this;\n        var diffs = this.differ.diff(this.draggables.toArray());\n        if (diffs) {\n            var subscribe = function (_a) {\n                var currentValue = _a.currentValue, previousValue = _a.previousValue;\n                unsubscribe_1({ previousValue: previousValue });\n                if (currentValue) {\n                    currentValue.dragStart.subscribe(_this.onDragStart.bind(_this));\n                    currentValue.dragEnd.subscribe(_this.onDragEnd.bind(_this));\n                }\n            };\n            var unsubscribe_1 = function (_a) {\n                var previousValue = _a.previousValue;\n                if (previousValue) {\n                    previousValue.dragStart.unsubscribe();\n                    previousValue.dragEnd.unsubscribe();\n                }\n            };\n            diffs.forEachAddedItem(subscribe.bind(this));\n            diffs.forEachChangedItem(subscribe.bind(this));\n            diffs.forEachRemovedItem(unsubscribe_1.bind(this));\n        }\n    };\n    OrderableDirective.prototype.onDragStart = function () {\n        this.positions = {};\n        var i = 0;\n        for (var _i = 0, _a = this.draggables.toArray(); _i < _a.length; _i++) {\n            var dragger = _a[_i];\n            var elm = dragger.element;\n            this.positions[dragger.dragModel.prop] = {\n                left: parseInt(elm.offsetLeft.toString(), 0),\n                index: i++\n            };\n        }\n    };\n    OrderableDirective.prototype.onDragEnd = function (_a) {\n        var element = _a.element, model = _a.model;\n        var newPos = parseInt(element.offsetLeft.toString(), 0);\n        var prevPos = this.positions[model.prop];\n        var i = 0;\n        for (var prop in this.positions) {\n            var pos = this.positions[prop];\n            var movedLeft = newPos < pos.left && prevPos.left > pos.left;\n            var movedRight = newPos > pos.left && prevPos.left < pos.left;\n            if (movedLeft || movedRight) {\n                this.reorder.emit({\n                    prevIndex: prevPos.index,\n                    newIndex: i,\n                    model: model\n                });\n            }\n            i++;\n        }\n        element.style.left = 'auto';\n    };\n    OrderableDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[orderable]' },] },\n    ];\n    /** @nocollapse */\n    OrderableDirective.ctorParameters = function () { return [\n        { type: core_1.KeyValueDiffers, },\n    ]; };\n    OrderableDirective.propDecorators = {\n        'reorder': [{ type: core_1.Output },],\n        'draggables': [{ type: core_1.ContentChildren, args: [draggable_directive_1.DraggableDirective, { descendants: true },] },],\n    };\n    return OrderableDirective;\n}());\nexports.OrderableDirective = OrderableDirective;\n//# sourceMappingURL=orderable.directive.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/directives/resizeable.directive.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar Rx_1 = require('rxjs/Rx');\nvar ResizeableDirective = (function () {\n    function ResizeableDirective(element) {\n        this.resizeEnabled = true;\n        this.resize = new core_1.EventEmitter();\n        this.resizing = false;\n        this.element = element.nativeElement;\n        if (this.resizeEnabled) {\n            var node = document.createElement('span');\n            node.classList.add('resize-handle');\n            this.element.appendChild(node);\n        }\n    }\n    ResizeableDirective.prototype.ngOnDestroy = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    ResizeableDirective.prototype.onMouseup = function () {\n        this.resizing = false;\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n            this.resize.emit(this.element.clientWidth);\n        }\n    };\n    ResizeableDirective.prototype.onMousedown = function (event) {\n        var _this = this;\n        var isHandle = (event.target).classList.contains('resize-handle');\n        var initialWidth = this.element.clientWidth;\n        var mouseDownScreenX = event.screenX;\n        if (isHandle) {\n            event.stopPropagation();\n            this.resizing = true;\n            this.subscription = Rx_1.Observable.fromEvent(document, 'mousemove')\n                .subscribe(function (e) { return _this.move(e, initialWidth, mouseDownScreenX); });\n        }\n    };\n    ResizeableDirective.prototype.move = function (event, initialWidth, mouseDownScreenX) {\n        var movementX = event.screenX - mouseDownScreenX;\n        var newWidth = initialWidth + movementX;\n        var overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n        var underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n        if (overMinWidth && underMaxWidth) {\n            this.element.style.width = newWidth + \"px\";\n        }\n    };\n    ResizeableDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[resizeable]',\n                    host: {\n                        '[class.resizeable]': 'resizeEnabled'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    ResizeableDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n    ]; };\n    ResizeableDirective.propDecorators = {\n        'resizeEnabled': [{ type: core_1.Input },],\n        'minWidth': [{ type: core_1.Input },],\n        'maxWidth': [{ type: core_1.Input },],\n        'resize': [{ type: core_1.Output },],\n        'onMouseup': [{ type: core_1.HostListener, args: ['document:mouseup',] },],\n        'onMousedown': [{ type: core_1.HostListener, args: ['mousedown', ['$event'],] },],\n    };\n    return ResizeableDirective;\n}());\nexports.ResizeableDirective = ResizeableDirective;\n//# sourceMappingURL=resizeable.directive.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/directives/visibility.directive.js":"\"use strict\";\nvar core_1 = require('@angular/core');\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibility-observer\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\nvar VisibilityDirective = (function () {\n    function VisibilityDirective(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.isVisible = false;\n        this.visible = new core_1.EventEmitter();\n    }\n    VisibilityDirective.prototype.ngOnInit = function () {\n        this.runCheck();\n    };\n    VisibilityDirective.prototype.ngOnDestroy = function () {\n        clearTimeout(this.timeout);\n    };\n    VisibilityDirective.prototype.onVisibilityChange = function () {\n        var _this = this;\n        // trigger zone recalc for columns\n        this.zone.run(function () {\n            _this.isVisible = true;\n            _this.visible.emit(true);\n        });\n    };\n    VisibilityDirective.prototype.runCheck = function () {\n        var _this = this;\n        var check = function () {\n            // https://davidwalsh.name/offsetheight-visibility\n            var _a = _this.element.nativeElement, offsetHeight = _a.offsetHeight, offsetWidth = _a.offsetWidth;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(_this.timeout);\n                _this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(_this.timeout);\n                _this.zone.runOutsideAngular(function () {\n                    _this.timeout = setTimeout(function () { return check(); }, 50);\n                });\n            }\n        };\n        setTimeout(function () { return check(); });\n    };\n    VisibilityDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[visibility-observer]' },] },\n    ];\n    /** @nocollapse */\n    VisibilityDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n        { type: core_1.NgZone, },\n    ]; };\n    VisibilityDirective.propDecorators = {\n        'isVisible': [{ type: core_1.HostBinding, args: ['class.visible',] },],\n        'visible': [{ type: core_1.Output },],\n    };\n    return VisibilityDirective;\n}());\nexports.VisibilityDirective = VisibilityDirective;\n//# sourceMappingURL=visibility.directive.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/types/click.type.js":"\"use strict\";\n(function (ClickType) {\n    ClickType[ClickType[\"single\"] = 'single'] = \"single\";\n    ClickType[ClickType[\"double\"] = 'double'] = \"double\";\n})(exports.ClickType || (exports.ClickType = {}));\nvar ClickType = exports.ClickType;\n//# sourceMappingURL=click.type.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/types/column-mode.type.js":"\"use strict\";\n(function (ColumnMode) {\n    ColumnMode[ColumnMode[\"standard\"] = 'standard'] = \"standard\";\n    ColumnMode[ColumnMode[\"flex\"] = 'flex'] = \"flex\";\n    ColumnMode[ColumnMode[\"force\"] = 'force'] = \"force\";\n})(exports.ColumnMode || (exports.ColumnMode = {}));\nvar ColumnMode = exports.ColumnMode;\n//# sourceMappingURL=column-mode.type.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/types/selection.type.js":"\"use strict\";\n(function (SelectionType) {\n    SelectionType[SelectionType[\"single\"] = 'single'] = \"single\";\n    SelectionType[SelectionType[\"multi\"] = 'multi'] = \"multi\";\n    SelectionType[SelectionType[\"cell\"] = 'cell'] = \"cell\";\n    SelectionType[SelectionType[\"checkbox\"] = 'checkbox'] = \"checkbox\";\n})(exports.SelectionType || (exports.SelectionType = {}));\nvar SelectionType = exports.SelectionType;\n//# sourceMappingURL=selection.type.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/types/sort-direction.type.js":"\"use strict\";\n(function (SortDirection) {\n    SortDirection[SortDirection[\"asc\"] = 'asc'] = \"asc\";\n    SortDirection[SortDirection[\"desc\"] = 'desc'] = \"desc\";\n})(exports.SortDirection || (exports.SortDirection = {}));\nvar SortDirection = exports.SortDirection;\n//# sourceMappingURL=sort-direction.type.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/types/sort.type.js":"\"use strict\";\n(function (SortType) {\n    SortType[SortType[\"single\"] = 'single'] = \"single\";\n    SortType[SortType[\"multi\"] = 'multi'] = \"multi\";\n})(exports.SortType || (exports.SortType = {}));\nvar SortType = exports.SortType;\n//# sourceMappingURL=sort.type.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/camel-case.js":"\"use strict\";\n/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n * @param  {string} str\n * @return {string} camel case string\n */\nfunction camelCase(str) {\n    // Replace special characters with a space\n    str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n    // put a space before an uppercase letter\n    str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n    // Lower case first character and some other stuff\n    str = str.replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '').trim().toLowerCase();\n    // uppercase characters preceded by a space or number\n    str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\n        return b.trim() + c.toUpperCase();\n    });\n    return str;\n}\nexports.camelCase = camelCase;\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n *\n * @export\n * @param {any} str\n * @returns string\n */\nfunction deCamelCase(str) {\n    return str\n        .replace(/([A-Z])/g, function (match) { return (\" \" + match); })\n        .replace(/^./, function (match) { return match.toUpperCase(); });\n}\nexports.deCamelCase = deCamelCase;\n//# sourceMappingURL=camel-case.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/column-helper.js":"\"use strict\";\nvar utils_1 = require('../utils');\n/**\n * Sets the column defaults\n *\n * @export\n * @param {any[]} columns\n * @returns\n */\nfunction setColumnDefaults(columns) {\n    if (!columns)\n        return;\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n        var column = columns_1[_i];\n        if (!column.$$id) {\n            column.$$id = utils_1.id();\n        }\n        // translate name => prop\n        if (!column.prop && column.name) {\n            column.prop = utils_1.camelCase(column.name);\n        }\n        // format props if no name passed\n        if (column.prop && !column.name) {\n            column.name = utils_1.deCamelCase(column.prop);\n        }\n        if (!column.hasOwnProperty('resizeable')) {\n            column.resizeable = true;\n        }\n        if (!column.hasOwnProperty('sortable')) {\n            column.sortable = true;\n        }\n        if (!column.hasOwnProperty('draggable')) {\n            column.draggable = true;\n        }\n        if (!column.hasOwnProperty('canAutoResize')) {\n            column.canAutoResize = true;\n        }\n        if (!column.hasOwnProperty('width')) {\n            column.width = 150;\n        }\n    }\n}\nexports.setColumnDefaults = setColumnDefaults;\n/**\n * Translates templates definitions to objects\n *\n * @export\n * @param {DataTableColumnDirective[]} templates\n * @returns {any[]}\n */\nfunction translateTemplates(templates) {\n    var result = [];\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\n        var temp = templates_1[_i];\n        var col = {};\n        var props = Object.getOwnPropertyNames(temp);\n        for (var _a = 0, props_1 = props; _a < props_1.length; _a++) {\n            var prop = props_1[_a];\n            col[prop] = temp[prop];\n        }\n        if (temp.headerTemplate) {\n            col.headerTemplate = temp.headerTemplate;\n        }\n        if (temp.cellTemplate) {\n            col.cellTemplate = temp.cellTemplate;\n        }\n        result.push(col);\n    }\n    return result;\n}\nexports.translateTemplates = translateTemplates;\n//# sourceMappingURL=column-helper.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/index.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./id'));\n__export(require('./column'));\n__export(require('./deep-getter'));\n__export(require('./camel-case'));\n__export(require('./keys'));\n__export(require('./math'));\n__export(require('./prefixes'));\n__export(require('./scrollbar-width'));\n__export(require('./selection'));\n__export(require('./translate'));\n__export(require('./throttle'));\n__export(require('./sort'));\n__export(require('./row-height-cache'));\n__export(require('./column-helper'));\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/id.js":"\"use strict\";\n/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nfunction id() {\n    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n}\nexports.id = id;\n//# sourceMappingURL=id.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/column.js":"\"use strict\";\n/**\n * Returns the columns by pin.\n * @param {array} cols\n */\nfunction columnsByPin(cols) {\n    var ret = {\n        left: [],\n        center: [],\n        right: []\n    };\n    if (cols) {\n        for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {\n            var col = cols_1[_i];\n            if (col.frozenLeft) {\n                ret.left.push(col);\n            }\n            else if (col.frozenRight) {\n                ret.right.push(col);\n            }\n            else {\n                ret.center.push(col);\n            }\n        }\n    }\n    return ret;\n}\nexports.columnsByPin = columnsByPin;\n/**\n * Returns the widths of all group sets of a column\n * @param {object} groups\n * @param {array} all\n */\nfunction columnGroupWidths(groups, all) {\n    return {\n        left: columnTotalWidth(groups.left),\n        center: columnTotalWidth(groups.center),\n        right: columnTotalWidth(groups.right),\n        total: columnTotalWidth(all)\n    };\n}\nexports.columnGroupWidths = columnGroupWidths;\n/**\n * Calculates the total width of all columns and their groups\n * @param {array} columns\n * @param {string} prop width to get\n */\nfunction columnTotalWidth(columns, prop) {\n    var totalWidth = 0;\n    if (columns) {\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var c = columns_1[_i];\n            var has = prop && c[prop];\n            var width = has ? c[prop] : c.width;\n            totalWidth = totalWidth + parseFloat(width);\n        }\n    }\n    return totalWidth;\n}\nexports.columnTotalWidth = columnTotalWidth;\n/**\n * Calculates the total width of all columns and their groups\n * @param {array} columns\n * @param {string} property width to get\n */\nfunction columnsTotalWidth(columns, prop) {\n    var totalWidth = 0;\n    for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n        var column = columns_2[_i];\n        var has = prop && column[prop];\n        totalWidth = totalWidth + (has ? column[prop] : column.width);\n    }\n    return totalWidth;\n}\nexports.columnsTotalWidth = columnsTotalWidth;\nfunction columnsByPinArr(val) {\n    var colsByPinArr = [];\n    var colsByPin = columnsByPin(val);\n    colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n    colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n    colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n    return colsByPinArr;\n}\nexports.columnsByPinArr = columnsByPinArr;\n//# sourceMappingURL=column.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/deep-getter.js":"\"use strict\";\n/**\n * Returns a deep object given a string. zoo['animal.type']\n * @param {object} obj\n * @param {string} path\n */\nfunction deepValueGetter(obj, path) {\n    if (!obj || !path)\n        return obj;\n    var current = obj;\n    var split = path.split('.');\n    if (split.length) {\n        for (var i = 0, len = split.length; i < len; i++) {\n            current = current[split[i]];\n            // if found undefined, return empty string\n            if (current === undefined || current === null)\n                return '';\n        }\n    }\n    return current;\n}\nexports.deepValueGetter = deepValueGetter;\n//# sourceMappingURL=deep-getter.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/keys.js":"\"use strict\";\n(function (Keys) {\n    Keys[Keys[\"up\"] = 38] = \"up\";\n    Keys[Keys[\"down\"] = 40] = \"down\";\n    Keys[Keys[\"return\"] = 13] = \"return\";\n    Keys[Keys[\"escape\"] = 27] = \"escape\";\n    Keys[Keys[\"left\"] = 37] = \"left\";\n    Keys[Keys[\"right\"] = 39] = \"right\";\n})(exports.Keys || (exports.Keys = {}));\nvar Keys = exports.Keys;\n//# sourceMappingURL=keys.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/math.js":"\"use strict\";\nvar column_1 = require('./column');\n/**\n * Calculates the Total Flex Grow\n * @param {array}\n */\nfunction getTotalFlexGrow(columns) {\n    var totalFlexGrow = 0;\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n        var c = columns_1[_i];\n        totalFlexGrow += c.flexGrow || 0;\n    }\n    return totalFlexGrow;\n}\nexports.getTotalFlexGrow = getTotalFlexGrow;\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n * @param {array} all columns\n * @param {int} width\n */\nfunction adjustColumnWidths(allColumns, expectedWidth) {\n    var columnsWidth = column_1.columnsTotalWidth(allColumns);\n    var totalFlexGrow = getTotalFlexGrow(allColumns);\n    var colsByGroup = column_1.columnsByPin(allColumns);\n    if (columnsWidth !== expectedWidth) {\n        scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n    }\n}\nexports.adjustColumnWidths = adjustColumnWidths;\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n * @param {array} colsByGroup\n * @param {int} maxWidth\n * @param {int} totalFlexGrow\n */\nfunction scaleColumns(colsByGroup, maxWidth, totalFlexGrow) {\n    // calculate total width and flexgrow points for coulumns that can be resized\n    for (var attr in colsByGroup) {\n        for (var _i = 0, _a = colsByGroup[attr]; _i < _a.length; _i++) {\n            var column = _a[_i];\n            if (!column.canAutoResize) {\n                maxWidth -= column.width;\n                totalFlexGrow -= column.flexGrow;\n            }\n            else {\n                column.width = 0;\n            }\n        }\n    }\n    var hasMinWidth = {};\n    var remainingWidth = maxWidth;\n    // resize columns until no width is left to be distributed\n    do {\n        var widthPerFlexPoint = remainingWidth / totalFlexGrow;\n        remainingWidth = 0;\n        for (var attr in colsByGroup) {\n            for (var _b = 0, _c = colsByGroup[attr]; _b < _c.length; _b++) {\n                var column = _c[_b];\n                // if the column can be resize and it hasn't reached its minimum width yet\n                if (column.canAutoResize && !hasMinWidth[column.prop]) {\n                    var newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n                    if (column.minWidth !== undefined && newWidth < column.minWidth) {\n                        remainingWidth += newWidth - column.minWidth;\n                        column.width = column.minWidth;\n                        hasMinWidth[column.prop] = true;\n                    }\n                    else {\n                        column.width = newWidth;\n                    }\n                }\n            }\n        }\n    } while (remainingWidth !== 0);\n}\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when nesc.\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proporation the widths given the min / max / noraml widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proporational widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the orginial width; not the newly proporatied widths.\n *\n * @param {array} allColumns\n * @param {int} expectedWidth\n */\nfunction forceFillColumnWidths(allColumns, expectedWidth, startIdx, allowBleed, defaultColWidth) {\n    if (defaultColWidth === void 0) { defaultColWidth = 300; }\n    var columnsToResize = allColumns\n        .slice(startIdx + 1, allColumns.length)\n        .filter(function (c) {\n        return c.canAutoResize !== false;\n    });\n    for (var _i = 0, columnsToResize_1 = columnsToResize; _i < columnsToResize_1.length; _i++) {\n        var column = columnsToResize_1[_i];\n        if (!column.$$oldWidth) {\n            column.$$oldWidth = column.width;\n        }\n    }\n    var additionWidthPerColumn = 0;\n    var exceedsWindow = false;\n    var contentWidth = getContentWidth(allColumns, defaultColWidth);\n    var remainingWidth = expectedWidth - contentWidth;\n    var columnsProcessed = [];\n    // This loop takes care of the\n    do {\n        additionWidthPerColumn = remainingWidth / columnsToResize.length;\n        exceedsWindow = contentWidth >= expectedWidth;\n        for (var _a = 0, columnsToResize_2 = columnsToResize; _a < columnsToResize_2.length; _a++) {\n            var column = columnsToResize_2[_a];\n            if (exceedsWindow && allowBleed) {\n                column.width = column.$$oldWidth || column.width || defaultColWidth;\n            }\n            else {\n                var newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n                if (column.minWidth && newSize < column.minWidth) {\n                    column.width = column.minWidth;\n                    columnsProcessed.push(column);\n                }\n                else if (column.maxWidth && newSize > column.maxWidth) {\n                    column.width = column.maxWidth;\n                    columnsProcessed.push(column);\n                }\n                else {\n                    column.width = newSize;\n                }\n            }\n            column.width = Math.max(0, column.width);\n        }\n        contentWidth = getContentWidth(allColumns);\n        remainingWidth = expectedWidth - contentWidth;\n        removeProcessedColumns(columnsToResize, columnsProcessed);\n    } while (remainingWidth > 0 && columnsToResize.length !== 0);\n}\nexports.forceFillColumnWidths = forceFillColumnWidths;\n/**\n * Remove the processed columns from the current active columns.\n *\n * @param columnsToResize  Array containing the columns that need to be resized.\n * @param columnsProcessed Array containing the columns that have already been processed.\n */\nfunction removeProcessedColumns(columnsToResize, columnsProcessed) {\n    for (var _i = 0, columnsProcessed_1 = columnsProcessed; _i < columnsProcessed_1.length; _i++) {\n        var column = columnsProcessed_1[_i];\n        var index = columnsToResize.indexOf(column);\n        columnsToResize.splice(index, 1);\n    }\n}\n/**\n * Gets the width of the columns\n *\n * @param {array} allColumns\n * @param {number} [defaultColWidth=300]\n * @returns {number}\n */\nfunction getContentWidth(allColumns, defaultColWidth) {\n    if (defaultColWidth === void 0) { defaultColWidth = 300; }\n    var contentWidth = 0;\n    for (var _i = 0, allColumns_1 = allColumns; _i < allColumns_1.length; _i++) {\n        var column = allColumns_1[_i];\n        contentWidth += (column.width || defaultColWidth);\n    }\n    return contentWidth;\n}\n//# sourceMappingURL=math.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/prefixes.js":"\"use strict\";\nvar camel_case_1 = require('./camel-case');\nvar cache = {};\nvar testStyle = document.createElement('div').style;\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nvar prefix = (function () {\n    var styles = window.getComputedStyle(document.documentElement, '');\n    var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/))[1];\n    var dom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];\n    return {\n        dom: dom,\n        lowercase: pre,\n        css: \"-\" + pre + \"-\",\n        js: pre[0].toUpperCase() + pre.substr(1)\n    };\n})();\nfunction getVendorPrefixedName(property) {\n    var name = camel_case_1.camelCase(property);\n    if (!cache[name]) {\n        if (testStyle[prefix.css + property] !== undefined) {\n            cache[name] = prefix.css + property;\n        }\n        else if (testStyle[property] !== undefined) {\n            cache[name] = property;\n        }\n    }\n    return cache[name];\n}\nexports.getVendorPrefixedName = getVendorPrefixedName;\n//# sourceMappingURL=prefixes.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/row-height-cache.js":"\"use strict\";\n/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nvar RowHeightCache = (function () {\n    function RowHeightCache() {\n        /**\n         * Tree Array stores the cumulative information of the row heights to perform efficient\n         * range queries and updates.  Currently the tree is initialized to the base row\n         * height instead of the detail row height.\n         */\n        this.treeArray = [];\n    }\n    /**\n     * Clear the Tree array.\n     */\n    RowHeightCache.prototype.clearCache = function () {\n        this.treeArray = [];\n    };\n    /**\n     * Initialize the Fenwick tree with row Heights.\n     *\n     * @param rows The array of rows which contain the expanded status.\n     * @param rowHeight The row height.\n     * @param detailRowHeight The detail row height.\n     */\n    RowHeightCache.prototype.initCache = function (rows, rowHeight, detailRowHeight) {\n        if (isNaN(rowHeight)) {\n            throw new Error(\"Row Height cache initialization failed. Please ensure that 'rowHeight' is a\\n        valid number value: (\" + rowHeight + \") when 'scrollbarV' is enabled.\");\n        }\n        // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n        if (isNaN(detailRowHeight)) {\n            throw new Error(\"Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\\n        valid number value: (\" + detailRowHeight + \") when 'scrollbarV' is enabled.\");\n        }\n        var n = rows.length;\n        this.treeArray = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            this.treeArray[i] = 0;\n        }\n        for (var i = 0; i < n; ++i) {\n            var currentRowHeight = rowHeight;\n            // Add the detail row height to the already expanded rows.\n            // This is useful for the table that goes through a filter or sort.\n            if (rows[i] && rows[i].$$expanded === 1) {\n                currentRowHeight += detailRowHeight;\n            }\n            this.update(i, currentRowHeight);\n        }\n    };\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.  Below handles edge cases.\n     *\n     * @param scrollY - The scrollY position.\n     * @returns {number} - Index representing the first row visible in the viewport\n     */\n    RowHeightCache.prototype.getRowIndex = function (scrollY) {\n        if (scrollY === 0)\n            return 0;\n        return this.calcRowIndex(scrollY);\n    };\n    /**\n     * When a row is expanded or rowHeight is changed, update the height.  This can\n     * be utilized in future when Angular Data table supports dynamic row heights.\n     *\n     *\n     * @param atRowIndex Update the data at this index row in the grid.\n     * @param byRowHeight Update by the rowHeight provided.\n     */\n    RowHeightCache.prototype.update = function (atRowIndex, byRowHeight) {\n        if (!this.treeArray.length) {\n            throw new Error(\"Update at index \" + atRowIndex + \" with value \" + byRowHeight + \" failed:\\n        Row Height cache not initialized.\");\n        }\n        var n = this.treeArray.length;\n        atRowIndex |= 0;\n        while (atRowIndex < n) {\n            this.treeArray[atRowIndex] += byRowHeight;\n            atRowIndex |= (atRowIndex + 1);\n        }\n    };\n    /**\n     * Range Sum query from 1 to the rowIndex\n     *\n     * @param atIndex The row index until which the total height needs to be obtained.\n     * @returns {number} The total height from row 1 to the rowIndex.\n     */\n    RowHeightCache.prototype.query = function (atIndex) {\n        if (!this.treeArray.length) {\n            throw new Error(\"query at index \" + atIndex + \" failed: Fenwick tree array not initialized.\");\n        }\n        var sum = 0;\n        atIndex |= 0;\n        while (atIndex >= 0) {\n            sum += this.treeArray[atIndex];\n            atIndex = (atIndex & (atIndex + 1)) - 1;\n        }\n        return sum;\n    };\n    /**\n     * Find the total height between 2 row indexes\n     * @param atIndexA The row index from\n     * @param atIndexB The row index to\n     * @returns {number} total pixel height between 2 row indexes.\n     */\n    RowHeightCache.prototype.queryBetween = function (atIndexA, atIndexB) {\n        return this.query(atIndexB) - this.query(atIndexA - 1);\n    };\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.\n     *\n     * @param sum - The scrollY position.\n     * @returns {number} - Index representing the first row visible in the viewport\n     */\n    RowHeightCache.prototype.calcRowIndex = function (sum) {\n        if (!this.treeArray.length)\n            return 0;\n        var pos = -1;\n        var dataLength = this.treeArray.length;\n        // Get the highest bit for the block size.\n        var highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n        for (var blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n            var nextPos = pos + blockSize;\n            if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n                sum -= this.treeArray[nextPos];\n                pos = nextPos;\n            }\n        }\n        return pos + 1;\n    };\n    return RowHeightCache;\n}());\nexports.RowHeightCache = RowHeightCache;\n//# sourceMappingURL=row-height-cache.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/scrollbar-width.js":"\"use strict\";\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n * @return {int} width\n */\nfunction getScrollBarWidth() {\n    var outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    outer.style.msOverflowStyle = 'scrollbar';\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.offsetWidth;\n    outer.style.overflow = 'scroll';\n    var inner = document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n    var widthWithScroll = inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\nexports.getScrollBarWidth = getScrollBarWidth;\n;\nexports.scrollbarWidth = getScrollBarWidth();\n//# sourceMappingURL=scrollbar-width.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/selection.js":"\"use strict\";\nfunction selectRows(selected, row, comparefn) {\n    var selectedIndex = comparefn(row, selected);\n    if (selectedIndex > -1) {\n        selected.splice(selectedIndex, 1);\n    }\n    else {\n        selected.push(row);\n    }\n    return selected;\n}\nexports.selectRows = selectRows;\nfunction selectRowsBetween(selected, rows, index, prevIndex, comparefn) {\n    var reverse = index < prevIndex;\n    for (var i = 0, len = rows.length; i < len; i++) {\n        var row = rows[i];\n        var greater = i >= prevIndex && i <= index;\n        var lesser = i <= prevIndex && i >= index;\n        var range = { start: 0, end: 0 };\n        if (reverse) {\n            range = {\n                start: index,\n                end: (prevIndex - index)\n            };\n        }\n        else {\n            range = {\n                start: prevIndex,\n                end: index + 1\n            };\n        }\n        if ((reverse && lesser) || (!reverse && greater)) {\n            var idx = comparefn(row, selected);\n            // if reverse shift selection (unselect) and the\n            // row is already selected, remove it from selected\n            if (reverse && idx > -1) {\n                selected.splice(idx, 1);\n                continue;\n            }\n            // if in the positive range to be added to `selected`, and\n            // not already in the selected array, add it\n            if (i >= range.start && i < range.end) {\n                if (idx === -1) {\n                    selected.push(row);\n                }\n            }\n        }\n    }\n    return selected;\n}\nexports.selectRowsBetween = selectRowsBetween;\n//# sourceMappingURL=selection.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/sort.js":"\"use strict\";\nvar types_1 = require('../types');\nvar deep_getter_1 = require('./deep-getter');\n/**\n * Gets the next sort direction\n * @param  {SortType}      sortType\n * @param  {SortDirection} currentSort\n * @return {SortDirection}\n */\nfunction nextSortDir(sortType, current) {\n    if (sortType === types_1.SortType.single) {\n        if (current === types_1.SortDirection.asc) {\n            return types_1.SortDirection.desc;\n        }\n        else {\n            return types_1.SortDirection.asc;\n        }\n    }\n    else {\n        if (!current) {\n            return types_1.SortDirection.asc;\n        }\n        else if (current === types_1.SortDirection.asc) {\n            return types_1.SortDirection.desc;\n        }\n        else if (current === types_1.SortDirection.desc) {\n            return undefined;\n        }\n    }\n}\nexports.nextSortDir = nextSortDir;\n;\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n * @param  {any}    a\n * @param  {any}    b\n * @return {number} position\n */\nfunction orderByComparator(a, b) {\n    if (a === null || typeof a === 'undefined')\n        a = 0;\n    if (b === null || typeof b === 'undefined')\n        b = 0;\n    if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n        // Convert to string in case of a=0 or b=0\n        a = String(a);\n        b = String(b);\n        // Isn't a number so lowercase the string to properly compare\n        if (a.toLowerCase() < b.toLowerCase())\n            return -1;\n        if (a.toLowerCase() > b.toLowerCase())\n            return 1;\n    }\n    else {\n        // Parse strings as numbers to compare properly\n        if (parseFloat(a) < parseFloat(b))\n            return -1;\n        if (parseFloat(a) > parseFloat(b))\n            return 1;\n    }\n    // equal each other\n    return 0;\n}\nexports.orderByComparator = orderByComparator;\n/**\n * Sorts the rows\n *\n * @export\n * @param {any[]} rows\n * @param {any[]} columns\n * @param {any[]} dirs\n * @returns\n */\nfunction sortRows(rows, columns, dirs) {\n    if (!rows || !dirs || !dirs.length || !columns)\n        return rows;\n    var temp = rows.slice();\n    var cols = columns.reduce(function (obj, col) {\n        if (col.comparator && typeof col.comparator === 'function') {\n            obj[col.prop] = col.comparator;\n        }\n        return obj;\n    }, {});\n    return temp.sort(function (a, b) {\n        for (var _i = 0, dirs_1 = dirs; _i < dirs_1.length; _i++) {\n            var _a = dirs_1[_i], prop = _a.prop, dir = _a.dir;\n            var propA = deep_getter_1.deepValueGetter(a, prop);\n            var propB = deep_getter_1.deepValueGetter(b, prop);\n            var compareFn = cols[prop] || orderByComparator;\n            var comparison = dir !== types_1.SortDirection.desc ?\n                compareFn(propA, propB) :\n                -compareFn(propA, propB);\n            // Don't return 0 yet in case of needing to sort by next property\n            if (comparison !== 0)\n                return comparison;\n        }\n        // equal each other\n        return 0;\n    });\n}\nexports.sortRows = sortRows;\n//# sourceMappingURL=sort.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/types/index.js":"\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./column-mode.type'));\n__export(require('./sort.type'));\n__export(require('./sort-direction.type'));\n__export(require('./selection.type'));\n__export(require('./click.type'));\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/throttle.js":"\"use strict\";\n/**\n * Throttle a function\n *\n * @export\n * @param {*} func\n * @param {number} wait\n * @param {*} [options]\n * @returns\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    var context;\n    var args;\n    var result;\n    var timeout = null;\n    var previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        var now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\nexports.throttle = throttle;\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n *\n * @export\n * @param {number} duration\n * @param {*} [options]\n * @returns\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\nexports.throttleable = throttleable;\n//# sourceMappingURL=throttle.js.map","/home/travis/build/npmtest/node-npmtest-angular2-data-table/node_modules/angular2-data-table/release/utils/translate.js":"\"use strict\";\nvar prefixes_1 = require('./prefixes');\nvar camel_case_1 = require('./camel-case');\n// browser detection and prefixing tools\nvar transform = prefixes_1.getVendorPrefixedName('transform');\nvar backfaceVisibility = prefixes_1.getVendorPrefixedName('backfaceVisibility');\nvar hasCSSTransforms = !!prefixes_1.getVendorPrefixedName('transform');\nvar hasCSS3DTransforms = !!prefixes_1.getVendorPrefixedName('perspective');\nvar ua = window.navigator.userAgent;\nvar isSafari = (/Safari\\//).test(ua) && !(/Chrome\\//).test(ua);\nfunction translateXY(styles, x, y) {\n    if (hasCSSTransforms) {\n        if (!isSafari && hasCSS3DTransforms) {\n            styles[transform] = \"translate3d(\" + x + \"px, \" + y + \"px, 0)\";\n            styles[backfaceVisibility] = 'hidden';\n        }\n        else {\n            styles[camel_case_1.camelCase(transform)] = \"translate(\" + x + \"px, \" + y + \"px)\";\n        }\n    }\n    else {\n        styles.top = y + \"px\";\n        styles.left = x + \"px\";\n    }\n}\nexports.translateXY = translateXY;\n//# sourceMappingURL=translate.js.map"}